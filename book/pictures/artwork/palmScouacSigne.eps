%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: palmScouacSigne.pdf
%%Creator: Adobe Acrobat 8.0
%%For: leboudec
%%CreationDate: 20.02.2010, 16:50:53
%%BoundingBox: -1 0 500 566
%%HiResBoundingBox: 0 0 499.4762 565.4917
%%CropBox: 0 0 499.4762 565.4917
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: 
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 4486 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
   xap:CreatorTool="PScript5.dll Version 5.2.2"
   xap:ModifyDate="2010-02-20T16:50:47+01:00"
   xap:CreateDate="2010-02-20T16:50:15+01:00"
   xap:MetadataDate="2010-02-20T16:50:47+01:00"
   dc:format="application/pdf"
   pdf:Producer="Acrobat Distiller 8.1.0 (Windows)"
   xapMM:DocumentID="uuid:2e492023-8260-489c-9025-a1fdbf98996b"
   xapMM:InstanceID="uuid:d84b19a0-9530-448a-b580-36cbc3d7c69f">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft PowerPoint - palmScouac.ppt [Compatibility Mode]</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>leboudec</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/0 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 221 
/Lookup <~
s8W,urr26Llc7&djlPUhlKZL5aihlNcd0qphr!\_l21ATMMd8n!s>'`S>`Bb)B'MB-n$u32Jd2GLPLY>
L5(M?Lq1(,`Pog[kih3mk5YJ^!WiFoSXlONUF@W@d*U.ac-=bfeB5qV\$riX]"4rCX/rD(daHS;p@e7T
p\k'hY-+q5ZEiKLi[l`61c.$X77C-R;as5G7n6'34?Oo9,ln#I8P)L&IXYF&=[PPD(Ddl2+X*YWUrLEo
m-O)qhVPNBZ0(32R@0JO[^Nrc^Rh$gBk_9/-RV/E5Th0lF`hh\KnZ1mTV%jKYHP/!nF68Lq3RG7QBmi%
Q'ISuP`q;pP*1ujOcb`eOSo%SqYL'Wn*f]4md]i;o^qcQ;,MCUF55R+TqS/2/1gJeoj(j/:/4P\:f)1Q
Ed)_O^:q<i@::c@/m)4XYct@D]=ZhPgY1B8M2@)Af[u7GO,f6\NK&pVN/W[QMmKar`5KU2_SX.*_8*k%
G'8%IDf6:&'+b]d#RC\="9^_F3D3"<AS#F`A7TIkCR^f_cHa_gg"Greo'Pi3aN2GkR[V^SdsljsJ:N/T
>[0<N3bDu9@q0"sI=6KjI&a3Hh;-o#]tM(k]XYJ][C*DeG^*Cq>#n[)9MA,!)]KV2(_mc#+sJ3c0ek.-
.NKNM"U,&B&e]bHJU;`jH?smTDJh['57%W&5!D/ID/I2._f0R684Z912`F#g5uLTY4$,MZ1,94F$Q^?1
"pP:=['XR_C(1U]j5]1%Xf]gkbi%F;iSibGe^`:'f6MXeoCMQ!,U?]&?8+&e<E3%sVl*Tt<t>fPdF$@<
V56s`:LIR<jQ,CQf%+JHB0npOq"XVg>?_~>
>>
/CSD add_res
/1 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 155 
/Lookup <~
s8W+hS=C#t%0-A.DJj@ao^r%Xqld3,/M/QFSXkq,P4nVCqYL&aUneY;'+YTaR$a6P&.kb;V\0UTW2QZi
q"U\^V7=%F(Ddn^p\4[drf)ns$O[?7T:b?2k]qH!+<Ve]L5)S&VDU4g7Rfj76ULkT!B2qrM2@)HhqsKU
NroIdU8"BWUSIMTos_E>FEDVQI=3q/1ngV:,U=Wn2E%Y<XHo0<`PogdnaS@i1=+:mrVc\dSt=TefI&$o
gt^\!BkbW.a!`>ahVR+ELPP0[lGgi`.4H]E;cDi@k./%5,paj`H@"rEm.9i?b0%jX/1bURCm:0K(`4+Y
n*_DC+mn[ag"G$[!Wj)O("LjbYct@=['[HW]*8HD[^NX)j5^(8r0j(C#RC^]cH_B-N7?A,q>'j;f%,D'
JHQ)Y=BJ\nmd?0uO9Gdk3B9)c5s`T5aCJglWMuk^Q'E:-)cg!??!Ub,o(#ON:*(Gt>$>*tR@.Pp@nTHf
nF5qre'm=9iX#ntlg*kUE,]2m?r^3,bKJ)E^qcG/RnZUO=]nn-Wi@Nu.WTQM_SX0DKn\dUl+t3P)B'OW
kN?)T>[C`CjlPT2?XMmTjFDc2~>
>>
/CSD add_res
/2 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 234 
/Lookup <~
s8W,:_o"i/6N@)dE,]dRhr!eelu[>k#RC\I&.mRLg5ClIXf\]Z0JFt+.Rlls"9\iV.4H&L(I:>Q[C*Es
gY7O?L`df_\$rjCqYKgTo6P_/#mgnN&e^Y%Rdfh9N/W]/',,5"D;F%(XK8K\2)Qd1.'B_Up\4Dh?XEs?
"UtnMH$O\ni8F8"oRD@?q"XXTo()5:md'3)k2tghkNDd@r2Zm!9MA-j\[eK1UGOeaJUrB5O,k;%*LE+Z
rr2nrWMqL&/l#/:b0%lgjlN#&SA2hR?smAiI!j2`c-t.j='&H(!<JUVRITh;jQ,BpTV/-XV3I4/NK&pG
I=7ZWS[uDDd*U/(l05pr^.:dc2E!Hd91qcF7iE9aYct@0Vl+umI`KLL=]nmaM2Cs"p)=qiSt;NoEcMNq
$^$R6`5KUmrV]Vl;FsGO?=$q^+sK695K:^_aiVZ:]=Up;;,^Cl%hB0T"pQ+i*[)[M-RU:!MMfX%bZ\1R
CMR]d<`]%lq>:'dlK[YWF`f`+3gGtqQBmi(R$aVBU8Ffb<E3$N/M0[k:#k9oL5(G!Ci%MHd:$HlTqS1Q
p%;m-AZDc1F)uCa4$0^PZ!1F:hVR+NOH<s^A!<+?ZEgc"5!HWl]G2.rYHP-?A7X]Zia#hq['[3qgt['r
Fr2&5cd0r$kig[OfISR)K7efi]tFLM"3AR)=BJZa2`G>\B%bkjZa6u)6:,R-DUm:f1,:Td!Wp?[`HQNM
cHa]],pe8!KhkK?_SX0?J:PJP_77"bH[C)b,UD@-iLca7n*f^iG^)>54Bu,rbKJ(AB4nZ][Q-?.eC;uf
EH/e0^i+.05X7Tcf%*Yo:oL=kLPLZPmHpC4S!&qtJqASfBP9h'7AQ`TC2.LDNfIgfC"LtgKS5$,daBj)
0`~>
>>
/CSD add_res
/3 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 234 
/Lookup <~
s8W,BbKE@E7K<Dg>?b=kio9Y(p"7pLWMuk%>[/s:0UJ,mqYL'RlKXRsP9(bd!WiE:',*`#6Z$[WCi!nu
%hB9c'%PO_YHP-FCMU;aZj@$F'bqH?1c-U/.!p;fMMd:3EcPi,BP1sj,pak1TV2)Tpt"$IOcbbb2`Dm'
+c(r1jQ,CA`l:,'4;SeMN/W_>bfo_Oo[(t3Yct@tlg(:>U.\-P"pP8`/M2*fF`DD@TqS.c#RE%8/hAP)
!s8W:&.hoE=5;TdmdBMP\$o[M?6C@5q>'hQ6:/N)_9L6L7n6'eDJoCMr:fs[St;NbAS"%h4uG2T3]];e
5X87H;mEU4kND#ZJUp*Q5r(2N,U=WC$O_E4IX$*^*??0=`5M$/m,R-dH$OZ="U32scJ[X=b0%lSdF#;,
ZX$jBcd0oS(`9BWXdu#R4$,O,Y-+ChT1DLDoCMSIp@c&-\Of@aUSFS=0eqG;g[O_%]tM+'GB_*Ja8Z);
rVcZq!<Gqj:24NY77BX*3B:efBmkDXO,o?lS=G:eL#1\CF)uD^NK*N"nkr@`AnGY.KS2QS56M)lE,]co
Vl-JlW)6DhiSib*\@D"rmtlmXqtp9&]=T"$)s-2C^V@Mm%1Q-1:uC0fOH>RXg=k!'d_NZ6k2tf/=]stP
kh4YBR[T[K>$C=\mD[&`LPLY'Df8<C9K"deZEgb[+sQRInX,]2[C*DgH?s(2@uH8'l07HH^:kL()H^*D
<E3%0A7Tk,G(5!kL5(F`<`Z9%X4PtTS"#lp-RYaeV1XDQ.OloT?XI2K@!$L4:JXd!]Y)>,aOAVeeC<!Z
]"1U19p1[&R@0IpJqB5OPa7W$_o'BlWi@Ks.=cr!@:<TdaiU?SUjRQ;h;-o(_SV=nNjcC)Q'IW9XK8:r
V>~>
>>
/CSD add_res
/4 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 230 
/Lookup <~
s8W,trVc3Rn(-(@!!!!>*?E#6_Xd9gm-O(C>?`d80_tP?bKJ(oQ'L(Wg@k76rr2olq"X%8kLJ,5Vl-G)
AnDr")?g9J%hB1nF`j^aWj/h64?P_@'br_h3NfNf\$rh35X81D;(X@O%1NcKXfZVaEWu^P=]nn'Unf+U
+;bq4N/W^@H$RZZc(Ui)!s8Ws8P.(Ib)h^HE,]djp\2VE`$-BL4$,NoS=Df.5ORt-;GpC3)]O$HGg=U[
LPLWr&.j\TM=L-+['[1`+X-OOouY=t!WiE(!<LWsd_3?-='&H^2`LU0qUjHQPa%ED]"6\PgbLW??XI1"
io2F;.O?Ae>[1P*oCMVHo]bW)eC;upH[@"`,XXpd(DdmSQ^=q\Y\7]`St;OGT:_jPU3q?9nF5phFEE+d
Ji#;@L5(F(*Zem(ASGjm-n$L,P*4YWh7L;2j5]0mTV)Pr#]Xj(ZEgc+7n5Eo2$=$b[C*Eqg"Da[R'X-*
mHs:>;c>+o.4d#$:f'us[^OrFgKIca]Y(mD6:/N)_17&d&eYh2KnVQK3eW0>i8EPkr;:&7@nfZl-RU::
USD^EDRm<glg*kB?!Y@c_kj3+#mgpacd)t,$dmALIt)sFVPY"?'8(pilK[Y0:/5tUG)D07jlPTlR@2+9
a'N(Yd*U/#jQ&Tm6,11LWMul2^:pPEW8?CfNK&p]PEV&gO$uK+f@SVI91thHS]JmnIXZ`eF)u28D*C-I
e'ld3QBk'48Ef:$:JXc%CMVhbhj^+)Df9Q1Ci'"Gqe'PS=BJ\fk2sn3b_qC;2E!J5`l>Nu\>u[29MA-(
GB^6oYE"X'XK8L6A7WZu`Soe77RfjJ<`YZXRXKU4Ocbc6?snP:JRMtq0ekC8/hVs9L]~>
>>
/CSD add_res
/5 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 234 
/Lookup <~
s8W*E,U<?i!-*!uo()>p+X)VrL\:?5]tM)j&.j28HhR1,W2QX*%hIFLg\q*LlK[ZkhVR)Eh;$f@cd0qG
[^NNKZ\sa"L5(G9KS3]>?X-i@B4kjC5s[1Y0G>*5/M/PC77CB`>(;$OPEV2aKnZqB[E6P4daHRtg=kQG
ip#^llg*krNK",H##%]amdBNBrr+2i-(CBn+sJ4;?=*0lnTK)!"U,(^f[p9.")r3uoCMS?m-NWehnQq@
VP^5WQ^;H%C1q9oAnGXdAS#C_A6)`32`EZP1c,46!@T?E5X7S$6:+[P<Hrb5N/W^sXK8qA\AQ5%bfn;]
e^`gEk3qd-kih5rQBhd^#T=U"Q'IUR)]S;9nCH1A*ZcBMdF%aapu12jc-=M^e'm@;j5f:^['[3<Vl-5^
TqJ'OSt;OESXl:@S:H-?Df9P/'brbj3^,_kFEDVWK7fDQPbk4Q]"5Jm`l?*@aO&;\NfK,:(`4\N.A*6)
-RU9I?!Y=a_HU5KeC<"$g"Akc7orbnH$O[_I!g6dH<=9O1,:UU84[N3CVINs_83t[o^l!X;(O7LqYL&t
\$u,+p\FX\f@SWn`Pm%FG>:n.91qnZ!Wk5:2+'_u@:<SnIX[?=O2SuTOH>P3$O`c+U^7>6]=Y\WXf[tX
Qu-\W;c?Uk:f'q`:JFPX+<Vd0"9]_c*B?,?=]nmABk^s_?ug:.I=6Odb0%#qZELI8Yct@:Z*D*[^k%&f
mHs<(kNCsgjXM`02E!I'@q0S$F+T!qi8ENJ0erV(r!a)E(DdlP5<h7m4Ao'TUSFTQR[X-Nql?cucHa_0
U8!L$M/I3K/hSbG7Rfs@8J2XKbKJ'j4$.S-F_kl1R@0J#MMfHpa18akY-+p`Lkq4WP,YF[Ocbd+WiE_E
]D~>
>>
/CSD add_res
/6 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 128 
/Lookup <~
s8W,pq>'+4jOD]/^qdaaW2Q,PR>m2cJ:N/jEcQ&8DJsH36:+!F#mgS3!!WW3,U=Wf/hS_-/Q#ABH[C+;
Vl.\[b45#lS=H*03B>@/c1(5lp\4FWq"X4Bm,R-dhr!>/_o%(XJoc!SBk_9U9hb]l!sJi3/1`>D8P*T/
BRG2TR$a8hdaId[oYneg5X7TYbfoq[qYgBklg*lqiSiMEg:+Q#WiE(iSXkFeKND5V'bqH++<Y<0B520r
P*1utS""kUIZ',BXf\_D`5LZpip#^l=]nlG)B-H._=I0fqtp9UlKXCiNb2m87Rfiq-n#3$":YeL)]K_?
+sIR0&1K%W2)R6M2`F#g6'[_#aN2HooCMnXr,m.)\[f9=mdAEIcbdQ9T:_`lCi!Ea?:@:O3]];l7n7*#
A4oQg<E3$_5!B5X#Ve%g>$>+/WMtN&K-;B]XK8MdkNC[Wh6O>lOcbc6?slf-:g[R:Lkpjs@q.2H0T_BX
L5(E~>
>>
/CSD add_res
/7 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 212 
/Lookup <~
s8W,cm-N6Oe7<*#'bqJPn*g,LqAgRs+!2Tqo((#KbQ%VCBP;);i8DJh_Va8.q>'jUnF5Juj6,Ugp@e4T
q"T`(MSR$CQBmhYFEC_k>=V1R5X7RE%Ls0e'It[a+sJ3J(`3Yi$kNs]+X&!_0JH@$;4O/Hf@SV=5<fr#
(V@;k&eYg92`Dj%+B_iM=BJ[/>$=m)<'!'$^V@PGk2ljP#$"Z'p%@uV;c<o+#Ek75%1Nb(2)X^clP^Z[
4?Pa5['YRBL>q4PX/i:jS"''BoZ5+p1c.#q#mo26f%\s6D/F+k!Wq04gmFIrNK&q!XK8%dTD\Wb,U=Ys
jlI-h'/)!ljQ,A*"U/1;?.79ODJj?1Df;ncZ*L[@aiVYkQ^7gX"@GODrVc]Zl083HrmK6C8kM^p`Pm7R
I:m2*Ocbd;]"1F'8@Q(;*#osioCEn?)_*<eG'8&-W2Pf>OJJ\JWiE'c6:)1n%ru]2g=k7g?sppk`4Waq
5!D1)p\2)'[Ag.)6psEj-RV2G6/ge]KnY4sCi"]TJmMbiAnGW^$4<2hR@9S577BYLYcqnYCYmq)H?sn&
Q'EmO/FMro^:q<i@:=hBK\bJ?lK[Zfg"FBb`clWN,9nE6!<Gb`8Zf+s]tM*R9hd&c.G3;*NfK-,?XFQa
(+:RZcHa_+SXfib"7>LCG^+K1qtkGUF&5\0LPLYKPEU??H_@%)IXZaDVl+Z[Fetq2:JXcNPa$fQK?MH]
Lkpj))&X_H-.1,f&J5U11,=oOO#]3\\@B%B9MEUOb);19N/W^*@q3m4ctR3.e^`2hE,[-N-6=3L7Rfi
~>
>>
/CSD add_res
/8 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 175 
/Lookup <~
s8W,hnaTab=TAF%#RC^Q_SUhRJ.2qsj5]1Hd*P3M756MOb0%kNGBXE&$R[;LjlPSn7Re:7)H0R5e'lcd
EcMHm$#+*fm-O(/7n85cK]qX`E,]cKK7i[_nAiSi5s[fI\[c<aAd/GDmHs;AX/dj*0"AF$&.fDGTV)Dj
"FPTE%hB1Q=BObLkFA'4+sJ3Z-n*$P`*6GMB4klAl03qWL<e)i5!D/eM2C]in+leTC2.KJ5<k3iO5/OG
<`W70@:@g@fPGA?]tM,/eC6TC4EGRbZEgbn2)Tf1I46ToR@0J/QBiO3*J&cmZ*CS.p\0K"L_gjDjQ,Ag
6:0,KdK9RR!<E4JH[@\12q?I/H$O[]H@#PgrE!'%i8EOBIX^n[oDAF^lK[Y%6UOF:8_r4Yhr!=!?so@h
R.Bh=A7T5Z[^Pu+pt"$I,pak=XK4681jF7if@SVX>$;XU(!4S>]=Y]OqYJCYb<%dIbfn;YdF%CMm]`q"
1,:W$_8/#f2TEbVVl-Hjr;7Z[+JGL&Za7!acd+'j.^ZRiIt)rJ<E4p6MX0ToPEV4&o^pnmgLXr-U8"CU
p@ac:Pu1CU91qp[Xf[;2Ktb:884Z933B9f.9k.[Cg=k8q^V<$!5iL\\R[TZg+X'WW:M=ETD/F.2aN4&I
oe8'Rg"G%T:f+a7\l)F(~>
>>
/CSD add_res
/9 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 234 
/Lookup <~
s8W,qqYHt^UCn1P!!!"PKS8OOk@8"3?smBof@T0Ik'D?"%hB27PEU37G=G%kb0%lIa2^\?7ncTMaN2GJ
H$Kr4&@/UIp%A!MT:Zc1'*njLKnY6Sp@dk>m,-^XnF5qHWN"n:ic]Kg0JG2_Xf]ssd#X6KE,]crWiGIR
m<!Gl/hSci]tN+Pfk+i.:JXd2c-;9/NXH4&3]]<ZMMeL:XLu3Yq>'hk>[5e.eAK2AC2.Je"U.n+<M?+[
VP^4S5!Ek%DVj7,iSib%Za6m?Ydq<Tgt^\gYHJre*H?(=o^qc72`D$L#sgjC3B9*^OcfV@rUKFJl07Ho
jlOh7c^gVtV5:$@f\#KSlGUWZp\4FZqtme/[ATq#rr2ntX/ffCAQrAC>$>*bLPOU;g=tB:Bk_9-,pf:[
U@\!Je'ld=TV0EKan##nr;?KYlg'XoOI;N)bKJ)ei8EGIh9jWt='&HA)B)FK:c:3i77BYa`Pi#c#"_BX
mdBMY^q`3#5eatHkih5nP*-Ut(KadAS"#n7R$a,&P_OpIF)uD2@::Q4-m0WTCi!p7H[C3jIV<D.B4kk)
I!i3(Z+n&gUnje3,U@tnK!_nlJUrB]\$thpmf<Fi)]K_;*Zb@a!nPrRjQ,C=_SV4hM^g2+1,:Uj?!STs
+Unki-RU9/6UOUD:,Fdaj5]/7'br/H.A!-&6:+!@!s?iocHOMV=]nl1"9]PY(d'oC84Z995<h"_2(U:0
/M/RLq"VA/\<iPKQBmibdaDuLD)!b"LkpkDM2@1MN/`gV`l?#sW2Q/RR]`fr]=Y\`[^LF*GZ%F;91qo%
+sL&g<`;pq;,L2/Df;/9S98ssCMR^+EcO6'4+Da0e^`2\A7U=FK=\Y*?XI0*Q'GZ^?@@6M_83r^9hg.g
J,~>
>>
/CSD add_res
/10 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 232 
/Lookup <~
s8W,ko^n'"M[0Ro!<E3$!!!B7$[-]:dF$A@rr2ZdpVb"g+<Vf@^:rRbi<]es.4H_"g=l)enVrNf,U=YE
\$rQEY6G18+sJ5B]"0:<-us?KWiE)blg"TR!]Dqp5!D.6"U/"1=MV_frVc]iq"Wn0itE(>Q'IX%mHn\)
CD[m*U8"C[r;=pgcl*f@VP^6Qk2nus63@;l<`W8bkic/P=Y)*T^V@NoA7X]ZipcI,"9\j4>[5k2et]"8
<E3&rqtl)$Km\8qaN2Fo8P'@#%=NYQoCMR>QBj-U0'DE\l07H%S!t31(R(&HR[T[dF*"[oZ\4!b9MA-]
XK6)KBMhW(='&I/?!S0['b:fcJqASM:JWi*2;d<Km-O*-n*a[n@3-I2FEDWcjQ&?_3bN)<,pakcdaHq+
gb^iE-RU8^*?D2]X%,ZMMMd9R4?V<MfgA+oq>'h9.Os<3hJ$\<JUrC&e^^"QQSC3L77BY-Ocf>0oghVE
_SX/U5s[t07M$+BLPLXrAS#h"E/]a7e'lc?9hhO`V_'JPaiVZE`l@</lE7:m+X&"OF`ib+O//SI&eYh%
G^.`fe72uuV5:"-)]NX2D/X?2qYL&r[C*HO[]Q[6i8ENX5<h(c2f<MNL5(GQS=IaEb&ME@:/4P\:f(J)
?@[QVGB\7(91tqNT\\G[4$,OcjlJK_3VN1?R@0I@;GsKnWQ3'"5X7SHAnK$$`QZQMcHa^]H?t'jJ!,tX
o()?fCi%k\gUk)0_83t4c-=nnfRng/TqS0aYcof80^eAs1,:W&_o#ki@$$J3]Y(nUW2OHGC6"=7]tM,&
bKJMhf<hol\[f7L;cBs+Z!1F:\@B&>SXk+SH\mT9T:_a]ZEdhE?dI'EIXZa1Pa%Q&R%Bn@H$OZ~>
>>
/CSD add_res
/11 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 234 
/Lookup <~
s8W*E,U<?i!'ie7n*f`AqYH86Ns5dm?XI1%jlQL@rnZDd%hB0k*?FeEo]k`,%1Nd"g"H?&rU'">9MA+\
!<LQod#O-H\[f9JqtkbgHjBu`k2teY/hRtX(gUEQ!WiFKH$T/YpSOgbEH-!nq"V"pXp"t4A7T6Hq>'CD
m!*c"_SX0>It.%[npl7@H?so2p@]:=(W!r(r;?Ip=BMc1Y6+k/V5:#%BP?_tlQmi'cd0r/oCINaJIiA(
cHa_mhqo.`'f@j+:f't%',0*Rg-S+mDJj??I=:;AkDP7V#mgn@"9`RYD7I*cnF5p?91qfH8G2ZKLPLZE
io8nSi1$4*KS5";2`F5s8(cJHS=H)W$O^`cCXUYZK7ef>P*0$R>CM$MnaZ-+1c1;UO<PkmmdBL377F>\
Xcns4bKJ(sR@-,u46c"oR[TZX&ea6bj#/eR^:q<f?=(k"bdtBs[C*E]`PnF?SuATdSXl=:Q'FQu58kFY
.Olp4Pa#Zf@ocW2/M/Q]['[T_^SI[$0JG1M7Rgs#ATW$9@:<Rl-RZsTa*2`Oe'ldZ]tMG*`ouXMe^`3O
XK8.jU7n9STV.r,.4O$+gF+HuLkpl"]Y(SWZ^@,I5!D/BAnJ*EX/`2"eC<![]=Xu=VfHfuB4kjC5s[Uq
4B5B]>[1N;>$>'3=]\[+:/4P];,L+b:J",L6UO4%3]]8]3AN?F)]K_>+X%mJ*d)UJYct@(T:`R#[Sg"$
+<Vf%USF-@Q>CAR0ekE-c->5+iNfbpZ*CQfKnXG`DgQhX^qdb'_o'F2`4*4bQ^=&$OccWBWD-)]M2@(4
G';$Nb/hZFNK&pLJqDe5gkLQ<dF$@uhVM10;rm$#F)uEEaiQ(b/CrD'f@SW3MMc+^BoJ"0E,]c(?sm_a
C&~>
>>
/CSD add_res
/12 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 230 
/Lookup <~
s8W,pq>(!frTWS2Bk_8f#mgS3!('"=`l?"k91om1'%54VmHs<7p@ceWc:q#-!WiF!:J^lbqmNrA/M/QF
SXo<@n[uNI"U,'SG^/?3jn8<>?=$q@"9`"9?/XZ!q"XWhZ*?eh7j&os@q0#kb0$KSUEq34nF5qFVl)."
/m)4X]"5K0hVS#$pZ(;o7Rfl$g=ko[lp!^!L5(HBio9n6r-Nd;&.fBT!s>j7ZLd\ZSt;N63B7`d'7bU`
V5:$0aN2`Td,sKQqYL%G2)Wn5eGfIHc-=L@?sj?M$RmMR6UO448P)r`<afEFo^qc41c,46!QW7$O,o>V
0elg6=g,$4gY:JJQ'Lh,mo*.`,U=WZ+sP4RbAqWD_o'C@e'ho@B!\hM5s[dI%hH1[\<E,?0JG0i%1U+g
^fOT=`Pogamd?dBTh%^FP*2!.WiA<L5f1CTaiVX1#REOT4GS]I77BWg+X*neX#iC)OcbdXf@O\LBP1sj
-n$L6S=IF3_+[NrMMd;VlK[s2neW)Y/1`?NW2Ma<3cK%W<E3%CGBXl@(ag[YdF$@=VPZ:22i3BJ\$rh)
2E#VtF(AflDJj?/D/J1fhk['DTV.s'H$LGP*d2^MIt)qP"pS=;>_.HWC2.M-bfip];1jLRkND$=\[c^"
ERiUiQ^=&!NfN)WiI$$#^V@OBN/UqD>!>,6OH>PB)B+p-QDpj_>?b==['Ubk)k3=d.Olp^^:p#'R;["^
kih6)U8#TE`0cpZ1,:VWT:]\+A\5Rdf%/DI:/64cI<p3c?XI/::f,iug#V5TXf\^SIX^)-gt:93FEDV?
CMQgG;M'LP'bqI:KS58AMhm1FXK8M:]tJ5uCislC*??0dlg'7YL!S)kR[T\LYctOC[/~>
>>
/CSD add_res
/13 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 233 
/Lookup <~
s8W,]k2rD4U6:\&bKJ)qm-OWHqZ$Tr1,:V]V59iXTJ/&REH,ubQ^:-07>ct[oCMQN;,MmqJbo6>\$rh/
4?NZH!af;Ae'ld>TqNh]-_?p$_83rj=]s+ud$Bu`"pP9KD/J1fhu<WS`5KSo<E0SA&-W4@Xf\^1>[0`f
7^'#!Mi3L%@:>.TNEogqa2c68^V<'#5u19Pb0%j>&e^=hOn\VE[C*DpK7h_)eIN0$rVc]BdF!JpJ/B+?
)]K_t='%^T6H7$bE,]c>G';0Vc=CHrN/W_\lKYsl\l)F(.Oln]',*o-8:#T.^:q>Tp@^3q0lLuKj5]1i
naZGNq=O=O9MA.Tq"Wk.in2o9^qdb>g=kKCi;ENNg"G%jAnD;S#RLeD/1`>mEcPPq?nEr^G^+H9"9_Y%
;ZQn"/hSb;3]c'Og]IW\kND#nQ'GupB3SSE6UO3t1c/NF?@RHSUnjfaVl*X!=ESb/+X&#jjlN#&S2N8`
9he>P7n8u8R2Qt^-n$Jb*ZdR35e+>6_o'C[md@<`Yhn6nXK8L(<`TY=%A08bIXZaY]Y*IlkTCujlg*jc
.4I>?4.)D&X/i;,ZEiQPj?Gjn'bqIDNfLBLYt7MYbfn9=$O\4*,X+CUC2.L8Jq@]NC#.V$p%A"4gY9T^
_KU3JFEDUN,pbE+23X5fM2@(,DJjN:F,uBCH[C*TCMO_&(EFM:+sJ4cL5+.)ddZbqaN2G9BP=i_[`-5)
n*f`(iSdO,:=%84eC<""f@R@8Z^[GRl07HSaiWr;m?!EkKnY5f['WJ!95JE\o()@,LPKGPA\5RdW2QYl
VP_V_c+Ug(:f(!!\[e`?WdK2AI=6O=USHDket&A&KS5"=3B:SZA"&jTH$O\7WMqg82m0<d>$>*oP`u~>
>>
/CSD add_res
/14 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 196 
/Lookup <~
s8W,ko^nN<QiI*d6UO5`b0'__rn5uXWMukBH$Q9aVD9n^1c.$f;c@"/?773M5!D/PFEHO%iofLf[C*E%
NK$.e59V0n4$,M?(Dg4W=cSN&^:q>-cd2%Imem"\`l?$oq>"lED&=*,"pP86!s9)G&=T&Vq"XX]qtp6d
qY'XVW2QWt"9bj/XmPNCgY:Ii?XGE</jMZe2`E[LKnX>ZCndYu#mgnu3B9c,9V\AX]tM,XrV^VODHL"C
0ekCP7Rf'c0ED1T4?P`,<`Xa$J9H*ZT:_a>PEWPf\_Z)toCMS6j5Z2]O)]/Z*Zc@9',-OlP0V@u='&Ja
jQ*MJYB+c+JUrBTY-*_BN-p##daHS6naY2]f%&=$_SX0EL5'_hE[<"XAnGY5Mi3%5I`01CZEgdT`Pq31
m.^8KSt;NtGBYMd.Oceq)]K_($O[+A"nhQ]Df9RPi8B`[Ob\^Ig=k8NS=CcI,!%bG\@B'7lg(IHVgWuA
A7T4/2E",u8OuBCQ^=&?XK9UgbK7lJUnje))B'kH,S_%/e'ldibfim[:esk_6:+#cd*V@So!c*;Bk_9b
>$=g%;J0WTTqS0NSXj8#@rQC+<E3%-@:=e@K,ksQ/M/QBR@2IMdCd-)-RU9gH[At$>NY)1n*f]N#RF'r
9<bY)V5:#5G^+O\H::7k9he?JQBoe?c,%64Z*CRdf\#HQl1"33OH>R9]=YGW['mEO^V@Op]"6D@eCW=(
a2c6AaN/%.BS_J#Pa%C~>
>>
/CSD add_res
/15 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 234 
/Lookup <~
s8W,io(&08QiI*d#mgo^GB`KCmf*4be'lcG<E0qU)KKk=cd0r6qYL0hrV?9bo^qeMp\3k6kCA)5-n$KW
BP9q-8/N0\AnGY]Za9H%q#('fjlPU?_82Y3S@#Z1UnjeN5<kp<UW1<n2)R5m!WiB'!G#_O\[f9BoCMkV
qtBaWnaZ/8lg)pEd$9l]>$>)C',*&R0WV7T^:q;o&e]tTL[ag&Ci!o3+sI0o"XPH@I=6OGXf\\+XN8K(
.OlnU$O_N:J`,JEEH,tk92![[d8NtB%hB0[%1NFC"9S`.-RU8n/M2g9M5I/I)]K_m:f,*K`,K[7'bqH)
*ZcIJ+YGB"<`W7YMMe[DZ/O[#p%A!PU7u@9C!+T@1c.$e;GuQ8j42]1gt^\p\@?$YA!raQ(DdmGMi59^
]gbI\bfn;tm-M<p]%GZf=]nnrn*eQIc9"*L5!D0B]=X)`Nc]Abl07HhhVRP_lC4949MA,B4?QnT?&ai'
F`hgf3]b0r_pm2c>[1O;YHM_WCMIU!D/F-BK7gYB[g36F2E!H6*?>\&&7K!U[C*DlIt*oURZEMjVl-FO
2`F#g6)gi_h;-nXSXi>D8_MeMaiVXl6UO^J;;0aX?smBZ_SS;n3<fZlN/W]^6:,$d?W^E4St;ORWiE;-
YgUtJkih5ZIX[KEPK1_a>?b<5='+eVm<X))L5(G.H$Qj,[S9Ij^V@P&`PjPd1!@b`hr!=(B4jIp5]1IW
^qdb1c-9!Y:8+ATOH>QdOce8If=\c/AS#GOW2OrcGXY%i,U=XeJq?K_7kuhTKS5$<io6,aP'2"lY-+q(
V59NFQQRCnf%/EXZEbo..GNV3F)uCu:JWMm/>/Z/Pa%DNDf:>`Km\8qLkplLk2tacjI`':QBmhC?=%u*
HN~>
>>
/CSD add_res
/16 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 234 
/Lookup <~
s8W,trVbO,gmX\#naZ/7lK[*Wg?n:pe^`1M!!!91#_7GUo^qe9j5Y`CJcPlQ(`4)R5!Cte3V`CEW2QWu
"U/LMB'emN/hSaY!s;=p:Z:9kBk_8a"9`"9?/FGp1,:Warr2EVn<fT191qq)d*U@peg2Ughr!>@eC4[,
#.hCWq>'j!]Y"OW$%75MmdBM!Lkm)n*flACp%A!n^q_c`1b't)EH-!ho(%EcK4eh0M2@'%&e_so^P%8n
H$O[F@q0\*G,_I?!WiEu:/2?3&?;b1p\4EVU7s@s0rLqI?=$sjf\#Z]mnHMNl07FA%1S;VNViVM5s[dM
',.IKX=u=^\@B%03]]So644//LPLZ'`5K'k[D'AhIt)r55X6,%(]+")]=YZq*?A[$AGlB'bfn9L)B,lc
Z)t.1.4H^__SRE<+QVVE77BXF<E4BmH_@%)%hB1aBP=la[u?9)='&Ho84`@Do:_kO/M/PhC2-UC;2U6g
GB\7QFECks?WL3.'bqI!CMVDJe$?9bT:_`sF*#LHb4bQ&L5(H+bKDh'2pT^o)]K_>+X&s14PAE@F`hi5
Za8E@gRXn+=]nnF_o#DO;fH\pPEV3gi8B<CKuqHY9MA,M7n;e,kfqAsQ'IUl2)X";fB;>[V5:"d;Gtrk
dXct#jlPUD`l?*@a?)IFh;-nt\[fDe]q1ge>$>+G_8414a3i;^-n$K26URWDUQ1@pI!g=GYcp#D2Nj5d
G^+IqOc`mR>d(?7-RU:2S"$jp[XN[S,U=Y]cd/#IR@Ke;>?b<$7RlP&k"/-9?smB,Pa(M"la4%+=BJ[:
AS&j"`GKI/OH>Q?ChupE:o:+eDJj?MMi3meQEIBnQ^=%WDf70X/:)Vg5<h@V+sO(gX5`-uUnjep@:=1s
EW~>
>>
/CSD add_res
/17 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 234 
/Lookup <~
s8W,ko^q_Fo)8Ocq>'j#^:lE\1][UX"U,'$8P+u(O4De2qYL%W77BpF:$_-2_83r.*??CN,j4@Rm-O)B
YHJZU'a=jH!!!![3]b0r_sZs\1,:W?gt]9DZl0i$4?PaklKZ7'_Q9i?p\4FPnaYSsiIQQ2p@e2pC2/op
Ot%q2SXl>Ep%>o-\g]'WJqATLUSB4c.&s;IMi3MXl02GX>Qb04/1`?)K7i7GjOVo5FEDU1#RGHkE\8ss
)]KaMg=ek[64!r)+<Vg+rr.4iH?F@Q5s[f;X/jUoclsYXE,]dVj5\2#`siIeBk_9]<E5ijUfpr*!WiG-
Yd!otpq48P&eYi!aiXGWqo[((aN2HTf\!$sV%XLUk2tfGEH1L;n?T@*/M/QES=I$r[Zco=Ci!od;cDf>
jY/AB`5KUcoCF"E*mMsSr;?KIgY64JA+/mTAS#Er+X,.VcD%&-0ekBb!s>!\R[KS384Z:tcd1"ddD*H2
hVR*8,pe%jJ$ZJfWMulQh;(7Y5,"[D`Pof)@:=%kDVs@/(Ddn2bKI/qZ0grG:JXb[9MBYSG?J'O>?b;>
$O`PtSpYp5Vl-F0(`8?rOL;L(f@SViCMVqhi]0"ZVP^4P4$1[1be:^'L5(FU91qcF8%5t:M2@(+D/H5M
W8QUlR$a7hI=9PldWTeW\[f7tH[ARc:d70/TV.r92E$5AKF\S(7Rfk6Q^86p&8#NdMMd9g;,Lk7A@T.Z
H$OZm2)U)AL"+W%Pa%Ck2`IA$T2JQb?smBEXf]CS^aCKWLPLZ<g"Fj'e!62`]=Y[M:/5_GDa6QQNfK.`
kidPIJ6cGd='&I*=BLQBNKK?c<`W8@`l=L;RpTN0?=$r*6UQZcLi[WYB4kkCQBl2tBWeM@IXZ`jG^,1+
Mu~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -565.492 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-7.62939e-6 0 mo
-7.62939e-6 565.492 li
499.476 565.492 li
499.476 0 li
cp
clp
[1 0 0 1 -18.6836 0 ]ct
gsave
27.48 -219.461 mo
567.48 -219.461 li
567.48 -121.961 li
27.48 -121.961 li
cp
eclp
27.48 -121.941 mo
567.48 -121.941 li
567.48 -219.461 li
27.48 -219.461 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
gsave
27.48 -121.961 mo
567.48 -121.961 li
567.48 -24.4608 li
27.48 -24.4608 li
cp
eclp
27.48 -24.4408 mo
567.48 -24.4408 li
567.48 -122.001 li
27.48 -122.001 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
gsave
27.48 -24.4608 mo
567.48 -24.4608 li
567.48 73.0392 li
27.48 73.0392 li
cp
eclp
27.48 73.0592 mo
567.48 73.0592 li
567.48 -24.5008 li
27.48 -24.5008 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
gsave
28.08 44.8392 mo
469.86 44.8392 li
469.86 14.5992 li
28.08 14.5992 li
cp
clp
28.08 44.8392 mo
470.16 44.8392 li
470.16 14.5992 li
28.08 14.5992 li
cp
false sop
gsave
/0 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 30.24 9.39635 520.652 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 42 
/M[614 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGcNJcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGcNJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcOO*$ipD3"9eu6#7(VC$3dg;
JcGcNJcLB&JcP<@%grdT%M'*^&J>`k'c%T&)57+_!.k3&!/LUY!?)ms*?Otp$m-3,"<es6,UFcb-n1M`
JcLB&JcMJE!%RsJ)Cm?X*%`cr0/,+91GgsI)`K`:1cd]\4W?=@"?o%&/jP[%!!2]lJcLB&JcN7['gY/R
!!"N;)`JH]-72/()B^.l7n?5L)\=r#8kU*c4%r=B:/=YU:`rX1!42_4;?Kis<)lt"='5H)"Bnu(>7:F8
#uXZ+$X3u>$X5.L!<)s#.oBSXra#_7><kGZOT9t5JcO$q$XdB^@Ui::A/cJ!B(u?8.o'_jBkh*mChsSu
DD1i*'Kp@LE,d0?(C+GjEcVIL(3D,5F`[3UnGjFW.foo==^#!PG'A1VH44n@HPh-X,604t62l9DIXZcr
7O2c"JJ*QeKS9jT*<%nm)\3C4LPUeEM_0?&)17C&"Ub5I!ags;r_XP=?B:.45RIf9F"!,L<E<1'=cmND
G=6R'.fKF"!.k3&!9=+].Nfu8)[Be@!+Qre2j!b6!s':&,5_EG!A5]GPE_=gq\q:&QBm8[@@)e,Qsi,s
2_\s2B9SaPR[KX7J"3(#SoL<A(Mm:]T8Z43/Q8@;Dkj)'L,L3OV%=38VE?u=Vh1hF&P4l=0WD'1X/2X(
VECc.K<2/.2t.da2tIt"Xf`EePES!eR@9SJY^r+F2YA!oXD&t,.0(kIm/R+dJcLB&JcPWI%3lgMZEkJh
*s4d8)]Q3L!"T*Q[M9MkYaDnVLkocT\Mj!t"ugG2\tZL;r\Y(qL:ij/&j%e\WCsu#)[$V^1:n1m)Zr#j
Q'M>]!2KN4!Z\2SrYlrpM2AXVTHjaf,bL]*84^UT'=C@g_m?Ea2]E2F_o%2n)\G$,&\fEb%B?NL2`3H8
.iKeRfDpL'JcLl4"Z[Nu@qr(D)Zb.6rYtlFjT#@BEuP$u%O6?;`Dfg1[gim<*GTN-jVo'r2l\r=`ZZH2
a2hc4ai_^9R`gLQ$-+YcO8`Gh>u:b,5`bnO"cgf7;Gpd!.f]SM!VHFL;?L$d1!QGl%TCYE8Nk>590K5P
br/-*+4$r?0Q&SS32Fn8Ro:YZQdO5#2ncmM@#NL%0#RaA!.k3I!")79)Z]q?QE2#EZ2P^BeF!>(!!30>
a8Q&a!QW]:ePr69bHS1=YVVY-1c2]u&3,H#Ut,s#GXlp@OH:lM?2"=%!G7CR"jd8J!!HPLS@5m'Hj:LM
b!.+nO<F;u$nK9J)q-f-ae5XQVEV0`JcLB&\c<#Q)]Q]q!63VQr#>[.f`:aH!+>fE(>.7BfE[DXN!LOK
I418A,2!#!5`S+RVZ?Dj$n2]+)lqB6(-NTUVB20+JcLB&cN"9/2]EJ^!!#A%4oH<$:/1i/!/pm^"Ygr8
^8%J&)ZgsO[Y4^5!.k43!!Ero)jae-!!,J!rYkpmg+0B-U&Y3u#Q#GC%3HN.DXIK)!.k3&!.k4I!!Ero
)jae-!!,J!rYkpmg+/Tl\,ZP6#Q#GC%3HN.DV+r@!.k34!!K\g)mEQE!!@K#Vl0Z=F=W%Fbl@cMM>\@t
Jq@W[)]XXN!.k3&!2TYuYr<Uk/,K;M+EWN-5lpESJcOg2!<EN*)[E^CTu<TC_fW$]JcLB&\c;kh2]G*b
j8]0eli;V;p](>"7fF>4XG@#`.8Ln\-CFjc!.k3s!!BbN)_'eI!IOq#!0.$eg^b>C*/=k$!6gZH!N(=!
!.k3&!9F1`)8dC4@,h4f,6>[^UAtI&J$QZASc/Tl;55),g$Sh?!.k3&!.k4J!!G]k)q/2S!4W"2>Tk3s
r;Zq*2&iLG!.k3&!0I6a7)0b;B(l:W!6"p??Dnf9_>o/fJcMYJ"He?VD(4HEJcOL)"-4B[\ZGj`!.k3_
!!J45)f933!.k4>!!?OHXFQZ<JcLB&dJsL,!K49'f3l)gLB%H-.g[0D!,R8fJcLB&k5Y]).h994f3k?R
S,`["$Psc,li7"cJ,~>

%%EndBinary
grestore
np
grestore
gsave
28.08 73.0392 mo
469.86 73.0392 li
469.86 44.8392 li
28.08 44.8392 li
cp
clp
28.08 73.6392 mo
470.16 73.6392 li
470.16 44.8392 li
28.08 44.8392 li
cp
false sop
gsave
/1 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 28.8 9.39635 491.852 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 40 
/M[614 0 0 -40 0 40 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&JcPZJ"9AQ+"9jbbZ2b"3"pY59ec::%JcLo5":5,3$4HS.JcNgk":P\J!tN-IJcLB&V>p`*%g*@N
iW+Q1g].Hc$kNLQX8mhPJcNC_";2@M'G\jmJcP<@"9o&G!tU^uJcLB&ci=1b(]tBg\,a;E!#irZ"9o&L
!uummJcLB&jT#E('*AjbUB&gE!$95^"9o&P"!Hq1!!%TNJcLB&qZ$aB!WsVaN<$6a":P\`"!lFtJcLB&
OT5M1-3G"kpAfdF`rH5H"t'L#_#T&eJcMYJ"=Oc_%1D.qJcOU,"WAg=.K_3&!.k3&!4r46//SI@0$OBJ
!:g*n)A3Z4!sk4nJcLB&ci=1s&HaR:\,_<b"WB$I0EX%]!.k3&!9F1`1'7V7"eu'f!!EoI1]nHY!!!"N
!.k3&!;ca!2$3q=$]P.l!!G5>!s:O6!.k3&!0R<c3B@6E4$<6;JcNgk"?emM"$XO$JcLB&VZ6iZ56D!Q
i;eH0g].IC5m%3UX8mhPJcNF`"?8UJ"$k'1JcP<@"@5<U"%&=SJcLB&df9Re4?,\1&Oa).LB%HG70<WF
!#gIiJcLB&kPtfV$qEhj8P5]WS,`^c9-s`T)XRM)!.k3&!.k4K!!FrK"&2OL!;c`s5u5&l"]/#m"&_85
!.k3&!0R<b;cEi<<V?ET!!-,%oDlo3#$=t:=^##J_Z58gJcM\K"C*bc>oDT$V>pW>:>Z',!!Zb94C80k
4K\[9!.k3`!!G)#"(2kf!65'?@:Js2!Fl;U!:^$n#7"^K"(aT_!.k3&!7:cKAf(V_[K,(_!+PX%!BXu+
!!F\uBk.;G)1qp@!.k45!!?sLCM0=@jT#9C\Gue-9e'o\0'rW=!.k3&!.k4L!!F$Q=\M#;!4)Y0D/*g'
D\FbT!.k3&!0[Bc>As[a5kP,/!6>-EEcZ;DA6&lN!.k3&!2ol#F`q;>.Gt2X!8RVZ>BkC(%g.*Z!.k3&
!5/@8H38MA.E_^C!:^$mI=532"$)_KJcLB&dJsE!CBK&O[K)'_r]U>m!s!k(!.k3&!9X=b@itk@JY<(7
!!WUYJe3Q%3UHeH!.k3&!.k4L!!Ge>!s;AX!4)Y0KReT,Dh_'>!.k3&!0R<aLBD(Co`0RD`rH8a*d.W>
"i:7k!.k3K!!@EI,A5p7JcOR+"c8(>",[tu!.k3&!5/@87Z.A-5g'.Z!:^$mM2<&O'GZu8JcLB&dJsE0
NWY>N[K)'_"Gqt7"-<KkK)gK'JcOs6"@ZJrOclC<S,`\UPEZ07li7"cJcLB&JcP`L"I9,lF:4!,Z2b#k
PBI%#ec::%JcLu7".')lPOnj,!65'B?so3$R)&cS!.k3L!!AVk",Yn8JcOR+"B/54".H:kJcLB&^&S9r
N!!UPaoI"nnGi]]RfW\#lMuG~>

%%EndBinary
grestore
np
grestore
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /TimesNewRomanPSMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3213555865000000cc000000606376
7420fe30def00000012c000007da6670676dc3a61d010000090800000631
676c79661f83ed1d000094f00009226a68656164db396bb800000f3c0000
00366868656112ef167800000f7400000024686d7478b2cb2f8b00000f98
000035526c6f636140ad4ee2000044ec0000355c6d617870142a06ad0000
7a48000000206e616d65a4c6655c00007a6800000b3e7072657039e6c80d
000085a800000f4567646972000000000000000000000000000303350190
00050008059a053300000125059a0533000003a000660212010502020603
050405020304e0002affc00078410000000900000000544d432000400020
fffc058cfe460133072101bb400001ffffff00000394054c000000200004
058e0000054c001f054c001c0394001b0000ffe10000ffe40000ffe8fe4a
fffc056b0023fe6affe00313000000ad000000ad0000000000250096009f
002400f0013100c200c0004a00a6004100500094004700cf00af000e0079
01cb00040023004400a80025011f0002004600170105009900d9005c0072
00e500e00028004b00de011200240045007000160039ffe90016004b0088
ffb900d9000a004300ae00ba016c0153002f00430048022c012b0025008f
ffc000170028ffcdffd80025009d00e50124ffb10048009d00e600110027
007f00910012006a00cafffc00000024006200a7017c01e900210060008b
0434048aff6b003b00b500d5014bff6b004d007905d809b5006c009100a3
011701c0ffdfffe700be04010065007f00820088009900b200c0022e0343
05a000200026003d004e00610065007b00d9011301310340ff27ff42ff99
004e00a700f2022b02c603070011002b0049005f008d00a100af00d600e4
00f5010b0135019d01ab01ab01d101ee05d80000004b0075007a0080009d
00a600a700ac00b9013101310217021700020017002900550080008f00a5
00b200b300d0014b015901c001c103a50530fe3fff14ff15ffe7ffff002a
00580099009f00c100e400f40130015901ab01ab03220374041e04740532
fd81004d0064009c00d000d100d600de00e500f500f8012a012a01e1027e
027fff57ffa8ffe500000008001f00380051005a006f0076007700a200c0
00c200c400f101fb0209027e02cf04c5057a05f0ff92001200260042004b
004f005100530064008b00ae00b200b800b800d600f50111012001310138
014e01520167018f019601b801d901d902060221027102ea03b003cb03dc
04360505ff3a00120016001e001f002300570068006c007e0088009200a5
00a800c500c901150126012d013001d601d901f6023b0244024402a302cf
02de0385038f04fc0586fee0feebfefbff8a0007004400470058007500aa
00e400ef011601200129016a017301e3027e029002b4030e031003230335
0341035403590388039403c803ce047204ab04da0549056105ab0761fe6e
fed1ff4bff84000000010006001e0027002c0034003700620066006a006b
006c007000700072007c0081008a008e0091009200a000ab00b800bf00c9
00d500dd00ec00f40100012101300169016a016d017c0185018e018e0199
01ac01c101c501c901e101f601f601f60222022202280236023f02430246
026702850285029402d002d602e8031c0363037f03800380039e03b603d9
0400040404ff053205320548058b05a706cb07280748076208ccfcedfd2a
fd59fddefe00fe1afe5bfe96fec1fee7ff56ff7900010025002d002e007c
00870091009900a100a500a500aa00af00b600c600cc00d700dd00ec00f2
01020105011701180123012a012c0131013f014701490149014d01510151
015501550157015a015a0161016201680168017f0180018201830184018d
0195019501950198019901a501a901b601b601b701ba01ba01d501df01e6
01ea01f2020002000203021702250227022f0239024302430247024f0252
02520267026f026f027002720276027e02a702b302b902d603130325032d
03610371039903ae03c203d403f90402042c042f043c04560467048304cf
04d104d804fb051f05450568059e05c2061b06340655066a069806af06e8
06fc070607500762077c07d407ff082500ad00c700aa00b5000000000000
000000000000002f06cf01730514047802df009c00180370058701550025
00060254036c038e03d2056601f0032001da018a0369036bffa3034602f8
036f015602bf0122031f053a0366008c00ff01ab02e102f402e704150154
02e90128049101b7026f034302060000000005d30415048305e8000002d7
003a027d01c002c503830383ffbd003a059e01df059e02d1002004e00213
00df01c001870297000000ce0269028b0058043405fb0069015a01a90578
0182013e0288012a03d4049e00e5032302f301f00196007a00cd014a0424
025e023901ab00cf00fd011e00ed017100700195004001bb01dd01b80001
01a803a7014c020c018d01b0020d0137010000cd032101d4030a00590000
000001260215015002f0025503bc06d00335010100d000d2007a01030130
007c000000000000000000fe006e006600940227002b0045004d00d30132
00180097004100f4febcffe9001605d8058b009100a1032c00520030005d
02cb003a009200e500e500580086003200ba0099008800300298007cff80
01640028004d0065000200b8016a002f010b001100170100007f00040016
022200a6005f000000f8000a00ca0043004b01ee0077012000f401c00028
045f0000008c044500c20060007b008b008b0064005d00c2009c009206b5
05d3004f011700000420fe9e00cc00dc005e004600e30032001a003c0091
005a00a1042c0041002000490071009c009cfe4800400040008600cb0102
007d003a003e006a0050044800290096ff6a0097006900e0004c001b00c9
0069ff970043ffbd0052ff83ff8b005fffa1ff5c00670053ffa8002a0076
ffb20036008705590256052b043400de00c901c4004800db018b00b30048
00da01160125011800ea00ea00ae0000003e05bb008a04d70053003fff8c
ffd500150028002200990062004a00e4006d00ee00e5004803c00033fe4e
02b1ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a50705
00ab0080001e05a50025008b04660230006900290016012f0080005c059f
000040425554403f3e3d3c3b3a393837363534333231302f2e2d2c2b2a29
2827262524232221201f1e1d1c1b1a1918171614131211100f0e0d0c0b0a
090807060504030201002c4523466020b02660b004262348482d2c452346
236120b02661b004262348482d2c45234660b0206120b04660b004262348
482d2c4523462361b0206020b02661b02061b004262348482d2c45234660
b0406120b06660b004262348482d2c4523462361b0406020b02661b04061
b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a5158
2320b08d44235920b0ed51582320b04d44235920b09051582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b017
2370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b003
25456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d
2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20
b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb017
2344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb017
2344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb017
2344b0177ae41b21b0177ae45959182d2cb0022546608a46b040618c482d
2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a23
444565234520b00325606a20b009234223688a6a606120b01a8ab0005279
21b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a52
79b31940201945208a54582321b03f1b235961442d2cb110114323430b2d
2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb1
0e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c
0120b003252349b04060b0206320b000525823b002253823b00225653800
8a63381b212121212159012d2c4bb06451584569b00943608a103a1b2121
10592d2c01b005251023208af500b0016023edec2d2c01b005251023208a
f500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c00
3c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b00643
0b2d2c3eb02a2a2d2c352d2c76b802b023701020b802b04520b0005058b0
0161593a2f182d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb40001
00000015b00826b00826b00826b008260f10161345683ab001162d2cb400
0100000015b00826b00826b00826b008260f1016134568653ab001162d2c
4b53234b515a5820458a60441b2121592d2c4b545820458a60441b212159
2d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2c014b5323
4b515ab00225b00425b006254923451869525a58b00225b00225b0052546
2345696048592121212d2cb0134358031b02592d2cb0134358021b03592d
2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b01060482046b010604859
0a21211b2121592d2cb012435c580cb00425b00425060c6423646164b807
085158b00425b00425012046b8fff060482046b8fff06048590a21211b21
21592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b
1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54
b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46
2320468a608a61b8ff8062232010238ab9035803588a70456020b0005058
b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1
400188535a58b910000020885458b202010243604259b12401885158b920
000040885458b2020202436042b12401885458b2022002436042004b014b
5258b2020802436042591bb940000080885458b202040243604259b94000
008063b80100885458b202080243604259b94000010063b80200885458b2
02100243604259b94000020063b80400885458b202400243604259595959
592d2cb0024354584b53234b515a58381b2121591b21212121592d000000
0001000000050ccd571894305f0f3cf50819080000000000a2e31dc20000
0000c5b1f690fb74fd8c1000080e00000009000100010000000000010000
0721fe4500571000fb74fadf100000010000000000000000000000000000
0d530639011c00000000020000000200000002aa00e40344008504000025
0400006c06aa00480639004b0171005102aa005402aa002e040000910483
00250200006e02aa005302000091023900030400004a040000f00400002c
040000530400002004000062040000580400004c0400007c040000510239
00b00239008e048300250483002504830025038d005c075e006105c70010
055600220556004a05c7002304e3002a0473002105c7004805c7002302aa
0033031d002a05c7002204e30029071d002205c7ffe505c7004804730022
05c70048055600230473008004e3003e05c7000b05c70012078d001b05c7
000f05c7001304e3001a02aa00a80239000302aa004b03c100250400ffef
02aa0076038d00490400fffb038d004604000044038d004c02aa004f0400
003d0400000d0239003c0239ff63040000110239003d063900110400000c
040000450400fff90400004402aa000d031d006402390014040000020400
001105c7000d0400001b0400000c038d002903d7011b019a00a103d700b1
0454001405c7001005c7000e0556004a04e3002a05c7ffe505c7004805c7
000b038d0049038d0049038d0049038d0049038d0049038d0049038d0046
038d004c038d004c038d004c038d004c0239003c0239003c0239000d0239
00020400000c040000450400004504000045040000450400004504000002
0400000204000002040000020400006503330062040000810400003d0400
009c02cd007003a0fff204000023061400450614004507d7001e02aa00ec
02aa003904640019071dffe805c7004905b4003504640008046400180464
001804000002049c008603f4004005b4002b0696002e0464003e02310000
0235fffa027b001d062500470556004904000027038d005902aa00e40483
002404640053040000020464001e04e5001a0400004004000040080000e6
05c7000e05c7000e05c70048071d004b05c700430400ffee0800ffed038d
0043038d004302aa00b902aa00c10464001703f4002f0400000c05c70013
0156feab0400ffe902aa007702aa007304730019047300170400008b0200
009102aa00c1038d00430800004105c7000e04e3002a05c7001004e3002a
04e3002a02aa003302aa003202aa003202aa003205c7004805c7004805c7
004805c7000b05c7000b05c7000b0239003c02aa003c02aa001602aa0017
02aa003702aa00e902aa009602aa00bb02aa004e02aa001d02aa003c04e3
00160239001e0473007e031d006404e3001a038d0029019a00a105c70023
0400004405c700130400000c047300240400fff904830025048300a50266
0088026600140266002c06000086060000860600002a0400002105c70048
0400003d02aa003304730080031d00640556004a038d00460556004a038d
0046040000260400ffef02aa00ec05c70010038d004905c70010038d0049
05c70023052c004405c7002304e3002a038d004c04e3002a038d004c04e3
00290239003d04e300290340003c04e3002902c0003d05c7ffe50400000c
05c7ffe50400000c05c70048040000450556002302aa000d0556002302aa
000d04730080031d006404e3003e0239001404e3003e036b001305c7000b
0400000205c7000b0400000204e3001a038d002904e3001a038d002904a0
002505c7004c05d900470431005703c50046035c0047045000460337000c
049e00450400ffef049500e40285000207c0002c0800004f040000990800
004f040000990800004f040000980400009807d5016a05c700c004830026
04cd00990483002604d5022204d5010505abffe905ab027e05ab027e05ab
ffe905ab027e05abffe905ab027e05abffe905abffe905abffe905abffe9
05abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905ab
ffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e
05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d5
00920800000007eb013007eb012007eb013007eb012004d500b204d50080
04d5002a082b0198086b01b807550010060000f40600006f0440003a0540
003704c0003f04150040040000250600005505ab002f046b003b04d50003
01c00089035500a206ab003403d5006404d5009202d6008302d6008304d5
00b202d6007005c70010038d00490556004a038d00460556004a038d0046
04e3002a038d004c04e3002a038d004c04e3002a038d004c05c700480400
003d05c700480400003d05c700480400003d05c700230400000d05c70023
0400000d02aa00160239ffde02aa00170239ffdf02aa00330239fffe02aa
00330239003c031d002a0239ff6305c70022040000110400001104e30029
0239003d05c7ffe50400000c059d002603f5000c05c700480400004505c7
0048040000450556002302aa000d04730080031d006404e3003b02390010
05c7000b0400000205c7000b0400000205c7000b0400000205c7000b0400
0002078d001b05c7000d05c700130400000c0239001605c7000f038d0049
071dffe80556004905c7004904000027023900b2078d001b05c7000d078d
001b05c7000d078d001b05c7000d05c700130400000c02aa00b802aaffdb
0400003d04cd005a060000860600002a060000310600002502aa00c302aa
00bb02aa00ec02aaffea05c70010058dff5c0677ff5c034aff5c05c7ffb6
0687ff5c05f2ffb30227ffb105c70010055600220525003204e3002a04e3
001a05c7002302aa003305c7002205cd001c071d002205c7ffe50525004f
05c7004805c700250473002204a8002004e3003e05c7001305c7000f05e7
001805f2003c02aa003205c7001304310057035c0047042f000b02270025
03f6fffa0412006e0389000003500046042f000b03d50051022700250408
001503e10019044a0074039effd3039100460400004503fe0059032b0046
03f6fffa038d00180502001c0544004b0227000003f6fffa0400004503f6
fffa0544004b04e3002a0604003704a000250548004b0473008002aa0033
02aa0032031d002a06fa000d06fa002705ee00360556002505aa001a05c7
002505c70010049800240556002204a000250575001a04e3002a072b0012
0402002b05c7002505c7002505560025056d0012071d002205c7002305c7
004805c70025047300220556004a04e3003e05aa001a0652004c05c7000f
05c700250533fffa081200390812003905a6003606fa0025049800240548
003a083900260556ffee038d00490412004e03c700300348001f0412001a
038d004c05870017032900180448002e0448002e03e3002e03fe000c0510
002e0448002e040000450448002e0400fff9038d0046037f000c0400000c
052f00570400001b0448002e0406001e0629002e0629002e0423000c0560
002d03a6002e036f001b05fa002d03aeffff038d004c03dd00110348001f
036f0046031d00640239003c023900020239ff6305d1000c05c9002d0400
000d03e3002e0400000c0448002e039a002502cf001f0800004107a20010
040a000d000001010000001c0000003200000012000001020000008f0000
008f0000008f00000090000001020000001c000001020000012102d90056
0000008f025400e0000002af0000ff6b023900b003da005f03a4003302af
0021035a004303c5004e023b0043024a004e03d0005803ce004302220043
039e0043037600330374000f040f006403e2004e023200430270002103cd
005f03a2004303a200430386005803dc004303ae003d03ca006903c00043
04e200430400002104750043045d00430444004301ac006b02f9006b0636
0096023bff9d039e0043039e00430374ff5b0374ff5b03a2003304e20043
04e2004304e2004304e2004303da005f03da005f03da005f03a4003302af
0021035a004303c5004e023b00430279000c03ce004302220043039e0043
037600330374000f03e2004e0270002103cd005f03a200430386005803ae
003d03ca006903c0004304e2004304000021023b004303a4003303760033
038600580404000f0000ffdc0000ff250000ffdc0000fe51028d00ab028d
00a002da0043034d007901a8ffba00000046000000460000004600000046
000000480000004600000046000000460435017c0435012e043500b70435
00810435012c043500be043500af043500810435009a043500db04350085
028d00c1043500b3060001000600010002420036060001000435009e0435
0098043500cb060001000600010006000100060001000600010000000046
060001000600010006000100060001000600010006000100060001000600
0100051bffba06000100060001000600010005b5003a05b5003a01f4ffba
01f4ffba060001000600010006000100060001000481003604350036043d
ffba043dffba03e9004a03e9004a067f0014077600140327ffba041effba
067f0014077600140327ffba041effba051b003204b500240300fff70600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000000
003000000046000000460000004000000046060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0400001b0800000006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
028d007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a8
005601d60010037500320375003201a8002d01d60013051b003204b50024
01f4ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4
ffba024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9
004a0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba
04a7ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a
00360435ffba0327ffba064f0027064f00270224ffba021affba04a70046
04a700460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d
0047040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba
043500450435004501f4ffba01f4ffba024200360300fff7039affba0327
ffba0375003203750032051b003204b50024051b003204b5002401f4ffba
01f4ffba045a004004ce0040045a002604ce0030045a005304ce0041045a
005304ce0041060001000600010000000046000000460600010006000100
060001000000004600000046060001000600010000000048000000460600
010006000100060001000000004600000046000000460000004600000040
000000300600010000000046000000460600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000600010006000100060001000600010006000100028d00ca028d00c7
028d00c60600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000100ffba0800ffba1000ffba05c70048043b0045
0635000b045600020000fdcc0000fc140000fd130000fe420000fce00000
fdd40000fe620000fe2b0000fdb70000fc980000fd880000fc080000fcfe
0000feff0000ff030000fe9e041a00a206000088060000140000fe700000
fdd40000fdf60000fd770000fe620000fdbb0000fbd80000fbd80000fb74
0000fcfe0000fc8c0000fc460000fd270000fcb40000fca80000fcae0000
fc440000fe140000fe700000fd910000fc710000fdc30000fe470000fe62
0000fcc30000fde10000fd870000fd4b0000fd970000fd4b0000fc8a0000
fc620000fc090000fbd70239003c05c70010038d004905c70010038d0049
05c70010038d004905c70010038d004905c70010038d004905c70010038d
004905c70010038d004905c70010038d004905c70010038d004905c70010
038d004905c70010038d004905c70010038d004904e3002a038d004c04e3
002a038d004c04e3002a038d004c04e3002a038d004c04e3002a038d004c
04e3002a038d004c04e3002a038d004c04e3002a038d004c02aa00330239
003c02aa00330239003c05c700480400004505c700480400004505c70048
0400004505c700480400004505c700480400004505c700480400004505c7
00480400004505c70048043b004505c70048043b004505c70048043b0045
05c70048043b004505c70048043b004505c7000b0400000205c7000b0400
00020635000b045600020635000b045600020635000b045600020635000b
045600020635000b0456000205c700130400000c05c700130400000c05c7
00130400000c05c70010038d004902aa00330239000605c7004804000045
05c7000b0400000205c7000b0400000205c7000b0400000205c7000b0400
000205c7000b040000020000ff090000ff090000ff090000ff0904a00023
0348001f072b0012058700170556002503e3002e0556002503e3002e05c7
00230448002e05c700130400000205c700130400000205c7000f0400001b
0533fffa0406001e053300250400000d05c7002b038d004c05c700480400
004505b5003a01f4ffba0224ffba021affba04a7004601f4009e01f40010
01f4001b01f4001001f4006b01f4fff90227ffce0000000f01a8fff502aa
00a402aa00a40000000e01a80056000000560000ffcf01a8000f01d6ffbf
01a8fff501d6ffcd01a8001d01d6fff501a8009301d60013037500320375
00320375003203750032051b003204b5002405b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba02b3003202b3003202b3005f02b3
005f02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f
02b3005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5
ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba
045a002a039a00360435ffba0327ffba064f0027064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba064f0027064f
00270224ffba021affba04a7004604a7004604a7004604a70046093e0032
093e00320740ffba0740ffba067f0014077600140327ffba041effba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
04cf002d04cf002d0327ffba0327ffba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d
004701a8ffba01a8ffba043500450435004501f4ffba01f4ffba04350045
043500450435004504350045043500450435004501f4ffba01f4ffba0435
0045043500450481003604350036043dffba043dffba024200360300fff7
031a001a031a001a031a001a037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
03750032037500320375003203750032051bffba04b5ffba051b003204b5
002401f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba
01f4ffba051b003204b50024067f0045067f0045067f0045067f004501a8
00280000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e
08fc003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000
ff9f018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff58
0000ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5
ffba06c5ffba045a002a039a00360435ffba0327ffba034d007902b40023
0242003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4
006d067f001407760014022200430000fee702bc000004440043045afff5
04cefff5045a005304ce0041045a005304ce0041045a005304ce0041045a
005304ce0041045a005304ce0041045a005304ce004104350071043500ad
045a000f04ce000f0400fffb061400000498002404000096049800240400
00000556004a0556004a038d004605c70023068500000498004404000044
03c5004604e3002f040200550473ff6d05c7004805c700120629000d0207
fffe02aa002305c70022040000110239002d03e100190688002305c7ff7a
0400000c05c700480766004a05880045053300000400fff9047300240473
006e031d004804a8002002c000040239001404e300000239001404e3003e
05f2003c05c7000b063f00440400000c04e3001a038d00290450002b0450
003f038d0046038d00500400002c0400002a038c0034036000140400fff9
019a00a1023f00a101fe000a02aa00e40aaa002309540023078d00440800
0029071c00290472003d08e4ffe50800ffe50639000c038d004c05c70010
038d00490000ff0905c70010038d0049071dffe80556004905c700480400
000005c700480400003d05c700220400001105c700480400004505c70048
040000450450002b038d00210239ff630aaa002309540023078d004405c7
00480400003d07990023047b002205c7ffe50400000c05c70010038d0049
05c70010038d004904e3002a038d004c04e3002a038d004c02aaffd30239
ffa102aa00330239fffe05c700480400004505c700480400004505560023
02aa000d0556002302aa000d05c7000b0400000205c7000b040000020473
0080031d006404e3003e023900140481004b0329005405c700230400000d
0533002504d400480400004504e3001a038d002905c70010038d004904e3
002a038d004c05c70048040000450000feec05c700480400004505c70048
0400004505c700480400004505c700130400000c038d0004042f0044042f
fff704000096038d0043038d00460400004404000044038d003a0504004c
035c0047035c004004b40040038b004502aaff30040000440400004403a0
004504000011038d00000400000d0400001b0400001b0239002d02270025
02390036023900280239003d0239003d049f003d06390009063900090639
00110400ff300400000c03fa000c04000045050a00450544004b046d0045
02aafff302aafff302aafff302aa000c02aa000d02aa001702aafff303e7
003603e70036031d006402aaff3002aaff30037dff9402aaffe302390014
02390014040000020464006603c200020400001105c7000d0400000c03f1
0004038d002903f70029038d0021038d003c038d005d038d0046038d005d
038d004605c7004803c70030038b004503a000450448002e0239ff7f0400
fff40370003604000044038d005d038d0046066b004406c2004406d30044
0485001403ae001405310014064d004f0487003d047a003d041d001403d9
003c0292001e02920026013effd201bd001e01bd000501bd00050259001e
036d00040260000401c0008902ec008902aa00b902aa00c102aa00b802aa
00f702aa00f701fc001e01fc001e04830027048300250483005304830053
02aa012102aa00ec02aa007602aa012102aa001d02aa007602aa00ec0239
00b6023900b602aa00f702aa00f702aa00a602aa00a602aa00a602aa001d
02aaffef030e002d025800040154001e01b3001e0250000401fc001e0310
00960310009603100096031000960310009602aa006202aa006202aa003c
02aa0017038d004304570096045700960457009604570096045700430457
0043045700430457004304570043031000430457002f0457002f0457002f
0457002f0457002f0310002f045700250457002504570025045700250457
00250310002f0457001a0457001a0457001a0457001a0457001a0310001a
045700420457004204570042045700420457004203100042045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457002f0457002f0457002f0457002f0457002f0310002f0457
002f0457002f0457002f0457002f0457002f0310002f0457002604570026
045700260457002604570026031000260457004204570042045700420457
004204570042031000420457009604570096045700960457009604570042
045700420457004204570042045700420310004204570026045700260457
002604570026045700260310002604570023045700230457002304570023
04570023031000230457002f0457002f0457002f0457002f0457002f0310
002f0457004b0457004b0457004b0457004b0457004b0310004b04570096
045700960457009604570096045700420457004204570042045700420457
0042031000420457001a0457001a0457001a0457001a0457001a0310001a
0457002404570024045700240457002404570024031000240457002f0457
002f0457002f0457002f0457002f0310002f0457004e0457004e0457004e
0457004e0457004e0310004e045700960457009604570096045700960000
fee60000febf0000fdee0000fee00000ff940000fee60000ff440000fee3
0000fee50000ffce0000ff660000fee30000fee00000fee00000ff880000
ff880000ff88000000000000ff5b0000ff5d0000ff440000ff5f0000fe87
0000ffec0000ffa40000ff510000ff510000ff510000fec10000fe8a0000
00000000fee60000ff440000ff860000ff650000ff580000ffce0000fe87
0000febb0000fee50000fee60000fee00000fee00000fec10000febf0000
fdee0000fec10000fec10000febf0000fdee0000fe160000feb50000ffa4
0000fe870000ff440000feba0000ff230000ff9a0000fdee0000feb70000
00000000fec20000ff880000fe980000ff820000fe870000fde40000ff66
0000ff440000fec20000fec20000fec20000ff030000ff520000fd1f0000
ffb70000ffcb0000ff530000ff070000ff150000ff770000fef90000fecf
0000ff190000fede0000fed40000fe2a0000ff350000ff5b0000fed90000
fedc02aa00ec02aa007602aa00da0412005103f6000005c70013071f0000
05c700130436004505440000047b000a05c70048040000450556006e035c
001d0473002103930017049b0014039c001405da000a046e000006a00023
0639001104ed0046042b0045054a001e038d001d04560046045600460540
004504a60014059800480412004e03cd001e03160014047b000a0412004e
038d00460239ff6305c70048033d0046033d002804e3002a05c70025038d
004c0448002e0961004805110023055e00140458001e07be0027056b002d
05c7000004b800000843002306ac002d072b00120587001709ab0023077b
002d040200090329000005e700120502001c05c70048040000450682003a
04b600390682003a04b6003908c30048070a0045061a002a0487004509b4
0048065600460000fe3709610048051100230556004a038d004602ac001e
0000fea60000febc0000ff860000ff860000fc2b0000fc4c05c700250448
002e0498002403c3002e047300220400fff9050d0025041f001f0402002b
032900180556002503e3001f064900360496000c06ce002304fc002e0842
00250650002e0556004b038d00460556004a038d004604e3003e037f000c
0660003604d3000c0533fffa0406001e0707000a045f000a0707000a045f
000a02aa0033072b00120587001705560025041f002e056d001203fe000c
05c700230448002e05c700230448002e0533fffa0406001e071d00220510
002e044800dc05c70010038d004905c70010038d0049071dffe805560049
04e3002a038d004c05c7002b038d004c072b0012058700170402002b0329
00180402002b038d002105c700250448002e05c700250448002e05c70048
0400004505c70048040000450548003b036f001b05aa001a0400000c05aa
001a0400000c05aa001a0400000c0533fffa0406001e06fa00250560002d
0498004404000044066e0044062a0044066b006605a5005404970066039f
0054074100120604000c07990023064d002e05c7004803a000450591003e
04d0000c0000ff430000fec90000ff770000ffb00000ff470000ff560000
ff740000fed70000feac000000000000ff520000ff56000000000000feac
0000fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000
ff7f0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae
0000ff8c000001020000ff090000ff090000fee20000fee20000ff8f0000
ff210000ff0905c70010038d0049055600220400fffb055600220400fffb
055600220400fffb0556004a038d004605c700230400004405c700230400
004405c700230400004405c700230400004405c700230400004404e3002a
038d004c04e3002a038d004c04e3002a038d004c04e3002a038d004c04e3
002a038d004c0473002102aa004f05c700480400003d05c700230400000d
05c700230400000d05c700230400000d05c700230400000d05c700230400
000d02aa001b0239ffea02aa00330239000205c700220400001105c70022
0400001105c700220400001104e300290239003d04e300290239ffe904e3
00290239ffe704e300290239000f071d002206390011071d002206390011
071d00220639001105c7ffe50400000c05c7ffe50400000c05c7ffe50400
000c05c7ffe50400000c05c700480400004505c700480400004505c70048
0400004505c7004804000045047300220400fff9047300220400fff90556
002302aa000d0556002302aa000d0556002302aa000d0556002302aa000d
04730080031d006404730080031d006404730080031d006404730080031d
006004730080031d006404e3003e0239001404e3003e0239001404e3003e
0239fff504e3003e0239001405c7000b0400000205c7000b0400000205c7
000b0400000205c7000b0400000205c7000b0400000205c7001204000011
05c7001204000011078d001b05c7000d078d001b05c7000d05c7000f0400
001b05c7000f0400001b05c700130400000c04e3001a038d002904e3001a
038d002904e3001a038d00290400000d0239ffff05c7000d0400000c038d
004902390016043100570431005704310057043100570431005704310057
043100570431005705c7001005c700100654000006540000065400000654
00000654000006540000035c0047035c0047035c0047035c0047035c0047
035c004705fc000005fc0000073c0000073c0000073c0000073c0000042f
000b042f000b042f000b042f000b042f000b042f000b042f000b042f000b
06e0000006e0000008200000082000000820000008200000082000000820
000002270025022700250227ffaf0227ffaf0227ffff0227ffff0227ffd3
0227ffd303c3000003c30000050300000503000005030000050300000503
000005030000040000450400004504000045040000450400004504000045
065400000654000007f8000007f80000073000000730000003f6fffa03f6
fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa06e00000
082a0000082a0000082a00000544004b0544004b0544004b0544004b0544
004b0544004b0544004b0544004b067f0000067f000007fb000007fb0000
076f0000076f0000076f0000076f00000431005704310057035c0047035c
0047042f000b042f000b0227002502270025040000450400004503f6fffa
03f6fffa0544004b0544004b043100570431005704310057043100570431
005704310057043100570431005705c7001005c700100654000006540000
06540000065400000654000006540000042f000b042f000b042f000b042f
000b042f000b042f000b042f000b042f000b06e0000006e0000008200000
08200000082000000820000008200000082000000544004b0544004b0544
004b0544004b0544004b0544004b0544004b0544004b067f0000067f0000
07fb000007fb0000076f0000076f0000076f0000076f0000043100570431
0057043100570431005704310057043100570431005705c7001005c70010
05c7001005c7001005c7001002aa00db02aa00d802aa00db02aa001602aa
0016042f000b042f000b042f000b042f000b042f000b05fc000006130000
06e1000006f7000005c7002302aa002702aa002702aa00160227fff10227
ffd10227fff30227fff30227ffd00227ffd002aa003302aa001603c40000
03da000002aa002702aa002702aa001603f6fffa03f6fffa03f6fffa03f6
fffa03fe005903fe005903f6fffa03f6fffa05c7001305c7001307090000
07330000058c000002aaffea02aaffea02aa00760544004b0544004b0544
004b0544004b0544004b06cd0000062f000006e400000632000005f2003c
02aa00ec02aa00db04ef00460556004a0556004a0639001105c7ffe508d0
0023078d001b05c7002204e3003e080000290400003004c100660000ffcb
0000ffcb0000ffb70000ffb70239002d0239ff630400000f047300220400
00440239003d0400000c0289001404ff001e04ed001e02aa009202aa0092
02aa00d102aa00d102aa009702aa007602aa004e02aa004e02aa00150239
00b002aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a
0000ff7b0000ffa00000fee00000ff230000ff7b0000ff7b0000feb20000
ffa00000ffcb0000ffcb0000ffcb047300240400fff90405000505290005
0556004903b8002d03d300450432002d0432002d038e002d032900180239
003c025f00190451002d038f00230510002e0448002e0400004503d3002d
04550045044d00450455002105c7003e037e0045040000450400004503a6
002e03aeffff03aeffff037f000c044c002d040a002d053d002d0409002d
0400001105c7000d038d002903290018032e0045044f000f0348001f0400
00110448002e03a6002e043a000f03fe000c03600000044e00000318001e
0318001e0370001e02f6001e02f6001e0376001e0386001e0199001e01f9
001e03aa001e02f8001e0452001e03b3001e0387001e0358001e02b0001e
02a7001e0347001e02e6001e03a0001e046e00000230001e0230001e0283
001e031f001e027a001e027d001e020d001e020d001e01ef001e01ef001e
0268001e014f001e0286001e03e9001e0241001e024e001e020c001e024e
001e024e001e027d001e0188001e029f001e0272001e03e9001e025a0005
028d00050242001e021f0005022b001e02ad001e02420005014f001e01d6
001e029f001e025a00050242001e021f0005025e001e02ad001e02420005
05ed00460a66004606130046075b00460541ffba01e9003c045a00110000
ff0d0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e
0000feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039a
ffba0327ffba0506005f0486004304f1004e04a2003304a0000f053b0064
04ec0043052c0021048300250000fe4b0000fe4c0000fe4c0400ffee038d
00430355000701a8ffba01a8ffba01a8ffba01a8ffba0658001509c50047
0400000008000000040000000800000002ab000002000000015500000400
000002000000019a000000ab0000000000000556004a071d00220510002e
0616000206310044062e004405c700100556004a0400008104e3002904e3
003e031d0064038d00290445005d000001020000ff420000fea40000ff3a
0000ffcb03fe000a055600470556004a0556004704a000250348001f0000
ff430000ff6b0000ffae027000580000ff39021affba0250001e0000ff3a
0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a05b5
003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba02b3003202b3003202b3005f
02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba045a
002a039a00360435ffba0327ffba045a002a039a00360435ffba0327ffba
045a002a039a00360435ffba0327ffba064f0027064f00270224ffba021a
ffba064f0027064f00270224ffba021affba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba02b4002302b400230327ffba0327ffba02b4002302b40023
0327ffba0327ffba043500450435004501f4ffba01f4ffba043500450435
004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d0047
040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a0692
003e0692003e043fffba043fffba0400ffa80400004402aa001406390011
0400000c0400ffae02aaffbc02aaffbc031d001e0239ffbd038d00290400
003d0296001e03c50041062100140239002c022700250400fff9044c002d
046400190400fffb0400004402aa004f04c6003d040000110239003d0639
00110400000c0400fff902aa000d031d00640365ff30040000110400001b
038d0029038d0049042f004404000044038d004c035c0047035c0040038d
004c0239003c038d00430384000a04000002038d002102830005020c001e
020c001e024d001e01ef001e01ab001e01abffa60221001e0292001e014f
00150175001e0151001e0151001a018b0000014f001e014f001e022a001e
0395001e03e9001e029fffa4029f001e0293001e024e001e0291001e01b3
001e01b9ff920188001e029f001f0289001e029a001e0253001e025a0005
0231001e0231001e026e001e0220001e0228001e0000fe930000fe930000
ff730000febc023900b00230001e020d001e024e001e02520005020d001e
05c7004805c700100473003c0556004a02aa005304310057043100570431
005704310057043100570431005704310057043100570227ffcd0227ffd1
0227ffd10227ffd10227ffcd0227fff10227ffcd0227fff103f6fffa03f6
fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa0227ffd1
0227ffd10227fff10227fff103f6fffa03f6fffa03f6fffa03f6fffa045a
005304ce004a032e00130556002205c7000b05cd001c04e3002a038d004c
031d002a0239ff63059e004a040000440556002302aa000d05c700130400
000c038d0043038d0046038d00430239003d04a000230348001f05c7000f
0400001b05c7000f0400001b0402005503290042056d001203fe000c0000
fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff350000ff7b
0000feb2070e000503550045038d004304e300290239002d04e3000a0473
002205560023038d00490239000e05c700230400000d05c7002204000011
04e3001a038d002903c60041054600230409002e049e00450000ff3b0000
ff510000ff080000fef90000fea40000fea40239003c059d002605c7ffe5
059d00260000fee00000ff590000feeb0000ff0f0000fee60000ff090000
feed0000fef50000ff0e0000feed0000fdcc05c7004804000044078d001b
05c7000d05b500230000fe9205c9004804c6001107fc001b0697000d0239
00b002f300260171005101710051040000990400009902aa00e400e400e4
003c00000000000000000076000000760000007600000076000001300000
0228000003f60000062e0000083a00000a6e00000af200000b7600000bf8
00000dd000000ea000000f3e00000f9800000ff000001062000011940000
1278000014480000162600001738000018c400001a3e00001b3400001d48
00001ece00001f5e0000202c0000214a000021ec0000231c0000248c0000
276e000029f600002d1a00002e9400003006000031d80000338800003582
000037bc000038de00003a3200003da800003ebe0000411a000043540000
44700000466a000047f200004a9200004d8c00004ee2000050ea0000536c
0000574200005b3a00005da000005eea00005f9200006014000060be0000
61a6000061e200006238000066320000687600006ad400006da600007186
0000740a000078a200007bd200007e88000080ca00008534000087100000
8bda00008f42000091ae0000947a000096d40000990400009dc80000a01e
0000a2c20000a5f00000aa520000aeec0000b1aa0000b3a60000b49a0000
b5080000b5fa0000b6b80000b7080000b73a0000b7860000b7bc0000b7f8
0000b82e0000b8780000b8ae0000b8ee0000b9360000b9760000b9a40000
b9da0000ba060000ba3a0000ba760000bab80000baee0000bb280000bb58
0000bb900000bbc80000bc040000bc3c0000bc6e0000bcac0000bce80000
bd260000bd600000bd960000bddc0000be200000bf7c0000c0540000c24a
0000c4b40000c71c0000c7780000c8140000c9b00000ccc80000ceca0000
d1360000d18e0000d2240000d3880000d5a40000d7480000d89c0000d99e
0000dada0000dc360000de6c0000dfee0000e1160000e1f00000e2da0000
e4040000e4ea0000e6800000e76e0000e9020000ec6c0000ee8e0000efea
0000f0920000f0ea0000f1b00000f3320000f49a0000f5480000f5e00000
f67c0000f77e0000f7ba0000f7f80000f82e0000fa6e0000fe020000fe3a
0000fe720000ff780000ff9e0001004a000100ec000101d0000102e20001
032c0001035e000103ba0001052000010584000105e40001084800010a70
00010d0a00010d5a00010d7c00010e9000011168000111b0000112040001
124200011282000112b2000112e60001133a00011380000113b2000113e6
0001141e0001145000011480000114c6000114f600011664000116e00001
17a2000117de0001185a000118b4000119ce00011aa400011b4200011bc0
00011c2a00011da200011fa800011fe6000120240001205c000120a60001
212a00012270000124b4000124e400012526000126a200012896000128dc
000129fe00012ab600012bd400012cfa00012ef800013088000132760001
343a00013474000134b0000134e0000135260001357a000135b6000135f6
00013632000136660001390a000139480001398c000139ca00013a0c0001
3a3200013a5800013a9000013d3e00013e6800013e9000013eb600013eee
00013f2c00013f5c00013f90000140be0001426200014296000142cc0001
43020001434000014382000143be000143f0000144360001446c000144a2
000144e0000145140001455800014594000145ba000145de000146220001
486e000148b0000148e20001491a0001494c0001497c000149b2000149f2
00014a3200014ad400014c9c00014e2400014f34000150d60001523a0001
53240001543000015596000156080001563c0001578800015aaa00015b56
00015c1a00015cc800015d8600015ea200015fba00016116000161720001
62ae0001639400016472000164d000016554000165da0001661c00016658
000166a8000166f8000167480001679a000167fa0001685a000168bc0001
6922000169ac00016a1400016a7a00016af000016b6600016bf400016c6a
00016cde00016d6a00016de000016e5a00016ee800016f6000016fd60001
7064000170e80001716c0001722a000172b200017342000173fc0001748a
00017514000175d200017662000176ee000177ac00017886000179660001
7a8800017acc00017b0800017b4600017b8a00017bce00017ff60001878a
00018eb800018ef400018f3200018f7800018fc0000190060001904c0001
9134000191bc0001928a0001943600019598000197d0000198be000199e8
00019ae200019bfa00019c9800019d1c00019dca00019e9800019ef20001
9fa00001a0220001a08e0001a0c20001a24c0001a3a60001a41e0001a46c
0001a4ec0001a5500001a5d60001a6120001a6440001a67a0001a6b80001
a6fa0001a7280001a76c0001a79a0001a7d40001a8020001a83a0001a868
0001a8b40001a8fc0001a93c0001a96c0001a9920001a9c80001a9f80001
aa2e0001ac1c0001aed00001af000001af4a0001af7c0001afc20001aff2
0001b02c0001b0520001b0760001b0b40001b2560001b28c0001b2bc0001
b4de0001b5040001b5540001b57e0001b5ae0001b6f80001b89c0001b8d2
0001b9080001b93c0001b9800001b9a60001b9d60001ba060001ba380001
bb900001bd7c0001bdac0001bde00001be120001be460001be760001bea6
0001becc0001bef20001bf220001bf560001bf860001bfb60001c0a40001
c0e40001c1240001c1540001c1840001c1b40001c1e40001c22e0001c25e
0001c28e0001c2be0001c2ee0001c3220001c3560001c38c0001c3c60001
c43c0001c4760001c64e0001c71c0001c9260001cba60001cdf40001cffa
0001d0740001d10e0001d11e0001d2320001d25e0001d3e00001d5460001
d6080001d6420001d7b60001d7f00001d82c0001d83c0001d84c0001d964
0001d9740001d9840001d9940001d9a40001d9b40001db1e0001db2e0001
db3e0001dcc20001dcd20001ddd80001dde80001def00001df000001df10
0001df200001e08e0001e2480001e27c0001e2ae0001e2de0001e30e0001
e33e0001e36c0001e3a20001e53e0001e6340001e7d40001e8fa0001ea2c
0001eb2a0001ecd80001ee1a0001ef800001f0860001f2800001f2900001
f3ea0001f5380001f6580001f7dc0001f9680001fafa0001fb320001fb68
0001fba00001fbd00001fc000001fc340001fda60001fdd60001fefc0001
ff0c0001ff1c0001ff500001ff60000200c6000202a20002043000020460
000206400002079e000207ae000208d0000208e00002098200020ab00002
0ac000020d6800020f040002107c0002125c000213d6000214c8000214d8
000214e8000214f800021508000215180002152800021538000216a20002
1850000218600002199400021ae400021ccc00021ed8000220140002218c
00022284000222be000224200002245000022460000225cc000227680002
284e000229c4000229d400022c9c00022dfc00022fdc0002323200023444
000235a8000237f00002399c000239ac00023b0e00023b1e00023b2e0002
3c3800023c4800023e6000023e7000023ffc00024174000243560002456e
000246f0000248e800024a2a00024a6400024c1e00024dcc00024e120002
50220002505000025192000251a2000251b2000251ee000251fe000253dc
000255f20002583a0002586a00025ad600025c7600025d1400025df20002
5e3800025ff6000261800002621e00026380000264480002656c000265c2
0002665c000267480002677c000268220002687800026970000269c60002
6a0600026a4800026a8400026ab600026b0000026b4800026bd000026dc0
00026e9600026fa40002707a000271a00002723400027302000274240002
75b00002764a00027704000277b8000278ea000279ce00027b1c00027bca
00027ca400027d9400027f4c0002806200028188000283400002850a0002
864a000286f40002891200028a3400028b5000028c7600028d9c00028df6
00028ea600028fde0002901000029056000290a4000290e8000291580002
92d60002930400029332000293600002938e000293bc000293ea00029692
000296ca0002971800029756000297a2000298020002990c000299400002
9a4200029a7a00029ab400029afa00029b3e00029b8200029bb000029d4a
00029ef200029f3800029f8e00029fc60002a24e0002a2820002a2b00002
a2de0002a30a0002a33c0002a5860002a5b00002a6cc0002a77e0002a82a
0002a8ac0002a9680002aa800002ab8e0002abc20002ac480002ada40002
ae260002ae700002af7a0002afc20002b0c60002b1420002b19a0002b21c
0002b3080002b41e0002b50c0002b5b60002b6b60002b7960002b8860002
b96e0002ba1e0002baa00002bcfe0002bd280002bd520002be0a0002be34
0002bf760002c07c0002c1660002c1900002c1ba0002c1e40002c20e0002
c2380002c3b80002c3e20002c40c0002c4360002c4600002c48a0002c4b4
0002c4de0002c5080002c53c0002c5660002c5900002c5ba0002c7340002
c7440002c85e0002c86e0002c8980002c8c20002c8ec0002c9160002cabe
0002ccce0002cdfc0002ce0c0002cf880002cf980002d0de0002d2aa0002
d3b00002d5300002d6d80002d9040002da660002dc500002dd940002dec2
0002dfb00002dfda0002e0040002e02e0002e0580002e0820002e0ac0002
e0d60002e1000002e12a0002e1540002e17e0002e1a80002e1d20002e1fc
0002e2260002e4620002e5de0002e7220002e90a0002ea520002ea7c0002
eaa60002ead00002eafa0002eb240002eb4e0002eb780002eba20002ebcc
0002ebf60002ec200002ec4a0002ec740002ec9e0002ecc80002ecf20002
ed1c0002ed460002ef820002f2c80002f2f20002f31c0002f3460002f370
0002f39a0002f3c40002f3ee0002f4180002f4420002f46c0002f4960002
f4c00002f4ea0002f5140002f53e0002f5680002f5920002f5bc0002f5e6
0002f6100002f63a0002f6640002f68e0002f6b80002f6e20002f70c0002
f7360002f7600002f7fa0002f8100002f83a0002fb1a0002fb2a0002fc44
0002fd660002fea40002ffe60003018c0003019c000302de0003042e0003
061e000307f20003090a0003091a0003099c00030a2a00030b2a00030b3a
00030bda00030bea00030d0000030e5400030f8400030f94000310620003
1072000311e8000311f80003130c0003131c00031450000315e6000316a2
000316b2000317b00003190a00031996000319a600031ad000031c5c0003
1d1800031d2800031dc000031dd000031e9c00031eac00031f8400031f94
0003209c000320ac0003227200032282000323da000323ea000326540003
26640003285e0003286e000329d8000329e800032ad800032ae800032c80
00032c9000032dae00032dbe00032efe00032f0e00032f1e00032f2e0003
30a6000330b6000330c6000330d60003322800033378000334460003352a
000336aa0003382e0003392e00033a4200033b8600033b9600033c840003
3d5e00033efa00033f0a000340280003412e000343260003433600034346
00034356000344a0000344b0000345680003457800034686000346960003
478200034792000348b0000348c00003495e0003496e0003497e00034a6c
00034be000034d0c00034e0600034e1600034e2600034e3600034fd40003
518e0003525c0003526c000354cc000357160003599c00035c0400035e8a
00036100000362d00003648a000364b4000364de000364ee000364fe0003
6528000365520003657c0003658c0003659c000365c6000365f000036600
000366100003663a000366640003668e0003669e000366ae000366be0003
66ce000366de000366ee000367180003672800036738000367620003678c
000367b6000367e00003680a000368340003685e00036888000368b20003
68dc00036906000369300003695a00036984000369ae000369d800036a02
00036a2c00036a5600036a8000036aaa00036ad400036afe00036b280003
6b5200036b7c00036ba600036bd000036bfa00036c2400036c4e00036c78
00036ca200036ccc00036cf600036d2000036d4a00036d7400036d9e0003
6dc800036df200036e1c00036e4600036e7000036e9a00036ec400036eee
00036f1800036f4200036f6c00036f9600036fc000036fea000370140003
70b4000370f80003716e00037198000371c2000371ec0003721600037240
0003726a00037294000372be000372e8000373120003733c000373660003
7390000373ba000373e40003740e00037438000374620003748c000374b6
000374e00003750a000375340003755e00037592000375c6000375fa0003
77a8000379b800037ba800037db600037e4800037ea200037f0c00037fa6
00038036000380a60003817a000382680003833c0003842c000384c60003
859a00038634000386e200038788000387da0003893800038986000389d4
00038a2c00038a8400038ad600038b2800038be400038ca000038d360003
8dcc00038e6200038efe00038f9a00039036000390480003905a0003906c
0003907e00039090000390ea0003914a000391e6000391f80003920a0003
921a0003922a0003923c0003924e00039260000392720003928400039296
00039332000393c800039464000394fa000396160003963c000396620003
9688000396b2000396ee0003975c000397a40003981a0003985a000398c6
00039902000399660003999e00039a0200039a4200039a9800039ad80003
9b4400039b8e00039be600039c1e00039c7000039ca800039cfc00039d2a
00039d5000039d7a00039db400039de400039e1400039e6a00039ecc0003
9f3000039f980003a0000003a0600003a0b20003a10a0003a1640003a1bc
0003a1ec0003a22a0003a2500003a2840003a2ae0003a2d40003a2fa0003
a3200003a35c0003a3b40003a4100003a4720003a4c40003a5220003a55a
0003a5aa0003a5e60003a6360003a6660003a69e0003a6ce0003a7020003
a7280003a74e0003a77e0003a7ae0003a7d40003a7fa0003a8240003a850
0003a8760003a8b20003a8e20003a9120003a9420003a9720003a9980003
a9d40003aa040003aa440003aa6e0003aa9a0003aacc0003aaf60003ab22
0003ab500003ab860003abc40003ac0c0003ac4a0003ac7a0003acca0003
ad040003ad460003ad760003adcc0003adf60003aec20003aeec0003afac
0003afd60003b08c0003b0b60003b17a0003b26e0003b39c0003b5040003
b6340003b7100003b8340003baf00003bde40003bf940003c1c60003c3e8
0003c6d80003c8840003ca800003ca900003cbf40003ce620003cfe80003
d3dc0003d6f20003d8a00003da940003dbfc0003dc0c0003dd720003dee6
0003dff60003e1680003e2420003e2b80003e36e0003e4140003e5840003
e5bc0003e6360003e6f80003e7b20003e81a0003e9200003ea560003eb34
0003ec920003ed0c0003ed860003ee4e0003ef080003efbc0003f0180003
f0720003f0ba0003f12a0003f1a60003f1f00003f22a0003f2700003f2b4
0003f3060003f3580003f3da0003f45c0003f49e0003f4de0003f5140003
f54a0003f5780003f5a60003f5da0003f60e0003f6500003f6920003f6ce
0003f70a0003f7440003f77e0003f7b00003f7e20003f8140003f8460003
f8800003f8ba0003f8fc0003f93e0003f9800003f9c20003fa100003fa5e
0003faa00003fae20003fb220003fb620003fb9c0003fbd60003fc220003
fc6e0003fcac0003fcec0003fd320003fd780003fdb40003fe0a0003fe46
0003fe820003fec20003ff020003ff3e0003ff7a0003ffba0003fffa0004
003e00040082000400d600040164000401a6000401e800040250000402b8
000402ea0004031c000403540004038c00040422000404b8000405020004
054c00040588000405c40004061a00040670000406ba000407040004075c
000407b4000407f4000408340004086c000408a4000408ee000409380004
0976000409b4000409f600040a3800040a8c00040ae000040b2600040b6c
00040bb200040bf800040c4e00040ca400040cfa00040d5000040d9c0004
0de800040e3400040e8000040ef400040f6800040fdc000410500004108e
000410cc0004110a0004114800041186000411c4000412080004124c0004
1298000412e40004134400041390000413ce0004141c0004152c0004157c
000415cc000416040004163c00041692000416e80004175c000417c00004
1802000418440004189a000418e80004193400041980000419c000041a00
00041a4800041a9000041afc00041b5600041b8e00041bc600041c060004
1c4600041d1600041e1200041ed200041fc0000420160004206c000420be
0004211200042176000421da0004223000042286000422fc000423720004
23b4000423f6000424380004247a000424bc000424fe00042554000425aa
000425fc00042650000426d80004275a000427fa0004289c000428da0004
29180004295600042992000429d000042a0e00042a4c00042a8800042b6c
00042c5800042d6e00042e8a00042f540004301e00043118000432120004
33100004340e0004352c0004364a00043770000438960004399800043a9a
00043b2c00043bbe00043bfc00043c3a00043c9400043cee00043d260004
3d5e00043e6e00043e7e00043ec600043f0e00043f6600043fbe00043ff0
0004402200044064000440a6000440e00004411a0004415e000441a20004
421a000442940004432400044368000443a80004442a000444ac00044604
0004461400044662000446b0000446ec000447280004476e000447b40004
480200044850000448a0000448f00004494c000449a800044b1e00044c86
00044cbe00044cf800044d4400044d9000044de200044e3400044e860004
4edc00044f1800044f5400044faa00044ffe00045136000451d600045224
000452640004529e000454340004569c00045760000458f600045a540004
5b2200045cc800045f1c000461540004619a000461cc000462760004639a
000463be000464580004656400046674000467840004689200046a180004
6a4a00046aec00046b1400046b7600046bd800046c3a00046c9c00046cda
00046d1800046d5200046d8c00046db800046e0400046e3e00046e780004
6fd40004712800047138000471f60004732c0004738a000474a200047630
000476d60004781c0004785a00047898000478d000047928000479540004
7996000479fa00047a4200047aa400047b0400047b7600047bf200047c6e
00047cf000047d7c00047e0800047e9200047f1200047f4c00047f880004
80ec000481b6000481e6000482160004838400048520000485300004864c
0004875e0004888a0004899e00048ae600048c6600048c7600048d9a0004
8ee40004900600049178000492c20004944e000495960004971c000498ea
00049a5000049b0000049bcc00049e720004a0a80004a15a0004a3820004
a5580004a6a80004a7a80004a7b80004a8dc0004aa0a0004ab480004acca
0004aede0004b08e0004b27e0004b28e0004b39c0004b5000004b5ea0004
b75e0004b8640004b9ba0004bae60004bc060004bd740004bebe0004c016
0004c1520004c2ac0004c3f40004c5980004c7220004c8820004ca080004
cbd60004ccc80004cd060004cd5c0004ce040004ce140004ce660004cebe
0004cf1c0004cf400004cf780004cfc80004cff80004d0320004d0800004
d1ac0004d1d60004d2540004d30c0004d3340004d3b40004d3ee0004d42a
0004d5d20004d8c40004d9020004d9380004d9760004d9c40004d9ea0004
da100004da580004da9c0004dae20004db2a0004dc180004dc3c0004dc68
0004dca00004dcdc0004dd180004de7e0004dfbc0004dffe0004e03a0004
e0740004e0c20004e1060004e13a0004e1840004e1cc0004e2120004e246
0004e27e0004e2b60004e2ee0004e34e0004e3940004e3dc0004e4100004
e44a0004e4900004e4d40004e5120004e5480004e5600004e5a80004e5dc
0004e62c0004e65e0004e6940004e8040004ea160004eb700004eca60004
ecdc0004ed300004ee660004f0460004f1980004f2780004f39c0004f3d0
0004f4020004f5e40004f7900004f7ba0004f8300004f9740004f99c0004
fa140004fa480004fa7c0004faa40004fb180004fb500004fb8a0004fd32
0004fe760004ffd40005011a00050252000503ca00050518000506700005
07b00005097800050aea00050c5000050e3400050f54000510720005120a
000513460005148400051654000518500005198600051ae800051c960005
1d9000051da000051e7000051f8e000520780005217600052328000524f6
000526c4000528ca00052a0400052b3e00052c9000052ca000052e7a0005
2f9600053116000531ea000532be000533c8000534a8000535ba0005368c
000537500005392200053af800053d3e00053e5a00053fb2000540ae0005
42120005432a0005444e0005457c0005467c000547a2000548d800054aa0
00054bf600054d1000054e960005502e000551620005531a000554140005
552000055622000556fe00055840000558500005597c00055b1800055b28
00055c6200055e4e00055f08000560a2000561da0005631e000564f20005
6774000569cc00056bfe00056dfc00056fe60005722800057492000575ac
000577ba0005782c000579a000057b2600057c3600057d4200057e620005
7fb40005814c0005832a000584940005851000058610000586a20005872e
000587ba0005886000058906000589fc00058af200058b0200058b120005
8bfc00058cea00058d2000058d7800058dce00058e3000058e5e00058e9a
00058ed800058f5800058fb400059052000590f000059174000591f80005
9290000592be0005935a0005940c00059620000596c8000598f000059aca
00059c0600059c3c00059c8000059cc400059d0800059d3e00059d700005
9db200059e0a00059e4e00059f5400059fcc0005a0520005a0c20005a124
0005a1aa0005a20a0005a2740005a2e80005a3580005a3b60005a45c0005
a4f40005a5600005a5ee0005a6480005a6b60005a7600005a8060005a89c
0005a90c0005a98e0005a9f20005aa9e0005ab5c0005ac080005ac9a0005
acf80005ad640005adba0005ae3c0005aeba0005af400005afcc0005b026
0005b0920005b1020005b1700005b1e00005b2640005b2f40005b35a0005
b3d40005b4500005b4c80005b56e0005b6060005b6960005b6f40005b792
0005b80e0005b8a00005b9440005b9ee0005ba860005bae20005bb360005
bb9e0005bc440005bcee0005bdb80005be5e0005bec00005bf180005bf78
0005c0060005c08c0005c11a0005c17a0005c1de0005c2480005c2b00005
c3180005c3900005c4180005c4ac0005c5180005c5800005c5e40005c690
0005c7500005c7fe0005c88c0005c8ea0005c9560005c9c60005ca6a0005
cb100005cbd40005cc760005ccda0005cd6a0005cddc0005ce740005cef2
0005cf6c0005cfd80005d0660005d0c20005d1200005d1a60005d2220005
d28a0005d2ee0005d3420005d3b00005d4180005d4960005d50c0005d586
0005d6060005d6620005d6c80005d72c0005d7cc0005d86e0005d92c0005
d9dc0005da380005dab00005db0e0005db980005dc300005dcbe0005dd24
0005dd820005de100005de820005df1c0005dfb00005e0200005e0900005
e1080005e1660005e1c60005e2400005e29a0005e2fa0005e3540005e3b0
0005e4180005e4760005e4a60005e4ee0005e5620005e5b60005e62e0005
e71c0005e7ac0005e8100005e8440005e8920005e90e0005e9d80005ea68
0005eae20005eb680005ebe20005ec580005ec920005ecd00005ed500005
edd00005ee060005eeb20005ef6c0005eff60005f07e0005f10e0005f13a
0005f1c40005f2500005f2bc0005f3de0005f45c0005f4ee0005f56a0005
f5ca0005f6180005f6b80005f7140005f7700005f7d80005f8440005f8d0
0005f8fe0005f92a0005f97e0005fa0c0005fa360005fa5e0005faae0005
fafe0005fbb80005fc040005fc420005fcf20005fd660005fdd20005fe40
0005fe7c0005febc0005ff520005ffde000600d00006012c0006016e0006
01c20006023e000602b2000603d2000605280006062e00060698000606f2
00060a2000060ac200060b3200060b8a00060cd000060e0400060ed60006
0fc0000611040006120a000613360006149000061660000617540006180c
0006194a00061b3000061b8800061bc400061c1000061d2600061e4a0006
1f8e00061fe000062012000621360006229200062496000625c0000626e2
000627a8000628ae000629be00062abe00062bee00062c8c00062dcc0006
2f0200063122000633580006348200063588000636dc0006382c000639d0
00063b3a00063cb400063e8600063fa6000640c600064200000642c20006
446a000645a6000646d8000646e8000646f8000647a40006485400064884
000648d0000649000006494400064b2600064cc400064e6e00064fd60006
517600065330000654a0000656140006581c000659fa00065bb200065d96
00066006000662b2000664ac0006667a00066846000669d600066b340006
6c7200066d7e00066e860006700a00067174000672f4000674aa00067604
0006775e000679a400067b7000067be400067c1800067c5200067d6e0006
7e9600067fd600068050000680980006810e000681840006836200068576
000687580006899400068aca00068bd200068d6e00068f06000690500006
91b4000693b8000695a40006977a0006995a00069b0e00069ce200069e16
00069f7a0006a1040006a28a0006a3ea0006a5680006a70a0006a89c0006
a9a00006aa8e0006abfa0006ad360006aeb20006b0180006b1680006b304
0006b4680006b59c0006b5ac0006b5e00006b6060006b7e60006b9840006
bab80006bc0e0006bd8e0006bef00006c04a0006c1c40006c3440006c4ac
0006c6780006c8620006c8e60006c91a0006c93e0006c98e0006c9ce0006
c9de0006c9ee0006ca300006ca580006ca9a0006cad00006cb080006cb44
0006cb860006cbbc0006cd240006cd340006cd680006cd9c0006cdd40006
ce120006ce4e0006ce8a0006cec60006cf020006cf400006cf8a0006cfc2
0006cffa0006d03e0006d08c0006d0e00006d1240006d1660006d19e0006
d1d60006d20e0006d3140006d3240006d4e80006d6de0006d8c20006da60
0006dbd60006dd4a0006ded80006e0620006e1fc0006e3700006e4be0006
e5d20006e7340006e8620006e9180006e9ca0006eaa20006eb200006ebce
0006ec460006ecb60006edc80006ee2a0006eed80006efbc0006f0200006
f0860006f1340006f30c0006f4080006f4880006f4c20006f56e0006f5e6
0006f6b00006f7380006f79c0006f8920006f94e0006fa080006fa4a0006
fac40006fbd00006fc680006fcb40006fd9a0006fe7a0006ffde0007016e
000702820007039600070490000704b8000704e2000705160007054a0007
057000070596000705be000705e40007065c000706b6000706ea00070730
0007075a00070786000707ac000707d8000707fe000708280007084e0007
08760007089e0007090a000709320007098e000709b4000709dc00070a0a
00070a3000070a6400070a9600070aca00070b0200070b3a00070b6e0007
0ba200070bd000070bfa00070c2000070c5800070c9000070cbe00070cf2
00070d1800070d3e00070d6400070d8a00070db400070e1200070e460007
0e8400070eb800070ee200070f0800070f3600070f5c00070f8600070fd4
0007102e0007105a00071080000710ac000710d20007110a0007113e0007
1172000711a6000711cc000711f20007122c000712600007128a000712b0
000712d6000712fc00071322000713480007137000071426000714500007
14f00007151800071586000715ae0007160c000716400007167c000716bc
000716f20007172e0007176000071788000717ae000717fa0007183c0007
18540007187a000718ae000718e0000719080007193000071966000719ca
000719f200071a4c00071a9400071ada00071b0e00071b5000071b760007
1b9c00071bc200071be800071c0e00071c3400071c5c00071c8600071cac
00071cd200071cf800071d1e00071d4600071e0c00071e3600071ea00007
1ed400071f0800071f4000071f7400071fa800071fdc000720060007202c
0007206000072096000720ce0007210e0007214a0007218e000721e20007
222c00072252000722780007229e000722c4000722ea000723340007236c
000723a4000723f20007242e0007246a000724aa000724e8000725260007
2564000725a2000725e0000726220007265600072694000726ce00072708
0007274800072788000727bc000727f00007283e0007287a000728bc0007
28fe000729360007296e000729b6000729fe00072a5600072aae00072b14
00072b7a00072bb000072be600072c2000072c5a00072c9200072cca0007
2d1000072d5600072db600072e1600072e6e00072ec600072f2000072f7a
00072fc20007300a000730440007307e000730bc000730fa000731300007
3166000731a4000731e20007322a00073272000732ba0007330200073350
0007339e000733e000073422000734560007348a000734c4000734fe0007
353800073572000735d2000736320007366c000736a60007370400073762
00073798000737d8000738100007384800073882000738bc000738f60007
393a000739a200073a0e00073a7a00073ac400073af800073b2c00073b66
00073ba000073be400073c2800073c6000073c9800073cde00073d200007
3d5800073d9000073de000073e3000073e8000073ed000073f0600073f4a
00073f8400073fc4000740080007404000074078000740ae000740f20007
41360007416c000741b6000742020007423e0007428c000742de0007432c
0007437a000743c80007441600074466000744ba000745000007454e0007
459a000745e6000746380007468a000746d0000747160007475e000747a6
000747f20007483e00074886000748ce000749240007497a000749ec0007
4a5e00074ac800074b3200074b9e00074c0a00074c6400074cbe00074d02
00074d4600074d9200074dde00074e3200074e8600074ece00074f160007
4f6e00074fc20007500c00075056000750c00007512a00075194000751fe
0007523200075266000752ae000752d40007532a0007535e000753a20007
53d60007540a000754480007548e000754b40007552c0007557c000755f4
000756820007578e000757e2000758080007585000075888000758d00007
5924000759a0000759f000075a7600075a9c00075b4c00075bfe00075d18
00075d4a00075d7c00075e0000075e6e00075ea000075f0a00075f3e0007
5f7200075fbc00076026000760d400076182000762ac000762ea00076326
0007639c000764020007643e00076474000764aa00076510000765440007
6578000765d60007664a000766a80007676e000768340007687c000768da
000769000007694e00076982000769c600076a1400076a7000076ac20007
6b1c00076b4200076b9a00076c1000076e040007705c0007722800077456
00077640000776660007799600077be800077d8a00077f9c000780da0007
82f0000783460007839a000784160007847c0007852c000785dc000787c4
0007898400078aee00078bb000078ce000078dac00078eac00078fc20007
90080007904e00079096000790da000791fc0007923a000792ac00079338
000793c40007942c0007945e0007948e000794be000794ee0007953a0007
956c000795d40007961600079660000796e600079764000797aa000797ec
00079864000798ae00079914000799420007996e0007997e0007998e0007
9aa000079c1e00079db800079ede00079f9c0007a0420007a1140007a1fa
0007a2d60007a37e0007a40a0007a5620007a6420007a6520007a6620007
a6720007a7200007a7d60007a8860007a98a0007aae60007abb80007ac38
0007acbc0007ad740007ad840007ae980007af3a0007b0040007b0b40007
b1ba0007b3140007b3240007b3340007b3440007b41e0007b5080007b5ec
0007b5fc0007b60c0007b61c0007b62c0007b78a0007b79a0007b8e00007
bab00007bc0c0007bd820007be7c0007bf860007c0920007c1b60007c2c0
0007c3440007c3d00007c51e0007c5b40007c74a0007c8560007c94c0007
ca280007cb580007cc4e0007cdc40007ce660007cf880007d1bc0007d2a6
0007d3940007d47a0007d5f40007d6fc0007d8180007d9260007da1e0007
daf60007dbd20007dd1c0007ddc00007df3c0007e0840007e17a0007e270
0007e3520007e3d80007e4680007e5940007e6140007e6d60007e78e0007
e8ce0007ea260007ead60007ebd00007ec780007edd40007eeca0007efd2
0007f09e0007f18c0007f2460007f39c0007f48c0007f52a0007f6840007
f7740007f8740007f8d20007f9d80007fa6e0007fb300007fbd80007fc18
0007fdb60007fe620007ff1a00080042000801d0000802dc000803260008
04b60008053e0008055000080580000805b0000805e80008062000080656
00080692000806c8000807040008086c00080900000809e200080a660008
0b4e00080bea00080c5c00080d2400080d6600080e9600080f4600081030
000810680008108e000810c8000811c2000812e0000813e2000814200008
1446000814a4000814b4000814c4000814d4000814e4000814f400081504
000815140008152400081534000815440008155400081554000816280008
1766000819ac00081adc00081c4c00081de800081fb00008213400082144
0008220c0008232e0008251e0008260c000826d400082716000827ce0008
28940008292c0008298c00082a8e00082b6200082c5600082d5600082dfa
00082e9200082ee800082f3000082f720008301200083072000831640008
31f200083228000832a20008331a0008336a000834760008356c00083616
000836400008366a00083694000836be000836fe0008373e000837760008
37ae000837f80008384200083882000838c20008390c0008395600083996
000839d600083a3000083a8a00083ac400083afe00083b4200083b860008
3bca00083c0e00083c6200083cb600083d0200083d4e00083d8c00083dd0
00083e2000083e7000083eca00083f2800083f5200083f7c000840160008
40b0000840f4000841380008424e0008425e000842a6000842ee00084340
00084392000843fc000844500008449c000844fa00084584000845e80008
462c00084676000846de0008472800084768000847b0000847ec00084828
000848640008489e000848e00008492200084962000849a2000849ec0008
4a3600084a8c00084ae400084b3200084b8000084bc200084c1000084c52
00084c9c00084cde00084d2200084d7e00084dda00084e2600084e720008
4ebc00084f0600084f4400084f82000850000008507e000850b8000850f2
0008518c00085226000852fa000853ce0008542a00085486000854fa0008
556e000856cc000856dc000857c6000857d60008580c000858420008587c
000858b6000858f20008592e00085974000859ba00085b2a00085cce0008
5e220008602e000861aa0008635a0008649a000865980008675e00086892
000869e000086b7a00086ca400086dc400086fc200087066000871080008
728200087380000874dc00087606000877440008783600087a3600087bb4
00087c5e00087df400087f16000880a40008818800088332000884340008
855c0008870c000887dc0008891c00088a3c00088b6600088c8400088dae
00088ee000089016000890fa0008922e0008930e000894160008951e0008
96220008972a000898400008997c00089a5800089b0e00089bd000089d14
00089dfa00089ef000089f6400089fea0008a0b00008a17e0008a2040008
a2ae0008a3420008a4ce0008a61a0008a71a0008a81a0008a9240008aa1c
0008ab500008ad440008adee0008aea80008afa60008b0e00008b19e0008
b2540008b37a0008b4160008b4fa0008b6060008b7040008b78a0008b82a
0008b8ca0008b9c80008ba120008badc0008bbbc0008bcc80008bdc60008
bfb00008c0b40008c2180008c3b20008c5580008c66c0008c6e20008c742
0008c7a20008c8020008c8620008c8c20008c9220008c9820008c9e20008
ca400008ca9e0008cafc0008cb5a0008cbb80008cc160008cc740008ccd2
0008cd320008cd920008cdf20008ce520008ceb20008cf120008cf720008
cfd20008d05e0008d0ea0008d17a0008d20a0008d29a0008d32a0008d3bc
0008d44e0008d6620008d8140008d8fc0008da7e0008dba40008dbb40008
dd5e0008dede0008df980008e07c0008e1800008e27a0008e3ac0008e496
0008e62c0008e7ae0008e87c0008e8b60008e8f00008e9000008e9e80008
ead60008ec820008ee000008efb80008f1700008f1800008f2580008f33c
0008f4140008f4560008f49a0008f4dc0008f5200008f5920008f5fe0008
f6940008f6da0008f7520008f9ea0008fab20008fac20008fba80008fc66
0008fd680008fe8c0008ffd2000901be000902c2000902d2000903f60009
0572000906da0009075c000907e60009096800090a2800090ad800090bb4
00090c0200090cb200090d0200090d3200090d7600090db800090de60009
0f0a0009102200091144000911b00009121c000912cc000913a20009141a
000914d2000915c00009161600091708000917f400091866000918760009
188600091896000918a6000919d6000919e800091ad200091ba400091d72
00091ed600091f4000091f8a00091fca0009200a0009205a000920aa0009
21220009219a000922120009226a000100000d5600f2003c009d00070002
0010002f00560000062504eb0005000200>
<0000003a02be0000000300000000006a00000000000300000001001e006a
0000000300000002000e0088000000030000000300720096000000030000
0004001e006a0000000300000005001800d8000000030000000600220108
000000030000000700ce012a00000003000000080030000e000000030000
0009008601f8000000030000000d029a027e000100000000000000350518
0001000000000001000f054d00010000000000020007055c000100000000
0003003905630001000000000004000f054d0001000000000005000c0584
00010000000000060011059c0001000000000007006705ad000100000000
00080018051f000100000000000900430614000100000000000d014d0657
0003000104030002000c07a40003000104050002001007b0000300010406
0002000c07c00003000104070002001007cc0003000104080002001007dc
0003000104090000006a00000003000104090001001e006a000300010409
0002000e00880003000104090003007200960003000104090004001e006a
0003000104090005001800d8000300010409000600220108000300010409
000700ce012a00030001040900080030000e0003000104090009008601f8
000300010409000d029a027e00030001040a0002000c07a400030001040b
0002001007ec00030001040c0002000c07a400030001040e0002000c07fc
0003000104100002000e0808000300010413000200120816000300010414
0002000c07a40003000104150002001008280003000104160002000c07a4
0003000104190002000e083800030001041b00020010084600030001041d
0002000c07a400030001041f0002000c07a40003000104240002000e0856
00030001042a0002000e086400030001042d0002000e087200030001080a
0002000c07a40003000108160002000c07a4000300010c0a0002000c07a4
000300010c0c0002000c07a400a900200032003000300038002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0054
0069006d006500730020004e0065007700200052006f006d0061006e0052
006500670075006c00610072004d006f006e006f0074007900700065003a
00540069006d006500730020004e0065007700200052006f006d0061006e
00200052006500670075006c00610072003a00560065007200730069006f
006e00200035002e0030003500200028004d006900630072006f0073006f
00660074002900540069006d00650073004e006500770052006f006d0061
006e00500053004d005400540069006d006500730020004e006500770020
0052006f006d0061006e0020006900730020006100200074007200610064
0065006d00610072006b0020006f006600200054006800650020004d006f
006e006f007400790070006500200043006f00720070006f007200610074
0069006f006e00200069006e002000740068006500200055006e00690074
00650064002000530074006100740065007300200061006e0064002f006f
00720020006f007400680065007200200063006f0075006e007400720069
00650073002e004d006f006e006f00740079007000650020005400790070
0065002000440072006100770069006e00670020004f0066006600690063
00650020002d0020005300740061006e006c006500790020004d006f0072
00690073006f006e002c00200056006900630074006f00720020004c0061
007200640065006e0074002000310039003300320059006f00750020006d
0061007900200075007300650020007400680069007300200066006f006e
00740020006100730020007000650072006d006900740074006500640020
006200790020007400680065002000450055004c004100200066006f0072
0020007400680065002000700072006f006400750063007400200069006e
0020007700680069006300680020007400680069007300200066006f006e
007400200069007300200069006e0063006c007500640065006400200074
006f00200064006900730070006c0061007900200061006e006400200070
00720069006e007400200063006f006e00740065006e0074002e00200020
0059006f00750020006d006100790020006f006e006c0079002000280069
002900200065006d0062006500640020007400680069007300200066006f
006e007400200069006e00200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
00740068006500200065006d00620065006400640069006e006700200072
00650073007400720069006300740069006f006e007300200069006e0063
006c007500640065006400200069006e0020007400680069007300200066
006f006e0074003b00200061006e00640020002800690069002900200074
0065006d0070006f0072006100720069006c007900200064006f0077006e
006c006f006100640020007400680069007300200066006f006e00740020
0074006f002000610020007000720069006e0074006500720020006f0072
0020006f00740068006500720020006f0075007400700075007400200064
0065007600690063006500200074006f002000680065006c007000200070
00720069006e007400200063006f006e00740065006e0074002ea9203230
303820546865204d6f6e6f7479706520436f72706f726174696f6e2e2041
6c6c205269676874732052657365727665642e54696d6573204e65772052
6f6d616e526567756c61724d6f6e6f747970653a54696d6573204e657720
526f6d616e20526567756c61723a56657273696f6e20352e303520284d69
63726f736f66742954696d65734e6577526f6d616e50534d5454696d6573
204e657720526f6d616e20697320612074726164656d61726b206f662054
6865204d6f6e6f7479706520436f72706f726174696f6e20696e20746865
20556e697465642053746174657320616e642f6f72206f7468657220636f
756e74726965732e4d6f6e6f7479706520547970652044726177696e6720
4f6666696365202d205374616e6c6579204d6f7269736f6e2c2056696374
6f72204c617264656e742031393332596f75206d61792075736520746869
7320666f6e74206173207065726d6974746564206279207468652045554c
4120666f72207468652070726f6475637420696e20776869636820746869
7320666f6e7420697320696e636c7564656420746f20646973706c617920
616e64207072696e7420636f6e74656e742e2020596f75206d6179206f6e
6c792028692920656d626564207468697320666f6e7420696e20636f6e74
656e74206173207065726d69747465642062792074686520656d62656464
696e67207265737472696374696f6e7320696e636c7564656420696e2074
68697320666f6e743b20616e6420286969292074656d706f726172696c79
20646f776e6c6f6164207468697320666f6e7420746f2061207072696e74
6572206f72206f74686572206f75747075742064657669636520746f2068
656c70207072696e7420636f6e74656e742e004e006f0072006d0061006c
006f00620079010d0065006a006e00e9006e006f0072006d0061006c0053
00740061006e0064006100720064039a03b103bd03bf03bd03b903ba03ac
004e006f0072006d00610061006c0069004e006f0072006d00e1006c004e
006f0072006d0061006c0065005300740061006e00640061006100720064
004e006f0072006d0061006c006e0079041e0431044b0447043d044b0439
004e006f0072006d00e1006c006e0065004e0061007600610064006e006f
0074006801b001a10300006e00670041007200720075006e007400610000
b9005403ecb3032a1f3f411503e4006003e9009f03e500df03e500040010
03e4001003e5003f03e5007003e400ff03e40005ffc003e1b345453240b8
03e1b32b2e3240b803e1b2282932b9ffc003e1b21a1c32bd03e102ac0027
001fffc003dfb2161b32b9ffc003deb2424232b9ffc003deb2363832b9ff
c003deb32a2d32df410a03de00ef03de000203de03df0028001fffc003df
b3282e32f0410d03df0001037e000f0101001f00a003dd00b003dd000200
4003dab32426329fbf03cc000103ca03c90064001fffc003c9b20d113241
0a03c703b70012001f03b603b50064001fffc003b5b30e1132004173038d
000100c0038d00d0038d00e0038d00f0038d0004006f03a7007f03a7008f
03a700af03a70004000f03a7001f03a7002f03a7004f03a7000403ab03ab
00ef03a50001000f03a5002f03a5006f03a5008f03a50004005403aa0001
006b03aa000103a8036a0022001f038c03940015001f038b03930015001f
03a40393001a001f03a20394001e001f03a10393001e001f039f0394001e
001f039b0394001a001f039a0393001e001f039903940016001f03980394
0016001f03970393001b001f03960394001b001f03950393001b001f0376
0375001a001f03740375001a001f03a00373b21e1f10411e039300200393
00300393000300200394003003940040039400030000039400010383036c
001e001f03b1036c0032001f036d036c0032001fffc0037db2212332b9ff
c0037db3171932a0410a037d00b0037d00c0037d00d0037d0004ffc0037c
b2212332b9ffc0037cb3171932a0412d037c00b0037c00c0037c00d0037c
000400300373004003730002000003730010037300200373000300e00373
00f00373000200b0037300c0037300d003730003008403730090037300a0
037300030377036a0029001f0389036ab2281f40b80367b33940323fbb03
66000100400366b3191d328fbb0366000100400366b3090a3240b80366b3
090e3240b80366b3090f323fbb0365000100400365b3090c3240b80365b3
1a1d3240b80365b3090e326b410e0363007b036300020014036300240363
003403630044036300040363b2242f1fba034e006d0800400e1f7f027f03
7f047f050430440112bf033200500800001f0012032d003c080040291f5f
3c01376009700980090310092009300940095009056f037f038f03031f03
2f033f034f035f0305b8ffc0b2073a33b8ffc04047063a33900ba00bb00b
c00bd00b05b006c006d006e006f006052006300640065006600670068006
9006a006099006900702600b700b800b03100b200b300b400b500b051f07
01a041850362000100000362001003620070036200900362000400f0035f
00010020035e0020035f0030035f0040035e00040000035e0000035f0010
035f00d0035e00e0035f00050010030f0020030f0030030f00d0030f00e0
030f00050000030f0010030f0050030f0060030f0070030f00d0030f0006
0000030f0010030f0020030f0030030f00e0030f00f0030f0006030f0027
0000030e0030030e000200e0030e00f0030e0002030e004a00e0030d00f0
030d0002030d002700d002fc0001001002fc002002fc005002fc000300d0
02fc00e002fc0002000002fc001002fc002002fc003002fc005002fc0060
02fc000600e002fc00f002fc0002002002fc003002fc004002fc000302fc
406127c02901b02901a02901902901403c3f413240223f41321212125f23
5f255f285fa5046f236f256f286fa5044f234f254f284fa5043f233f253f
283fa5042f232f252f282fa5041f231f251f281fa5048f4caf4cbf4ccf4c
045f4c6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8ffc0b5b2
191a32370f413b02af0001005f02af009f02af00df02af0003001f02af00
2f02af003f02af006f02af000402af02af001f02ad002f02ad003f02ad00
4f02ad005f02ad000500df02ad0001000f02ad001f02ad003f02ad005f02
ad009f02ad0005005f02ad00df02ad0002000f02ad001f02ad003f02ad00
03004002acb23a334f414a02ac005f02ac009f02ac0003002f02ac003f02
ac0002000f02ac003f02ac00af02ac000300b002ac00e002ac0002004f02
ac005f02ac00a002ac0003001f02ac002f02ac003f02ac0003000f035a00
01000f035a001f035a003f035a005f035a0070035a000500cf035700df03
570002000f0357001f03570070035700af03570004035a035a0357035702
ad02ad02ac02ac032c400d31151f001616000000121108104110020c004a
000d01a8004a000d0198004a000d0189004a000d013f004a000d0124400e
4a0df64a0dbe4a0d864a0d274a0dbe02280041000d01940041000d012140
0b410db4410d4f410d29410d411002170021000d02150021000d02060021
000d01eb0021000d014e0021000d012c4014210df9210df3210df1210d9d
210d71210d3d210d4110021c001f000d0214001f000d020b001f000d0196
001f000d014a001f000d0126400b1f0dc61f0d571f0d371f0d410d019e01
41000d00420141000d001e0141000d001b0141000d01f2b40f440f0009bb
01f20044000d0201b23c291fb80200b23c291fb801ffb23c411fb801feb2
3c471fb801fdb23c9e1fb801fab23c931fbc01f9010f0101001f01f6b224
e41f411501f401490401001f01f301490401001f01f1014900ab001f01f0
01490067001f01a6003c0125001f01a4b23c811f411501a3010f019a001f
01a200220801001f01a100500401001f019f0149019a001f019d01490067
001f019cb22c621fb8019bb22c791fbc019a002c0101001f0197b22ce41f
b80193b22c891fb80192b22c6c1fb8018fb2259e1fb8016ab23c2a1f4111
016700240201001f0163002502ab001f014c010f019a001f01480149006c
001f0147b22c891fb80145b22c9e1fb80144b22c791fb80143b223311fb8
0127b23c811fbc012300500101001f011fb223e41f4115011d0023019a00
1f011c00230801001f011b00250801001f010e010f0401001f010d002204
01001f0108b223811fb80106b425e41ff73cbb0125001f00f5010fb29e1f
e3bc01490156001f00e20149b2ab1fd1b901490401b21fcf2cb80125b61f
ce23bb1fc524b80156b21fc02cb80801b21fbf2cb80201b51fb124e41fb0
b901490201b61faf2c671fad23b80801b21fa523b80201400b1f9f3c2d1f
9b235a1f9925b80201b21f812cbc0401001f006d010f0156400b1f592c3e
1f4c3cab1f4625b80101b21f403cb80125400a1f3a23721f393cab1f38b8
0149b3ab1f3124b80401b21f3025b802abb61f2a24e41f2623b80156b21f
5537ba023500070175402c0774076207560751073b0733072d0720071d07
1c071408120810080e080c080a080808060804080208000814b8ffe0402b
000001001406100000010006040000010004100000010010020000010002
00000001000002010802004a00b013034b024b534201b0124b004b5442b0
372b4bb807ff52b0382b4bb008505b58b101018e59b0382bb00288b80100
5458b801ffb101018e851bb0124358b90001012f858d1bb90001017c858d
5959014bb0c063004b6220b0f65323b8010a515ab0052342180016763f18
3f123e113946443e113946443e113946443e113946443e11394660443e11
394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b18
1db0964b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58b9027102
6f4544b90270026f45445958b9017a0271455258b90271017a4459594bb0
4753205c58b9002202704544b9003c027045445958b901b30022455258b9
002201b34459594bb04c53205c58b9014900224544b1222245445958b901
c20149455258b9014901c24459594bb06753205c58b9002402714544b900
50027145445958b9021e0024455258b90024021e4459594bb8020153205c
58b9010f00224544b1222245445958b90c00010f455258b9010f0c004459
594bb01c53205c58b125254544b12c2545445958b13725455258b1253744
59594bb0ab53205c58b125254544b1232545445958b901590025455258b9
002501594459594bb8010153205c58b125254544b1282545445958b90208
0025455258b9002502084459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361dc6463456523456023456560
234560b08b766818b080622020b164dc4565234520b003266062636820b0
03266165b0dc236544b064234420b161634565234520b003266062636820
b003266165b063236544b0612344b10063455458b163406544b261406145
23614459b3a67f434b456523456023456560234560b089766818b0806220
20b1437f4565234520b003266062636820b003266165b07f236544b04323
4420b1a64b4565234520b003266062636820b003266165b04b236544b0a6
2344b1004b455458b14b406544b2a640a645236144594b5242014b5058b1
08004259435c58b108004259b3020b0a124358601b2159421610703eb012
4358b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b9
2d412d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b
211bba01a80400000b2b59b0102342b0112342002b001845694445694445
6944456944737373747373737475752b7373747475184569447373742b4b
b021534bb046515a58b03cb03c45b040604459012b2b2b2b757575757575
757543584010bf3ccf3c026f3c7f3c8f3c9f3caf3c0575755943584012bf
22cf22025f226f227f228f229f22af2206757559435c58b6403c9f22ef22
0375592b2b01747474744544737374747575454473454473744544737475
737373737300757575737575752b2b757575752b752b435841220063032d
00010003032d0013032d0023032d0033032d0053032d000500c3032d00d3
032d00e3032d00f3032d00040083032d0093032d00a3032d00b3032d0004
032d032d4518694474747575592b4358b900180332b330353238b80332b3
61663238b80332b3535a3238b80332b3454e3238b80332b33c413218b803
32b23f330a410f0332000100ba033200ca033200da033200ea033200fa03
320005033203324518694474752b2b2b2b2b2b597300732b012b7575002b
2b2b74002b2b2b732b74012b002b2b017373737474732b2b00732b2b002b
2b2b017374732b012b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b0001737500
7373004569440073730173742b2b2b2b2b732b00732b752b2b732b2b2b2b
2b2b2b2b2b73742b2b00000000>
[15785 11565 15133 15893 15981 14937 16337 15645 16353 14921 16353 16373 16237
16209 16373 15753 16373 16249 16273 16177 15933 15953 16221 16017 15885 15209
16261 15725 15813 16357 16209 16073 16169 16181 15929 16321 16273 11223 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> TimesNewRomanPSMT AddT42Char 
3 4068 55 <0001003e000004b0054c001f00f1403a5a015a025a1d5a1e6b016b026b1d
6b1e082f213f214f219805971ba805a61b0702011d1e161f1b102122091f
1b0f2123071823001f02100f0821b802c0401309012b0040170e3f120f00
1f005000af000400b80228401a08090613130255090c0f0f0255090c0d0d
0255092217161f2b1eb8ffc0400e170e3f12001e101e5f1ea01e041eba02
280016ffec400b10100255161a0d0d025516b802c0b320645d182b10f62b
2bf45d4358b9001effc0b20b351eb8ffc0b20b0f342b2b592be4103cfd2b
2b2b3cf45d4358400900400b3500400b0f342b2b592be410e6003f3c3f3c
fd3c2b2b0110c910c93130015d005d011323262726262323111417163333
152135333237363511232207060607231304a10f260b131f6754bf1b264f
2ffdc130562416a35f28344a072610054cfec254243a37fbf47d1f2a2525
342072040c0e136c5c013e00>TimesNewRomanPSMT AddT42Char 
4 1714 73 <0001004f0000037a058c002b0208b1020243545840252d40101002552d40
0f0f02552d400d0d02551b2b01100e0601080e2901080d0d025501120eb8
ffea4012121202550e120d0d02550e0c0f0f02550e06ba03e2000903e240
0a0824251e1700000f290fb8011bb2120608002f3fedc010c03fcded10ed
ed012f2b2b2bc0dd2bc010c410c610c610c6c431302b2b2b1bb106024354
58b9000f011bb2120600b8011b401d2906241e17000829010c0d0d065501
060f0f065501021010065501120eb8ffd8400b0d0d06550e060f0f06550e
b8ffdab7101006550e0e2d2c1112392f2b2b2bc0dd2b2b2bc0002f3fcdcd
3fed3fed31301b403e8b2099159926034403440c48198503850c059a0401
2f2d7f21900690079f089f099e109e11b02d0910061007025f2a5f2b021c
080eb41e08922201b41e07b80308401f231e9f1ebf1e021e11242517012b
50100110302a2912110608070a101b011bb80152b38f2d012db802f6b201
2a2bb80110400d282901120f1110920f0f01240eb8ffc0b36060340eb8ff
c0b33a3a340eb8ffc0b33f3f340eb8ffc0b32431340eb8ffc040161c2134
900e01000e100e5f0e700ec00ed00e060e192cba0306030700182b4e10f4
5d722b2b2b2b2b4ded3c10f43c103c103c3cf43c10e65de472003f3c3f3c
3c3cfd723c3ffd11395d2f2b2b3130437940122527141626251526251628
1c002714241c012b012b2b2b81810172715d0072715d5959011114171633
331521353332363635112335333534363633321716151406232226262726
232206061515331501a61c253e53fddd29284219b2b258b57169583a341e
17334a1f1f262e401cec034cfda680222c2424284462025a483c89be7544
2d381e35216d13133167d6424800>TimesNewRomanPSMT AddT42Char 
4 3534 75 <0001000d000003f3058e0036028fb10202435458401d384012120255100a
110a080d0d02550a182412120255181a0d0d025518b8fff8b40f0f025518
b8ffe0400c10100255180e131302551826b8ffea401f1010025526213435
272d0121040c0c025521080d0d0255212d18121202552db8fffab40c0c02
552db8fff6b40d0d02552db8fff4b40f0f02552db8ffec400f101002552d
0e131302552d0120040f410a03e2001203e2002503e2002803e200270034
03e2400f3540090d025535360027111d2c0407003fed2f2f3fdd2bed10ed
edecec123939012f2b2b2b2b2b2bdd2b2bc010c4c63210c42b2f2b2b2b2b
2bcd2bc410c431302b1bb106024354584058341210100655351210100655
01200427343536001d2c040711270a02101006550a060f0f06550a0c0d0d
06550a18021010065518060f0f0655180c0d0d0655181838370121021010
065521060f0f0655210c0d0d0655212db8fff0b4101006552db8fff2b40f
0f06552db8fffcb70d0d06552d2d38371112392f2b2b2bdd2b2b2bc01112
392f2b2b2bcd2b2b2b002f2f3fed3fddcd111239393130012b2b1b402f38
402a350a38600d5d360f250f268038903804b038c038d038032b06015038
60387038903804403801200818291e11b8030f4011222d291e274a220a29
1e104a2321291e26b8030e402e2335272e41341e35440120273600001d2c
04072726261111100a19182409900a01b00a010f0a700a9f0acf0a040ab8
02bd40252d0021242e1f2d502d602d702d04802d902d02b02d01002d102d
c02dd02d042d6037a67f182b10f65d5d71723cfd3c10fd5d71723cfd3c00
3f3c103c103c3fed3f3c113939f5edfc01f52b2b2b2b3130437940141a1c
050806251b261c05191c0107081a071d1c012b01103c2b2b2b8181017172
005d015d712b2b5959011136363332161716151114171616331521353332
363736351134262623220607111416163315213532373636351134262623
22072725014d6f82414e701b130e0a3040fe3e1540320a031f4430316a4a
153946fe3a3d2314180f1f1a152f0e0112058efd627a45565c40aafebc57
20181c24242726104e0144965e2f344ffe1c5e2e1f2424130a3856033d9d
481a10237000>TimesNewRomanPSMT AddT42Char 
4 4350 76 <0002003c00000207058e000b00220249b10202435458b90024ffc0401d0d
0d0255120d080d0d02550d21181010025521180f0f02552113180309b8ff
eeb41313025509b8ffe0b40d0d025509b8ffd6b40f0f025509b8ffceb610
100255090d18b8fff4b41313025518b8ffe2b40d0d025518b8ffe0b40f0f
025518b8ffd6b5101002551820b803e240174f216f217f210321226f0001
0060060106400f0f025506b8ffc0b71313025506220613002f3fd62b2b5d
cd5d10dd5ded012f2b2b2b2bcd2f2b2b2b2bcd10c4c62b2b102bc4313001
2b1bb10602435458400d20121010065521121010065506b8ffc0b44b4b06
5506b8ffc0b44141065506b8ffc04019373706554006010006a006026006
0106000020212207130309b8fff6401c10100655090924230d0210100655
0d020f0f06550d0c0d0d06550d18b8fff0b41010065518b8fff6b40f0f06
5518b8fff0b70d0d0655181824231112392f2b2b2bcd2b2b2b1112392f2b
cd002f3fddcd3fcd5d71722b2b2b3130012b2b1b40199024016024702490
24a024f024052024502402402450240224b8ffc0b332323424b8ffc0b338
3a3424b8ffc0b32d303424b8ffc0b323253424b8ffc0402e191a3418291e
134a220d291e124a2321271941201e21440c190c1390060106390000220c
0713120a900901093903b8ffc0b2433503b8ffc0400f3f35036b0c0c0d19
0d2418402b3918b8ffc0401a363a34901801501801601870189018a018f0
180518b223b2a3182b10f65d71722b2bed3c103c10f42b2bed72003f3c3f
3c3fed7211123910f5edfc01f52b2b3130012b2b2b2b2b015d715d017259
590132161514062322263534361311141616331521353236363511342726
26232207272501292a3b3b2a2a3c3b7e193141fe43432e1b09071e1a1c28
0e0114058e3b2a2a3c3c2a2a3bfe21fd2056391c24241a3c550161952c20
190f2470>TimesNewRomanPSMT AddT42Char 
4 11824 86 <00010064ffe402d503af00310434b1020243545840273340131302553340
0b0b02550201181010025501180f0f0255010f1b1a08270c0b0b02552721
0fb8ffe0b4101002550fb8fff440320f0f02550f310708270f2104122b05
017905016c050105252f0101012a0719771e01631e011e25201a01601a70
1a021a120b003fc45d5ded5d5d2f3fc45ded5d5d5d1217393f012f2b2bcd
2f2bcdd4cd10d42b2bcd31302b2b1bb106024354584032210f2708042a16
1e122e05022a3107601a701a021a19124b05016b057b050205252a07441e
01641e741e021e25120b01210fb8fff2401a0d0d06550f0f33321a080e0d
0d06550827120d0d0655272733321112392f2bcd2bc41112392f2bcdc400
3fed5d5d3fed5d5d10c4c45d3f10c4123911123912173931301b4029092c
192c0212122e400b392c280b391814590c5a269b109424050a070a280a29
603370338033060f33b8012040870d5d36cb0dcb0ec424c425d723d624d9
2ce604e623e624e92c0b123f2c5d2c6e2d7d2c8f018f028f038015801a80
1b801c892d8f2e0d0f010f020a03090c061c0a2cc822c923081c03161412
1c161d19291b2c9909990a9b20932393240b122b0d282c4a2c4f335f3378
29782c860ea823af33e803e61c0c2908311e00bd021e011f012f010201b8
012bb200bd2eb8011a40112a181e19bd1b1e1a1f1a01101a201a021ab801
2bb219bd16b8011a4022121224230d0b040f2724230d0b04051e01c7002e
2f2a31000005252a071a7e191918b803464014162f1e25120b02cc120101
12cf21df21ef210321b80314400b700f01600f700f900f030fb801364019
271a192e1f0801082c9f270160277027802703202730270227ba01200032
0120b14b182b4e10f45d71724ded72f43c10fd5d71fd5d4358b2ff21015d
59392f435c58b2ff01015d59ed003fede4f43c10ed3fed3c103c10e410ed
1112173901111217394358400a242323240d0b140d0d0b870e2e2b0e7d10
c459180010ecf4ed5d720110edf4ed0010ecf4ed5d0110edf4edb1060243
5458b42e20090d34002b5931304379401c28291f20101106071f11211c01
0629081c0020101e1c000728051c01002b2b012b2b81818181015d435840
09fb07f610f611fb28045d5901720071005d435840199f019f029f039f0b
9a0d9015901a901b901c992297239f2d0c5d595d2b017100722b2b435840
0b2f232f248b2c9b249b2c055d59435c584011282019390928193901400a
3902400a391bb8ffc0b20a391ab8ffc040190a392e400a392c400a392c40
09390c101e123f0e201e123f0eb8fff0b21b390eb8fff0b2193924b8ffe8
b2133923b8ffe8b213390cb8ffe8b613392c1813391bb8ffc0b212391ab8
ffc0400f123901401239024012392c20123924b8fff0400f0f392c180f39
03100d392e400d3923b8fff040120d390c100d392c200d392c1811392c18
1139002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b012b2b59005d59590111232626232206151417161717161514062322
272623220723113316163332363534262427263534363332171633323637
02902126775c4656201f5f92cbbd75546c2115170d21211c9e62455761fe
de2d2d9b7b364d331110120c03affec8936a4a2d3828292e4763a27d991e
0a1a01478c8e5139455e903a39577198170f0e18>TimesNewRomanPSMT AddT42Char 
2 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/space 3 def
/T 55 def
/f 73 def
/h 75 def
/i 76 def
/s 86 def
end
TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 84 /T put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 115 /s put
pop
end
%ADOEndSubsetFont
reset_gvm
/VCULPL+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/VCULPL+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 17{/.notdef}rp /f /.notdef /h 
/i 9{/.notdef}rp /s 140{/.notdef}rp]
VCULPL+TimesNewRomanPSMT nf
VCULPL+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
333.18 65.4189 mo
(This fish )
[14.6494 11.9856 6.65759 9.32181 5.87997 7.97742 6.65759 9.32178 11.9856 0 ]xsh
gsave
27.48 73.0392 mo
567.48 73.0392 li
567.48 170.539 li
27.48 170.539 li
cp
eclp
27.48 170.559 mo
567.48 170.559 li
567.48 72.9992 li
27.48 72.9992 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
gsave
28.08 106.039 mo
469.86 106.039 li
469.86 73.0392 li
28.08 73.0392 li
cp
clp
28.08 106.039 mo
470.16 106.039 li
470.16 72.9192 li
28.08 72.9192 li
cp
gsave
/8 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 33.12 9.39635 459.452 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 46 
/M[614 0 0 -46 0 46 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&JcPcM"9AQ+"9jY_Z2b"3"pY59ec::%JcM#8":5D<$OlY-JcNgk":YeM%hQPWJcLB&W;m&-&J>`k
hZ/6.g].Hl'c%T&X8mhPJcNLb":5qJ)B6g!JcP<@"<8Bs*?LOIJcLB&df9LW)$:cr[/bs^"<8Bs*?Ke4
JcLB&kPt],+9NdZ!1X#l+sJ6@,jYL2!.k3&!.k4M!!=Mo""/p*Z2b"G)CPY+ec::%JcM#8""=a1+nG\c
!65'B.k</&0#7O>!.k3M!!=l.0f%ScJcOR+">_h`1c;?7JcLB&^&S6n-lFtc!.k4@!!G8@"$&E/!.k3&
!7UuO4$3TY'XRjq!!GGJ"$RcX!.k3&!9jId5<o<:6D"7J!!FDe"%+$o!!!"N!.k3&!!WE'6oY8M7>V#N
!!PDQ7KZ.<ec::%JcM&9"@u)d8eCRoJcNjl"X-N3"&&a3!.k3&!3-#%9hlp/&DdD=!8RVY'b1]U:f4:o
JcLB&^AnC7%T>8baT-nmo)Jdl<W3(#<gE`;!.k4#!!Ea4=BSV1!/U[[79Tcq&mG?f!.k3&!9jId>R)KZ
#bM+!!!,/foDf%$=p"k6@-[dm!.k3&!.k1T!)Z5g"(<g=!5ed;@Uo$1"_;0H"(l2r!.k3&!1!TgBP@Pn
C2<D@JcNjl"`,Y<")Vql!.k3&!36)&DZU#[-f"cS!8RVYEH6)%F"XNoJcLB&^]4LZFTXc^a8gelnc/k8
"pT5YG@R!?JcLB&eGo_o1BTEIZN,a\"F,/!"@N68K)gK'JcP'9":5_DF]P(6S,`\<H@#mEli7"cJcLB&
JcGrS-Un1>I>@m/!!I[s7KXa`!.k3&!7LoK,_!`5"Fkq(!X\DtJcNgk"G),U","DiJcLB&WrN9!J-.A0
h#N$,g].M2KJ<QsKrk?,!.k3d!!Gi5"()AU!.k4@!!R+PL'*3?QiM^<JcO=$"Gh(#?\u)hLB%I1KSfjP
!#pOjJcLB&l2UsF8HV57ScG8\"Yqi[",nl"!!!"N!.k3&!!N@I3!5.!L]F^\"XbZh"-/Go!.k3&!1!Tf
GW5eb2t?s#!65'C-RVIfNfV$WJcLB&WrN8]N<<13h#N$,g].M>OA5n5Of\V8!.k3d!!JIK""9DT!.k4B
!!X:*>[/$u+-utZ!.k4$!!GM1!s=jq!/U[[B*jok".0dS!.k3&!9sOe5;WI;KUr18!!X:.Jq=(K5O8@M
!.k3&!.k1S!.=nNQOJZMZiC:2Ip-"XRN'fXJcLB&Q2h&W4Th30nc47Aa8cAkSXfil#f-Lm!/pmYOad*+
WrN8+$3QkAh#N$,h#IU%SXfkTTWA-F!20An?A7G?^]4M2U'!cXa8gelnc/ihV549"<0mT:!.k4$!!E_-
"/fh=!/LUTW;Zl"KKFbcJcLB&l2UsdSca$ZScG>^!>oPM!s"/C!!!"N!.k3&!!N@lHNOJPL]Fd^"Vdg9
"043-!.k3&!1!TfRmmKoXRZ@C!6G3E7BHXoT<,g.JcLB&WrN9r7KYr>h#N$,h>d^JQNI=U6E:*<!.k3d
!!BBE"#e1"JcPBB"^A/4"$q%o!.Y~>

%%EndBinary
grestore
np
grestore
gsave
28.08 139.159 mo
469.86 139.159 li
469.86 106.039 li
28.08 106.039 li
cp
clp
28.08 139.159 mo
470.16 139.159 li
470.16 106.039 li
28.08 106.039 li
cp
gsave
/9 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 33.12 9.39635 426.332 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 46 
/M[614 0 0 -46 0 46 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&JcGoS!WrQ/LB+[]"U527":,=a!.k3&!1*Zg$4?tF%IjFM!6>-C%KlnF&AS9t!.k3P!!ElH";;L)
!.k4,!!F#>";VfS!.k3&!5\^>(`=52*$*'"JcPcM!s'Gb+Sc!;$iU8/+dN+[!.k4&!!FJj"=,:u!0dHd
-7:2j.f02M*@h6q/1gjR!.k3&!:0[g/h[>]0q86C!"^nA">hto2^Skk!$VXN"?AO/!!!"N!.k3'!!#(_
1^#o^L&esg!B!%>":H/"4psS:5X>MU6:99'JcLB&^]4L*77Kd<hZ*f\8P0+Y9^i%6!7UuN4"*fuqud65
:Jadh"Aqk.!.k3&!8@J];E.TS#$"]*=BSR#huEpa"U"r@>MB.E!!H2)9Gh(+!!!i;.Ng_:!!<F3#6Xc)
!^/\RWW7VNJcP?A%U_7?@:C,X"<1'FA7]?ii;a$oBESHPC;p7W!%@qa*c+;_.;hL?$6F,)!)-<6*cVNT
Cc6<T?<_M`F`g\*$49.D87tq-rW)fq%!Qq!"F5<<HOL%)I!q7[JcN:\!?H10!!?UM7R$eSqZI"MIpmlf
!!YE6Ifon+K<YF*!"r[;3#riO;]pT3.Nfdc$<r3pLA_5bL5(HkL_2[5M2I2pN/`kq"=9+ROH>SPP*0LB
Pa%F7(RCC!&8i0g.UAF0"IY];S"'tZSXof]JcLB&bl@cB?.8idSdbf*T04*c8th<#T*,:OMc9?MmJmG^
49Pe]A##Oon,NGrr_a&.3&k0=V5B63'E4m5%&g.$WiOYQ!N^\JXUC+G2Bf4+"L!]eEId3P!!%TNJcOg2
!E*4Q!"ke3"9b>[)PB]rO+s80"GVh5j8]6P49P`hU19sV!!$F+;?0u.3&k0=V5B63'E4m5%&g.$WiOYQ
!N^\JXUC+G2Bf4+"L!]eEIcF:JcLB&aoE)Q8$N2kZ94MNV)pcFZq@_/VeS3Q!!]kF"9^jmB(,ek!!'M-
-Nl14\@Aj8"9Q,gT`]S58r!<I+;u.jTn\<5XAFM\9i/JVX[0XP]0WPUZ:[`p^;$b0WZ1a:!dT:2rWE;&
5f(&4JcLB&huF*l=U5/<&mh.P(fL>5#ZE$FT*2fKE,at?#AXCP"9\gc6hgW^>]8d*!WZJ@q#CF:V#C?.
3$K\R_FI14_o+buFN&Aj3]_Jh9`4qr>\AJ5>;9/#r;Zqq&0FUE!"W!X!#VL][ut="`_W>$R?$nB,bI4.
\k8%(YA$T2)QL;^7j0$)`/A2<aN:b+b0)OdCip$qF:&n(/ho)hIEY`E=Ght;S'=04cCA?-:opakIej0K
Go7X"!.k3&!;-=!Sr*XRXj9kD4L671!!bL1^'$73F`lgH"s4hg"9c;5q>_%tJSNRZ-<@R`0ep.ZFBM<:
!$AEHaCQ=parriQKoq<\%O3K_N(YQc#e6#?dZ)_'6,"tc/?Fo+RA_sS:P(D[9gPllI'c\]a,[68XK8_J
/C]!rTV8BcO,loEL5$TTWuM&4!2&ugrgsJ([=1jd%qR\Mqu?h8D/CWN!!.U&#+[tn;*ob)qud&M&Wd!E
!0.$b?i^9\0*DE=Xo8G)Ws^oc!!a>eTELrc;$#eZ#G,9Z4TmGc3;`ajCj:]ILNqD$51eE8e(BYWD8aSY
O8T1a4f8fe)Y=.6)hrh)"S`-"U?;XdH`:Mp6J76R2n(9T!"-QH'\_;.4HP[`#5S=O!.k3H!"`O+cQsqi
"J5f"T<!5>%tS]u!!XL%1Bc@_6i-lL!!j]9H3>0?B,E,t!!*[+oE55EL48Xq"ATk1:)`s3,,'eIglTOq
6J3b89AOZu[T6EUGJuM`'am$I"9dSEP;(Ikp&kB&%b[&Cb16[uRGZpi?Vr_cZiC5&E<ZUfirB&ZJcLB&
]Dr%A?no=m":D384W@+RS\np#EVoe@i6qh,Vc[p#!!iS@8Y?3l!a8b+!"OXT"9]LD^(TC8ACM5dRJm=6
8n?W0i_aQ-!a(<i*#W0C7@dak7i*Uq1'Pt`>?N$iF[SVAricI"<?V,<,<13n*X6g"8>Mgu<,i,<3`lig
.)\VGB:_e%>W;aa6YAGX@.aMO!.k3&!7:cJ$4:MF":76*Y2i,l9E?W<qZ$X$ir0&]eqE)a"sP8p\`%-M
rW!4.^]\r=(Ib05%W#s0>J`;[`/,pe+0Ze'r;ZpnYZa$^!!E=$*X5R*!!,u:q#C[u>Sp.M>QFk'qZ-S&
h>i--JcLB&jo?HtUBC_-\HJN\)?XO1RSabY!!$D);Sd;P40&Je1bI_f"^A&2eL)F;!!IC0">o0&!.k3&
!.k3&!;ca=I=27'@uUV*b+6dBHisRKj%KG4;bS93!-W%)IQcg\?0)%iUm2&cHdVfm";/ZWa3W37JcLB&
JcLo5$V*]MOBE5"Y(Qd_Jc5cS"L:9uq>^`X]Y"@MXs2s-"T_0t">f6?!!MMY":m6$!.k3&!.k3J!"qgn
T@OQf"F;,-J=$J3IKTedG5;1FT%_m,"L8(g!!)0^$X9;-U-\h[;o8`ed\m.t!!!"N!.k3`!"r4/]<:8'
"9bCP?eY_6W=/oD5PY9`+!3TJ\M.pc!;um*=bd,9OT5AKBEUp:OoU(6JcLB&bl@cVJ,TQX"0N7>]q+<h
:-r4\!!Tj""9a$jjo>c2g]Y42!!"@Z"Ku/0!.k3&!.k3&!9*tY&GZG5'-;62"FKA-!!Q;&:'?tdjo>d*
XTZ\1!)n[V";>D1!.k3&!.k3&!;?Hn&H)_3TDes%Hm/c[";V_f;hUqR;uH\%*s]1m4=Vg%;sODl>[[a<
'&[^?JcrWKDpeW;!.k3&!0$s^\"<eqL3rn&!DmkU!B3.E,ZdiVGR)N,9M>Ed-B85E;0"%j0j<rE$a>Qm
"OeDl'a2&[2nT-B!.k3&!29H&i4fE"Mg)`8"KsleG166i$,BtX#$iFmIKTfQ"9X_+-A:jg$XD^;"9[Pc
bHV2O!i>sL!!!"N!.k3\!"EPs"IX+WSZ;mJaAO(9rWEX):jYq?"L54j3WX+aqZI#/W,a$P!"AqE'Oq7K
["Ba2"HU^$O8sk4JcLB&blA.of)u6,g*Sob"R0\'rWEZnjB?[gW1X7rI]4E$\GcU8\Tt^g">k5l!"</k
0*DCrOMi[QW[Df^!.k3&!.k3*!<6I,!9=+^@)42Sr<*nD\c`-H-5$HU"Mj$t!$*D,XK2PReqs>.#)9*f
,cX[_o`,G!EAo,C"<5&+L'2d5*od6P!.k3&!.k4H!!-jQqum&1rWELf00QV7"Ff<'rW!OK.4N"7[2K0(
^]ZgOka'MWBCu65J?u0W"<4Ni"9\gcYg!0"!.k3&!07*[j89#^1D=<"rWEJ#':YBm"=0iB!"Bb^7A'bd
T7XBP"9Xckp&G88EH-*=YPnY/%*&JR)CRYU!.k3&!.k3H!!#@`"::c'>2L(u"JJo9rWE7_=8Mt%E<QIJ
:5pFr"9H4NpAb>86cmGtq#gblS6;NcJcGcNJcLB&\c<EI"J5cg"9Y0"*m%.["6U3u"JQ"Uq>^\C"9c<l
df'@N:680F!!40_(&S45"9TUVa]+,tJcLB&JcO0u(Eah'"HPeSU'/2C!".Zf"K^ScI^0)P9`"en`<6=T
N0=,B!QSFA!!?KFC,#Dc"0k2>EUs0^!.k3&!.k45!"Pg#"9a&Y+/f<7)#t[G1]7FZH/Sn3d/*eHC]jkC
#=A@l#n/%`!!#nr7lK#p"9Z'1MfmeT!rr=,9SNP!!.k3&!;ca+I=26jIfKgc"?kfG!!W],"9aa=Gmoi4
!!NZ;"JW[qqud81SH&X`?_S>4"9kN\0V$H3f`2%N3:Hp"!.k3&!0I6kI=26jIfKgc"?kfG!!W],"9aa=
Gmoi4!!NZ;"JW[qqud81SH&X`?_S>4"9kN\0V$H3f`2%N384Fb!.k3&!2]`+2`Ck3!W[b>"9c=:!)-bu
"9en\AH[?Jqu?m)frG7$#Q"W,1a2o(OSf4cT9#&t6AW(<!.k1N!.k3&!5&:BMM_NFOoW=h"9^Pe!!$XN
rWEFSWT+c)\8V9F"@TU"XJYjt%u)G3>1*P]RC&q'F)s'd!.k3&!.k3&!7:cWS!sN`9`P/\)[%]Z!!!3e
r<*;%(QAR!/c5SP<HnYE=&/Yr$+\V:!@F%?=$'FE!.k3&!.k3*!!@2E7qr0($Ob<clMqK5D$1!U;?1^#
"P#F2!#R/ZrWECZieXu\aSZ#A#,qa2?P!#:"\Q*$!&t2.!.k3&!.k3B!"MmpLpRR04gh#Y[C$sWlLY)S
!"i+rQimQ-"on[."KN"5!!'7%r<*;<=b6d')#XF<*gHl6QBD"H!DjiG!.k4%!.Y~>

%%EndBinary
grestore
np
grestore
gsave
28.08 170.539 mo
469.86 170.539 li
469.86 139.159 li
28.08 139.159 li
cp
clp
28.08 170.839 mo
470.16 170.839 li
470.16 139.159 li
28.08 139.159 li
cp
gsave
/10 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 31.68 9.39635 394.652 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 44 
/M[614 0 0 -44 0 44 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&h>dWY!WrT!"U##7#RLh0!"fPG$O$\B%0-A<%g<LV!!!WFr<3?='c%T&)>sO=&ebEe(*!)R!=Tt@
!.k3&!.k3&!:p0p*=rAX*ZlO!"Tonl,:)p^&g\kO"pHA&!!"Gt"Y2,(!%ff6rWNHY0JP==2#RCX2)YUs
3'$g=![0B]i;eH0JcLB&M?!lC+p:"k5!)"%"TpPG5pZ.($ka1>"U7<o!'s"/1I1p>!B!=F"V4'm84`tW
91o6b9K!%r858m`!DZG7!.k3&!.k3D!"B93*Z%Z\,QIjC()BgWq#pjV<!Wg/!;ca"$49c:(KUM8#TZtM
&2?6H*E`:E%m3tp-<aVY>Q=a]>m4O7?hjj,4BO\T!.k3&!.k3Y!!H[?"YUJd!!?Y=@KcB.!b2ffp&G1L
49K-m!!HjS+]K*V@5VZq"V2/U?tTXVBPA`,(^4[T->`J]!c;g$U]>uHJcLB&b5_\YDZp5^,lI]E.23Kh
"TegHEqTJ9?ulJiFT)7E20B'+>8)2X"TnjN#^H=P"r_c5"U05Q!BXQ^"Tf`mBo`7G!!!"N!.k41!!OZs
"9hs@qu?eI;cEPs!Bbl/"T]H^pAbL]=TpI//H>c"5lLof@oE1-!^)$`rWNQ0Jcu;\70!Z1p]U\NK_PP!
!.k3&!.k4F!!NCW"[%Mbqu?d*:J^Qc!X=E3p](U5<WsOrL]@E_C]4J<(Q%\d"p?lB!$lTCq#pg&EH^CC
JcLB&JcLc1";2j]>E&FZ!Wcb>p&tX'(BjtGN=#O`!07$Y!HaD%"U'opIOUEI"Tef@P5YF_IZp#l"Temn
44!tZ!.k3&!2BMt,aJT:+"d?i!d%46q#pm(*Z'P:rWN=+0)YbMNrB"c,S?+@"X05"'l='N"U,)@-NoiR
qum3+OFiWhr;Zk,.f9GR%g)t=@lV(#JcLB&JcN:\"=9K?1Rn7A".YpKQi%!r4D1+ST+hDB$j?eU=If?j
!208j!\K_3rWNH.FYf`q"V:h@R8K`T=&2gq+,bVu4f)li!!,B_r<3BfAg[`c"/i!rJcLB&JcO$q":D(2
!u:_6!X_sLpB:U>WN,h!"YVq`!!&&W!!4E[-hmiG"0;;!"E[&&92#*]rW!-O>o*YJ+eei<!>oR7!.k1N
!.k3&!94%^$DI\7#lFZ'-("*)"X+!P7ZXGB!!3HaXSE#$PcZ\,!!4EdK)#QNPcjl`JcLB&JcLB&p](F(
"9en2r;ZmE$O$)*#pBET(BUfE(TXP3!!5HkQ2Cdh&!U8'>VYLD!OK00"Tplp[S,c`JcLB&JcLf2"=43T
(JF`-!soH""n`$'#.M)`1V&\I"TZ.3!!4aa2#[X_"Di(IUlqqF!!+[ar<3K1R594?]tRKH]@?n5!.k3&
!2BN#F9Mga,QIfi6m2=0!<ca,"U$s&^qg6R"UP>9<r`4P&e`'>rWN@fJW/dm#:)ru#eU1"I/X9O1OONn
rWNE\1L7mI_>o/fJcLB&\,Zf)"U-%L!$o3#nHB%:._rtDqum6[Gm_NgVu6c"PQL[]mJm_B`lG32+GrIr
Z4o2ECn^_0!X)-:XT3qQJcLB&blA,;"U-[^,T/'8"U$jX"U6"N"C?Q]4T5Kc+e?aQ"TfjiQ0/,K$-P@-
"VOQkFIj-`$j?e;bZ629+9_nRAXNOM!!!"N!.k42!"L9u"U#8d(BamF"Je3q'_hh?"IH>K"U.@7"9er3
U&>,s!ubWVjo?5Mbln7RbQSf%!-GZ'"U,$$(*+iqSok2a!'#T2JcLB&JcPQG"pq43";)oGr<39ZVT-XM
"U>0Lc3598FJAX9""u<^3op>R$"02*"FCn$"O%SgHNaR+2O"+?"T\YL"^@Pb!.k3&!.k31!!O#>"`Vhb
qum1B91tHG"T];Yq?6r.6%St<"#H#S(?>H-$-U^k"Tss1Op)"11'Ihp:WE>5"T\YL"TuNl!.k3&!.k3F
!!O#>"`Vhbqum1B91tHG"T];Yq?6r.6%St<"#H#S(?>H-$-U^k"Tss1Op)"11'Ihp:WE>5"T\YL"TuNW
!.k3&!.k3[!!RcS"[!S`qZR)MdNj>@"TrFn"9eZ,!X-uYrWNBIO<Vs?!<)s"ZYBjA!!tr`BE\Nd!!u;s
rWN?+F/Aa6#C_,2"Tq=A-EmK%!.k3&!6bECIJj<L?L\1.?ASh/"9en2%0Zn_G7O*B"UZtk(4pi,!!T]g
70NfL$,Z`L?p=eu"G.lq!"]Gk0l[@d_fjPQTZ^!Yd)B@e!.k1N!.k3&!9*tYf)5aR"GPJ#"UtSX"9etT
CB^&3bQS+hnGih@NgA9H<t@pRq#CpN,A75a1XFV('n(H5"_0Oh!!W`MKS0L44:`C/)cML3Puk3C.Xc_!
VKS+&JcLB&JcPNF!@.gH"Teh7\b618\^c6P"`S`V"b[$_&+]c.6,7%H#6b8S)Kutn!!<N6YH@d-!X(q6
qum*B8,<2d6/(c2#@h&MLG7F[]DfeP&JC*Yqu?mG3uoS>5*Q&!!.k30!!!r8"oe`*"o&6,'R;Ef"9i8V
Pl:gd_=R^7@(N0k"U,!A@\5+G!!=LseLL7r!X)XQqZ$[(-E6tJ$['L77=Q!T"`:5m<;Qh.";GWXWBEE!
4f?^Xc!^MN#RRg<$-V*`!!(.A!LsY3!.k3&!20An<Wqgo#240m"U/ZNrWN;Xp](G=&iIP_rWNKg9%$]>
!-J)<!tp-#D"\#6"FjeT!#\(c"U"rMM?"p5$]5!!PGZ3V;lnDkYbD86p]V'IHr^K;HAWG_&gT2=l2]Z@
!LsXt!.k3&!4Dk.]/0'_!G<JO"T`S=qZQs9p](CX,MtEY"U#5U4[]8P!")AEqu?a1i;<`c75?M1U:Fq@
"Z$P_!!Wb5$jAFCaS#TD#tR^4C=L.t(*Xq\=BK)/"U]*hZDfk#.X*@<eCXbi!!+@OlMuM:JcNso![QG%
qum)!qZR$7'a+@;!+Pg/!JUpW!!*_Hr<3OmU5C91&it&2O^.hb!>21+"U08c][P]l";8*G"Ch0,"tact
"GqtCmJm_B/hRD^0&`0O0L@O913N?q$>m)8@cHC%@UbBkbQ+gH!@.]s!!!"N!.k4/!!,k:r<39;FIE@1
"TmChI.mdG4:MVn!!'e5"UpfGKOA2k:p`JH"U1n)!!-Y:rWNBn7RcA9!!N\b:'Db6q>^^+#^$;,$Ocq6
k5Y_n*CPjF%8U.!"U,\F"?3_'[fD![JcLB&o`,#_&,cY8g*?YB"9eZ,!Wo\4p]U\u,l%EHPCjQrQk;'m
]o2gm#$YDs!!$T.rWNB4)]KCf!!*EOrWN;\q#COg4Tu"1kPtSh!aoEOr;[H:&d`!&DAHJ.;_Y&GGH+VA
X_@Y:"U)t)RN+tt!.k3&!/^a]'la?["U'OM%4#Y%RWS`:"`$U2"U"u,"ThoF$2=K(64K6ti?J1'#7P:2
MuWiNVu?i%%!p+?qu?n@.g6)U48Jp\$(_;(H]%"e!soSQIf'0SZO*re9*n7t2$ukaFpJ\GH$Mf5E,_rY
"U#WX<7iq[!!+@*])[E_JcMDC"!jDl(]4F?jQ)lfG6IgI!MX`8"Tjl5!;HNq@3aP)"UPu;K!&tt!!%%0
r<32"q#COt"U0Nmq#CRlJHZ5=Z-E=Y$"+bo`jZ>l"U,$eDqb0jJcLB&JcN(V"!k`-"S2d$?%iCb"=kel
!!/5crWNKBR3-($#lk)8F9':iqZQt,q>^WS"U1q%!!T\W"U-"Y`rHAj3nH@q"U%F5l2ZD9JcLB&`W-5M
,RMtRG<A"e":Q>-1HZf`WdFpQ8oc3N!!m3?"U<12V%*h2!!Ad,&K^fQ"%JG!,lI]EbA.7^"XEgC"LjHr
"WYG\![W#ZrWN=F^X`C:!!!"N!.k4(!#*"7<7B;ljlIm^8UBMu>=K,*8Y#GR"_&Bc)d`pL!"Na+I=VP*
+ZGVh"^'J(,lI]Ga92Z_,l%EC#6b9'*VocY!!3I<5Q1fe%$/4)JcLB&JcP3="],:)hVJV8!!L4LV9a8U
!"31oNdbAD*M?(eBt4'E#-!ck"U1MDqu?m$FThs3,l%EC8d,B9$0;0D!!3H>Y5SS*Me0!jJcLB&T`>+)
/`cs4XTJ\0"j?!-#[eE<^$'O"1^*a\#U+8uA-<'G%LN%5"K!sY.m`t2"Mt9F8gM^_nGi_SG6J-kUmM.6
!.k3Z!!/SrjT#GnK*;FS$Ln,i!!.a8p&t[ZTRICT"huYd!!H4'"jTF0!!J&["lCT?!!*B9rWN91K)gK'
JcMnQ!FJV$"TVrm!"#]o"rCH<8p^[E#mCK`?R1RH"W@aF!!NDG"U!@%q#CQ6"9jSf^&S<^8Hf8R7.(&,
!.k3&!5SX=>ok$j,=1Jm';gO^<o8Z?fFJ,hChb3q;_nU+SGN9h6l-#+FSPn>*Ie4rFM%SR.K0JNb1QcH
!!!"N!.k4&!!VOT7Kl_>huF0#%g<'<S,`QD"9f/YqZ$bs*X0VNq#CQ+1BfV*p]/85"XI[`"U'hR!!+?)
fDpL'JcLB&lMq&%'Eu!Ti;a:VOr";]YmCE6>6SjEqZ$e[7KjKH,l.KE.9$Fe/gTHWg&M9_dffmXf^8_>
6,N](!.Y~>

%%EndBinary
grestore
np
grestore
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TimesNewRomanPSMT gcheck setglobal} if
3 9360 68 <00020049ffed038903af0032003d0349b1020243545840203f400d0d0255
3f4013130255151b072e25080b0b0255250c0d0d025525000c33b8fff040
0b1212025533161313025533b8ffdeb41010025533b8fff440150f0f0255
330c0d0d02553339070c0d0d0255072d2eb8ffc04020091202552e33001e
04292c30340c40090b02550c401d1d02550c40111202550cb8ffd4401e09
1202550c0c047f180118401112025518401d1d02551810251e073c2c0400
2fed3fedc42b2b5d12392f2b2b2b2bcd2ffd11123939d42bcd012f2bcd2f
2b2b2b2b2bc0c0dd2b2bc410d4cd31302b2b1b406f0b1c8a330212533601
12201f39803fa809b60a03122b127d007d3386008b0b8b35061d12163a10
3f803f04091c4c054c06452045224c3a403f891d080a0e0720002249014b
0a490b49354b37433a493d570b670b8509840a840b0f54168316021f3f5f
3f0260083300343c2e292d34bb011b000c000cffc0b609390c280b390cb8
ffc0401a3a35100c500c02400c500c600c03200c500c600c760c040c3c18
b8ffd840290b394f185f186f18032f187f1802187e1f100110251e07303c
403c023c2c04702d802d022d35292c30b803464011040b2ec02d012d6025
00330d0c0c343433b8fffcb41010065533bb016700240025ffc0401a0e39
00251f2580259025044025f0250280250125101010065525bb0243000700
15ffc0b21f3915b80167401e1b2f393107400e3920075007800703100701
f0070150070107433e436e182b4e10f45d7172722b4dedf4ed2b10fd2b5d
71722b3cfd2b3c103c103c103c10f65d3c003ff4fde45d10ed713fed72fd
5d712b11395d71722b2b2b2fb10602435458b2030c01005d59ed11123911
123939313043794047353b1c23051337383638020609080a080206212220
220206350b392000111d131c0012130f1f0d1c0122233b05391c00380834
200135340b121c101c010e22101c013a063c1c002b2b2b3c103c2b012b10
3c2b103c2b2b2a2a2a818181017201710071017172005d4358b23f12015d
59015d2b0072435c58b431400e392eb8ffe0b210392eb8ffe0b60e393720
0e3920b8ffe8b20c3920b8ffe0400b0b3918200b3917200b391cb8fff040
1a0b390a280b3937280b390a280a3937280a390a28093937280939002b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b59005d5925060706232226353437363637
353426232207061517140623222635343633321716171615111416163332
3736371506232226271106070606151416333202478d24363d5f7b1e29cb
ec57533f2526022f26252fb09f7a4e3b1c120a170f100c153c7066313a01
972c4f4456384c846d1119826a433144785624896622222c3a2e32342d56
90291f422b85fec9833b14070d3c38964493015d3c192c6039485f00>TimesNewRomanPSMT AddT42Char 
3 10378 69 <0002fffbffe403b9058e0016002401d2b10202435458b11e05b8fff44010
1010025505140c00180a0d0d0255180cb8ffe6b4131302550cb8fffcb40d
0d02550cb8fffcb40f0f02550cb8fff4400d101002550c0c181700040209
13b803e240111440090d02551415001b25090b21590207003fed3fed3fdd
2bed11121739012f2b2b2b2bdd2bc010c62f2bcd31301bb1060243545840
2618170003020913141500215902071b25090b1e0505262500180c0d0d06
55180210100655180cb8fff8b40d0d06550cb8ffeeb7101006550c0c2625
1112392f2b2bdd2b2bc01112392fcd003fed3fed3fddcd1112173931301b
4079102601a406b606b507ea1f040526430d5d3620267503760486038704
a603ab08074707013a0814270d41131e144418170c00041b160010210121
5902071b25090b1e311f0590050260058005af050305eb0c16000018240c
0c100d500d700d900d04800d900db00d03000d100d200d300db00dc00dd0
0d070db8ffc0b73c350d6025c24b182b4e10f42b5d71723c4d10fd3c103c
10fd5d72ed003fed3fed723f111739f5edfc01f53130437940281920030b
072620031e20011a0a181c0019180b0c1c081e20011f04212001190b1b1c
001d061b2000002b2b2b012b103c103c2b2b2b81810071015d2b005d0172
595901363332161514070623222627113426262322072725331111161633
323635342623220706013b859a8dd2a28bab50a5560f20181c2a0e01132d
336d395b9d9d6435352802f6b9f1d1f495803a3a03b59c481a102370fd28
fddc3233c8bfb0bd1b14>TimesNewRomanPSMT AddT42Char 
3 10958 70 <00010046ffe4034a03af002101f5b2080401b102024354584020021a060c
10100255060c0f0f0255060c0d0d02550616250f0907602170210221b8ff
c0b513130255211db8ffd4b4131402551db8ffcab6121202551d3103002f
ed2b2bc42b5d3fc4ed012f2b2b2bcdc431301bb11223b8ffc040732a2d34
0023430d5d36170d5705021c135404530553065407581b581c0767057605
80008021b41bc520d020e000e50509370147015618551c5f236018601c76
18721c8a128e1390119018a601a402af23b301c101c707c719e908e41cea
20f4011806024a1257128b1f8b208023f02307112001bcffe00020ffe000
1fffe0b2001d00b803464030102101602180210200211021202150216021
70219021a021b021c021d021e021f0210d21661ddf0f010fc7162509071d
b8ffd8b214391db8ffd8403812391d31030b21cc1f0c014f0c8f0c020c2f
100030004000600070009000b000c000e00009300040000200aa731a831a
02501a019f1a011ab8010c4012f006010006100620063006400605064322
43b9029100182b4e10f472714ded5d7271fd715de47172ed003fed2b2b3f
eded7110f45d7172e412b10602435458400a531d631d731d03931d01005d
7159393130383838013801715d005d017200722b2b435c58b4001018391b
b8fff0b613390510103901b8ffc0b2103920b8ffc0b11039002b2b2b2b01
2b5959017101060623220235340033321615140623222726262726232207
061514163332373637034a25d8839ce80101b487ae312c3b1e110b23233e
643d51a189624e3734015cb5c30106dfd8010e8f4d262f2615761f1e4a62
a1a4fb432e79>TimesNewRomanPSMT AddT42Char 
4 6752 79 <0001003d0000020f058e00150191b10202435458b90017fff6401d0d0d02
55140c06010701080d0d025501040f0f025501060c0c0255010cb8fff2b4
131302550cb8ffeab40c0c02550cb8ffe2b40d0d02550cb8ffd6b4101002
550cb8ffdeb50f0f02550c05bd03e2000803e20007001303e2400b131440
090d025514150007002f3fdd2b32ed10eded012f2b2b2b2b2bcd2b2b2bc4
10c410c631302b1bb1060243545840271312101006551414101006551314
1500000007010c0d0d065501021010065501040f0f0655010cb8fff0b410
1006550cb8fff4b40f0f06550cb8fff0b70d0d06550c0c17161112392f2b
2b2bcd2b2b2b002f3f3fddcd3130012b2b1bb79017c017f0170317b8ffc0
b33f463417b8ffc0403a393b340117b20d64365017014017501760177017
9017a017f017070c291e074a2201291e06272314270d41131e1444150000
07060a0001240d0cb8ffc0b33f46340cb8ffc0401a353b34900c01500c01
600c700c900ca00cf00c050cb216b2a3182b10f65d71722b2b3cfd3c003f
3c3f3cf5edfc01f52b2b3130015d0171012b012b2b017259590111141616
3315213532363635113426262322072725017b193447fe3f3f2e1a0e1f18
1a28110111058efb4156381d24241a3c5503409b471a10237000>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/a 68 def
/b 69 def
/c 70 def
/l 79 def
end
TimesNewRomanPSMT /Encoding get
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 108 /l put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/VCULPL+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a /b /c 
2{/.notdef}rp /f /.notdef /h /i 2{/.notdef}rp /l 6{/.notdef}rp 
/s 140{/.notdef}rp]
VCULPL+TimesNewRomanPSMT nf
VCULPL+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
341.46 94.2189 mo
(is blac)
[6.672 9.33618 5.94 12 6.672 10.656 0 ]xsh
gsave
341.46 99.4392 mo
415.56 99.4392 li
415.56 73.0392 li
341.46 73.0392 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TimesNewRomanPSMT gcheck setglobal} if
4 5622 78 <000100110000040c058e003703bfb10202435458402b1a0c10100255190c
10100255200c0d0d0255110c0d0d0255010c0d0d0255200c0d1002551f16
0d10025526b8ffe8b40d0d025526b8ffe8402b10100255262136272e1f01
21080d0d025521040f0f025521060c0c0255212e0e131302552e16121202
552eb8fff6b40d0d02552eb8fff4b40f0f02552eb8ffeeb4101002552eb8
fffe40100f0f02552e1001111f04260a171a2528b8ffe8b40d0f025528bb
03e20026003503e240123640090d025536370026190c0c0d0d02550cb803
e2b6090c0d0f025509b803e2b10a06003fed2bed2b2f2f3fdd2bed10fd2b
c0c0c011121739012f2b2b2b2b2b2bdd2b2b2bc0c610c4c610c42b2b3130
002b2b2b2b2b012b2b1b40b90f391f3902120610010610019309950a900b
900c9b0f9a119b129a1f9f39b30a0a3919391a5f105f115f1f6c106f116f
1f9b0209eb1eed1f028009810ec603c60fe902e90fed11ef12083f113f18
3f1f38203f39460f720a750f082f022a10202520262f3938013810071510
5501521054200423105701570fe610f510054911481fc209c20ae30a0517
0916101f1d1f1f4502420f060b110f130d1a0c1d0f1e0e1f065303550453
0559105411541306190f1d1d1e1f530204b10602435458402f3618101006
55200110030a27353637007c0c010c7b0901090a0619270c0c3938012102
10100655210c0f0f0655212eb8ffe6b4101006552eb8fff0b40f0f06552e
b8fffab70d0d06552e2e39381112392f2b2b2bdd2b2bc01112392f002f2f
3fcd5dcd5d3fddcd111217393130012b1b4055100f01021112131310191f
1a1e192e291e2727220a02091e0a21291e26272336272f41351e3644002f
000b13101024201f14200102201f0f101030010214010102012000201f13
010427020f0a1010180a37000017b801ec404c180ccc0b0b0a0627262619
19180a0b300c800c02f00c01d00ce00c02700cc00c020c2f17179f180118
1a1f39013921242e00242f2f002e102eb02ec02ed02e05502e01802e902e
022e603839b80178b321a66e182b2b4ef471725d3c4d10ed10ed4e1072f6
5d3c4d10f45d5d5d713c003f3c103c103c3f3c10ed10ed3f3c191112392f
12393912173901103c3c870e2e182b0e7d10c487082e182b0e7d10c40011
12391810f5edfc01f52b10ed0110c02b10ed0110c0870e7d10c4c4070759
313001727271715d005d72015d5d5d5d5d5d00710071435c58b90010ffe8
4014120b3f1f281239012812391d400f391f280f3902b8ffc0b20b390bb8
ffc0b211390fb8ffc0b2113909b8ffc0b211390cb8ffc0b11139012b2b2b
2b002b2b2b2b2b012b59015d590111373637363534262735211506060707
131617161716331521353636353427011114161617152135323736373635
113426262322072725014fe94a0c082126018e526d41ebeb62223024193e
fe43261b28fee7192e4dfe2e4623150b0f0e201a152a110110058efc71d4
44120c0c141d022020022e3bd9fed77b212f0e0a242401151317330167fe
d0593818012424110b17215103429f471b112370>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/k 78 def
end
TimesNewRomanPSMT /Encoding get
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/VCULPL+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a /b /c 
2{/.notdef}rp /f /.notdef /h /i /.notdef /k /l 
6{/.notdef}rp /s 140{/.notdef}rp]
VCULPL+TimesNewRomanPSMT nf
VCULPL+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
403.44 94.2189 mo
(k)sh
grestore
gsave
27.48 170.539 mo
567.48 170.539 li
567.48 268.039 li
27.48 268.039 li
cp
eclp
27.48 268.059 mo
567.48 268.059 li
567.48 170.499 li
27.48 170.499 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
gsave
28.08 203.239 mo
469.86 203.239 li
469.86 170.539 li
28.08 170.539 li
cp
clp
28.08 203.239 mo
470.16 203.239 li
470.16 170.119 li
28.08 170.119 li
cp
gsave
/11 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 33.12 9.39635 362.252 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 46 
/M[614 0 0 -46 0 46 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&ec5gR!<N?+i;a8i"pY28#mpY?$j$kJqZ$d1&-;kE')DS3',2/j()$BB`;g&K(BOXQ)"%A();"q@
!.k3&!:'Ug)B'Or*"([*$kXKp*YB"b!$<<b+X6d`"="-Q,UN6d"=>Jt-n4-Uf`2"%rW3'MY5j.SJcLB&
"op2**WdoGirBN!0*_P40`V2&1'.M52#@7U2';rY)>O78,W>ca)9i0K!<*$"3LTr"!.k3:!!YJF3s#IG
2"UbK4VIAe%6?ZX!^Aq,!!#;O!WiN%!!F'%!^dIm!!G\)77Ip#!!#Lj!WkT?!.k3&!3#r$8-]2f0(f2H
%Mq_Mo`,.g9EIp`%fQG2:Hnmi;#L@u.4J+/![B/i!!F9+!`Dt,!!$!t!q--,!!*EZ_>o/fJcNLb"@rb!
8M9Z9!tH,>'(l5.92#C]:(I7'"A_5`%8d!'#Uq3"'`oU/!!)lr"<9W-;H((*!*&q!g&Tb*!=CH]!!!"N
!.k4#!!Q@a!WlC0p&G1r$s4#5!!XoU'`qQC')hk6>[7D;%fHA3?XH5'!`fs0!!H@B!am>J!5ed:@K$<.
$H3#5!!+9NQN2U;JcP!7"Cb(,@q><6":dKpALdES"rRVN!Wj2fr;Zt,-N[m7r;["5AkW8=;#((pBPA1_
C'EPrfDknerW3'4ZN(%6.Vs\:JcLB&r;Zt;707@FpAbA9E<99`$MXT)<G<QWB.Ei["\NhN?$$8K!!RLf
2Zdb=q#CSAE<62c)9`*J!!I'P!Wk3a!!+g!li;V;JcLu7"aL+M!_*gt!!+Jq"TeaO/h%/)!!YT5703^A
1&V(TI1QI/B`.o7>CV,(#:fKK"_nGIJ.!""!!%QP'`nFSZN("5$.]*.!.k3K!!Im$!eWQ0!!*sjr;m+U
L'nk:rW!-9LPQZHM(8K)"ond`-N]2Yr;["[9hb[m"S_s".gH-%-+<jSNW&tZ.I[?0!"B8J&i;E_"XtlH
+u*"Br[@g[irB)e9#1LZ!/1CSNfPCdOHEB<!!b<C%KHJ>%k7DV%[2SL!!#V?8sGU,QC!sAhZ*hER0!GY
$Mj`*6(7oW+T;ENRm95)<cX]=!Wk;r%fHA2SUU\BSgjX=!A4EP!WeoJr;ccr"?iCm9IdIN!#tn=!%I+3
"q)8DH9#5.rh0CNMC9#aJqAr?JX)t)P])aHBG3*WP5kR_JcM_L!C;tLU`bbqVNu"q3N/nrW_lp"XKAY/
F'5`PZ>"$Z;,USS['_t7[]45SEuga[1.";r4,l=7\[oAW,eJuI]tU$Ip](I)&e[#=')aWj)65[t>RpT1
'U1Z\7C6]I'`qrXLpau:!Wp0>PVi=="`SG_R77hg!!Y!(!Wont2#.+SNZJ8%B_2;B!!Gss!kK]K!"*Xd
32OI.8Aeam(&J%4(&f<Z2bd!o#93I?$,ipHLW.7D"DBNA!.k3q!(pcf()Y*5]ET1#a[mC)+Y0Y:=BM(m
O+FnKb?2l;QupQr1X43jcR.#d@;CFFIDX@'<.0ggI9_/G]`q`-_1supVP\^gUDF`a3<DTg9`>87)]L.d
[Sj+23B>QrFeO\iI!f\A2T\8eK9Q-3#bAa4/O;;EDI*)?!bH`hqZ$c&2ZdS$r;[#O)Zg(40),DLH9VIR
:u;9*!!Ei7!b*VX!#*YEH@TX@\[i6"*^W(b-O3?g'c$TI(DR[&COLWJ_U+pID/at[1:Xj*1(6i(2uWjb
X^apL7ReA2/hunsJcLB&irC4Qe2a_481g1EUW7^+VL-acQ(?OYCj*e;PSS;'P6=#]qZ$a&0a)0'r<+!7
:h15M3]^e74Uqs4%T?:\0d7ef,q18t1&_Xh/j4"d=4e;nZNpC0";MXo9aCV%"rg8Z!WmmPq>_+8$j+ph
!!#L#&.emE567`!)>aC;8t,k`/-Z"Q#')d,77GfGp](H1E<8.2aoLi0$eH=!!bR\Bfrho+5P,!_ZmZXj
-sSTm$M"0)%mb,"%l8c.-oJe7q>pr+a]BgROHYl)iW+Q1MuWkg)>O:2!"D*2g<[XA9Nj*Abn`nh])W-M
&fDQD&i:46H2^SNG"*Gh!-0VASWPS,E<62G$N'l+%P&(l!R:lI!!YeX![f-<%f$)-S[nk(<W2t&0a9iD
YHKGM!!Lm_!lIjD!!+/a*!-2oKYS-n!WjB+aiW::S=GilgP.jG.2`:,&dm_#$-oV`6\LF.EH)6]!XdK.
I6_sl(7IiF;q1jL!"(lC!20Ang_9Pb%hk2H(gL=f83+++J3M7.')DU)!!Ju#!l5BF!!Qn]*Wd_Fqu?l"
WWKYMp](:(%MH/N!g3]e!8ZL+!`rG5pAb=g3s)Ks\,ZsB56:n'>aC-^EZ@\$%fTB20d7eF/h%Fd!#S^]
VGpNP"1K;Y>!'0PEOZ([7*>e_cGhor!!!Mt!.k3\!#@"Ud_<tM,C3U"?jNf9)]JjH;(+,`'B0#'!"RXJ
!h#hs.1RgN$j$K6hu!HWK7c,$EqfVF7Od7h!\I4K!7tib16e"9qZ-Qp"Q@,t[Vr\V#q!Fh!oe,N;_]`W
!9X=jP`BbaQ/cU4B!Jf(EW-"F:.p>+Ui5)F,1cer$=r5sirD.&!!!#7!!HujP'M?Pc3i94bq(D%1X+'t
LAQ'4Occ3*V58B[(`:j-!"'>q)(>_,"U,c#1`6o=$Ma\V!$Y$-7RdmF&Nl-lU=+Bn0.9_IL`6Bs4,MFj
Yfb*]-B\rO"j6nm!"RS9!WoZ7L#kfP!Yr3L;#C:r-n#<Zg@tXXD],.X!b2?5!14f/e!$!h!!V7I'`sU4
o`3#4"u_;Q!ogmB_Z99."Dk_7;)8(O#S^-8k2rPdRS)]B!"/_V%LR6:P0Q$h?p<MNXu3CCrf73eOeno_
UtGb'!%:I%U7tc)8$sA*RuKK1B:Aq5%Cgm/*\p&NEBaj?&7%sK#:E5)+;GXh!rWiRK%T8L_0:*W7RhDJ
'.O,]"D@oO.QR\q%LtWJ'(u;.!!"Gt&,n%*3c\H#OC'e>cS$rF_oQfMkfGicK<I/j/MGdbakKdl1Y:7;
EcM>g!9F1^'>n,O!Wobf%f65/i8@lrh=gmYg,Vh.+-G7\S3I((*$"VO"=PW!VD7!/h#I[r`(^:7UJM<'
!!=4jXKhpuB4hYO!Yd_ifnIJf2V-I<f8c"+Ea)P``W/j65n;MpI=Z0G7'a,]_\>tS48/d^!<IfTO65UR
S](U(!$Y8"V0jes'Ea#]TWbMU]*?\.c>6iR``7':#tdhD<@TJ!?iH9.eoD6T,!^j,^<aKfHT$4/jhji)
9Fsl&2`DKN!\kFC6a.XSXA4X^XY=V*H@4&oRN)V?>NDTEitcghf"OeI(YInDeHep^e^LjV?=$A\$>haI
,L8W>PiLdeN<&bS$PA4h'`nFA#=X0g.Ja#L<)c9fNYs8Yr;Zt!;r8Z%rW3DAl-HY0!Wj,Q'(u;.Hnkce
'?^CJ!!m6r6oP0tULX_7!!u7[>[0IM6q"A$qZ6q8['W=nW=>QO.#[#]H;r$X:/2K4oE#Z@L]_+f+'?pc
Q)1>.]PMc1FP=J0%V4/q@Xc8+&C\7"biIhN#]`Nu:f@i-1_TTa";2%A!"/W:!"/]*rY#5<o`-\1,E%Ik
*\p0%?rU=!R=Kr2`4*[S4,o^kIq>P9i,c;D[#(3\5;E\Z\jLr'FU5T=rm(W#%d3nQ!!qBs\%"Lpk'@10
!;ca,I=3.<-nH4dEY6:AU8-XdqZ7!k*Ye_XQBi$S!!E[[!jRs(!!jReN@+dqUf.W'!!"JF!!`l>gf1B(
Yd47Y#iaisKH2(hLrB&i#BO(I3FaQ_cjcUdfN`g;]Q_V^Um)C#^&Sm#Eo\"VAgAJ"@^0h1W?3d>F:1\D
"mH$F!!;&<PP5%p/mlnLGu)f:j\&80E1OYYB$k,<JUPD3`<=<`T`>-dUf6mc"(,ED(&\18N3uCY!XJi/
9N%r[[LEuN!WkAB&,#u=8f[u&C,=(gFEEY9f%*:ug)SpF&e5Q)!"&jP37t2A!WjX=.I$oN!!*30p])D"
?]^?o,Gq>bd\EP%C*kiH=EOo6N(Zgr^<P@>BTnYZ!!!Mt!:'VD4@$m)G"*!\D`n)#f8c#WH-RbLbq+5\
b98BEKliHJV7eB0?Kqfs'T'</-N\tcQ]fpa6#U9;ciAXtU]:I(RiqM.&K;H(*CrXV$$9UnTt1u.Rqru?
!;lg?c8u(/6_L*PWbu^^ZEg1d3N"kUjXjGsaH.!<>NFl*','=*%0UWhksN!:'`t[)E\RpO!4r707a(i4
!&,p]Trl'X/(N06#/en(WsGZ^U#n$_XJn_='K%-d/!#abZEdB/^U$d7'K%%,ceUaj!.k3^!"X!oYHq(r
We>m:X6:Y'2D4h+"tr1B!\JF*p](>?NV<JWB4j.)!rE$1ijUceXCA<72-u=o_G:pr.I@*?P;H(W'Y:j\
rW35O2T?CC]`=B!'Pc'DJHf^pCMSL<cu!`gU;rfUc-7-Oc?YRrG2_$'Cj*c_4?OCDP[BNJPS)e61&1eM
%O.bMJcNpn":muJ2?`XP#=c0(!ofi8;u6P5:g7O]!m4WeW7g9*fGCE^i(N;!?GfN*^l:;I!WolLZ5QJ5
(RT#\5hq'0()B"p5X<;1W#($-;6V'-(&J%65VWVC!.k4C!!+nhOT9t5bQ&D4$k*2sWI0G^j5\];(Q&5.
!YGD4<[mtI"FGLZ9,@N_$UGUVSsI'VW+)j0&GZA?6B,0K;R8`tM.s=eW<7T:2h)8:)u9U=lAl>T$',(<
!.k3&!9!n[EZZA.rW37k2<bBE9`5"nWE&cp"tF\8!WpFep](amOH?7rd\D+P8P-4n)t!b81/TRLcTj`8
M?f,5q#H!HJcLB&JcPHD"O51_[8$Dt"$\Y=;u-Iu.]]UE!j##a!$rp`#mh@_c^s'DM1W$j6klT;:.Rpu
BdWr`ieLNI.1-DS[fXhYj8ac3JcLB&L]@TS.%hS.)[Ag"*JpHoUac'=#/.\Z!^_nNl2VR=Fr!QCg6@iX
<lW-ZEm0,/!ZQ4@')hk5=:>8Nc2`Fr!!%TNJcM>A$4EE"504!RU<VR5p&G59EchTg!J+e:!"L2==E+BD
X`"3ng2e!+PILUE!.k3&!1ElkdUrU`()cQ@m/RQ5:.t]o2G2NM>lluaUB#lGJcLB&Y5eaSB*&/N);>,k
D[T<6!XCVUe^[q,3)bh;JcLB&JcN^h"lH]h!_GH,!"3h'!Wmm+B4h9Kg(O/\JcLB&i;iljU]>uHfDl'n
56ADY'&!<lgMm8rE>92i(M)M*JcLB&p&G-N3fa8m!:9aijB2NcO-A8t!FLNX!Wo(O'$UE.!!!"N!.k3'
!!#Om9EK4J,23)!.=8l/!WgUn[K(mZJcMJE!^/[qjT(YJ"tY3<!n3Ajnc8Ug!D4g1!!4cP6N.#eaq(0G
JcLB&[K$@c1_S.8XT/P[e/eYmaZAhi!Bi:1!<)s!Pf3P&!^G!TN<"P1JcLB&_#O[/Yr;`DcS=/S!\#9$
rW3/-?Q&V=JcLB&^]4BQ1rTHH!7_&QURM;dZeF+5#>2-H-N[#l'B9(E!.k4$!!-"EYQ07Tl2V#%N!BCc
QS-tl#0n50!WjEIc2`Fr!!%TNJcLB&#64a@^]FR*g=uZ7PW^>0_@6PJe.]@mJcLB&JcM&9#MOf)!XpcO
2"gq6!!s,l!!EFW2Zg+%U]>uHJcLB&W;m,\iW9/iCF\9Cq#CPD^]G(CNrXb3JcLB&^&SCOJS,#cAVCWJ
!!SHe!Wkr3q>c*Iec:4~>

%%EndBinary
grestore
np
grestore
gsave
28.08 236.359 mo
469.86 236.359 li
469.86 203.239 li
28.08 203.239 li
cp
clp
28.08 236.359 mo
470.16 236.359 li
470.16 203.239 li
28.08 203.239 li
cp
gsave
/12 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 33.12 9.39635 329.132 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 46 
/M[614 0 0 -46 0 46 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&\GuX2!mCZC!!`T/"U5/9#Q`Z["T\o6"ptaL!.k3&!.k3r!!*K;`rH>S%hJpL&IoHL!94%_',1WT
'c*YHJcLB&JcMYJ"r@R_"pPq`j8erT"WJF%"s+kK!.k3&!.k3_!!j\j+rCM/,UEKH!!FVr"pGM6!.k3&
!.k3&!7(WH-n-YF"p6A,/M>l["YVP6"sPeb!.k3&!.k3&!94%c1+!\>"rK-H1c=.j"u\D"#!"^sdf=t"
!!'G-!?4,H!.k3&!;HNr(-F`?rWWWl.mH9b6:+%-jT#H>%gE5,7_JeR!6YBB8%J\P!07*_(.]uJ9)Jkp
"\VMm9heAY+VskR!A@:=!!F*8##\Bu!.k3&!.k3H!!F6-<'<87"p7k+<u1Z5!?2[L!;-<q=>0p`=^%$i
JcLB&JcN:\#:3Rk"pS=-?2"O(.UM<="[l]$#%'%_!.k3&!.k3e!!-J9_uS'_#ZG1r"pQkK@q><<!G,[&
!!QtIBEi0Lkl?;8JcLB&ec5\?XoRM_!buLCrWW]WCi(&$"pRe>DK#LY!H;o>!!PE'EWu_he,Y(#!!%TN
JcN1Y!>5I\!;ca2FDH"'#'M3qG69.9#'kN)@s\Ca,Zs40##HTN"pTG`^AricJcLB&aoDH=!QtHRI=>l7
#BE7_BRj/9<X*8h#(M,F##'ULk5Y]>6A#IHKS?E+JcLB&JcO[.!Dig?!#C!3Ba+f_7=T!$="RGWBn:b`
FTtNk!V6<a!!Y)CK*DO5Kp;Xi!.k3&!5/@JL,=YiLl$,/Mi;e<?qpn1<K<(DO*XXb!!n[KOp2,SK`D+)
!.k3&!.k4!!"bAX#!S;[D,5\J4c^8C,++2c"p(-\jT#LSS=Q5UT.fI0JcLB&Q2gq.0(/dl!9X=sTV4Pb
PnO.jFeY-*Is[r#D[$E+=!6T)#';t,;$NhbeGt1$!!%TNX8r85f`6U(rW!\09a7ID>GnF!H]kBt32'\Y
70WrsX5j6b6EI;S"qP.W!.k3&!.k38!"kE+"uNKd7Bfs)AW_rU#$crf!sSt71?8E>!>T]P##12Z!.k3&
!.k3N!"LTd#"oVdZQ6DVB=4,8Zhjq-[hA01oDf'%A%2^`/<p3e!.k3&!5ALE\WR0.AnHAo,$nR^N[_TQ
rWWF/>eT+s#BV'%>mA'4!.k3&!.k3&!7_&b4/Y%B##m78(^1YiXh)>%E-=hXEcOJ*!!^<)_o)ag=R,s=
!.k3&!.k49!!0<7rWWs8@<sC-M^=T31khmI`!._B@H%7k66BM?#0&CK!.k1N!.k3&!.k1P!/*uD"qcC+
8.c%R4:WEJ?k$2U#"_D-iW'/`2IX]3`\G7/JcLB&JcM,;!N:JG"qDZ3V92C7HWSAqWC1?F"p3#maP[%$
@1`^10rk;+!.k39!!Gdn!]C,O!3?/$I9-7M&<8efD[$DA]2#"PaD1u"*38N.rW!!HD\r0K"@gW?,gM\U
JcLB&WrNFOcr<uH_Cbiji;g[o(U+,KO%U;o#&pNg(d=")Ip43<Q3IX%-2.BAR\MBLqZ$`H*)b/Y!!Pih
##E\JJcLB&JcNUe!=0#0"p8GOX#A3&ec6\->mAR'`!-FU@9:C[SeOb7S/]TT$49i7(;nZKqu?i0P+Ip8
!!?VR#($%E"KU)X:OVO/JcLB&JcOC&#%NGn##[GmrWWE1_?.7JlMqU'Ta!Z2QNdZ4(Ts*9J3H]#]hm,U
"pIsAdN2&\qu?g]H$`rr!!BG1\s2si"KP`2SM/OoJcGcNJcLB&mJm]bR0Ek#f6X!D;?d>4W2'Cn:_TB(
#'DcFfEQ';/[9#aDa'(f2PC$R"j>4X$%$ak!!Cn7A8M,C".Oh"6MLN`JkQ@t!l+ef!.k3(!!/OU#6n(8
M-3u_<rN:(g..t>!APSn"qY^hN=#kq3aa//flEZ5+L]o-"pWR7A!M)Oqu?iH#1_0!!!CgagG8O("5IPs
A#]N\!.k3?!"`=;4A07e:chK8!0K5F#169C!3H5Ah/W^<G%kTGHNj]+/WIClGA5p^EJOf'QEE?AIkgj$
"/#kQ%/g/0!,\)-_#jB3"/&PuCm>!P!.k3Q!!3n#A,QB.2QZl^!8?H5_>kT&hb2NS#&@hN"pVRFB=3`G
>MsnH`!-EQY*2:$./a,KY*T>-2Z*OW0cgNapAbB#"seTs!.k3&!.k3e!!,oNr;[#7M?X:CSB_,e!$5<p
9tH*SBSV/'+pQuPRUVjRED_cs8d5K=V6Zt?!rW*$6%]AZqZ$_H\-AGt!!GRo#2_<'!.k3&!.k3u!!YrE
"pRuV-+O$C!!,QprWX2nDkWdXgS"i+(=4OM6Ra!2LB[qtCe^_Rqu?i9D[)a/!!C]E#/U'7"BWMGg#:H]
JcGcNJcLB&k5Y[aY6G2"A#')*6-1&M7=0<#J4t%)ZN_C=0i+4+-s0GSEcQbgJ:'!I!!C)4+pe&G"*6/-
EVKM:iXc<a!l"_e!.k3&!;lfsDZ0h@bZLY@(3IY&>LAT?\:AH*)$[LX0!'\;!!%D?"\qhQ5S"P*!!@%3
.mj+5"2Z7F^%hX2%&sL9_5REd!.k36!!'k7"otRp!3Q;A]jq=CWL.t!boEd!GQp)/dse(-!87X9N5n.(
%f65.#RP95qu?j",nYrtq#CO-ecn:APQ6:8JcM\K"IfT"LVr'N_Z1ZofEShq=2]@-P.%<?>R,i]-?#DN
Ym-/GEIS*nqZ$^sK21J(!!@Wj3LomF"Cjk)CI8"#JcLB&JcNF`"HcRd-_&<[fDlnJGm;2%X.<slbZgp4
Ue4cB+3W2S:Boh<8=/0bqZ$^s%lciO!!=rI#(cRM"N(QNfaR*FJcLB&JcO0u"HcRd-_%RFm/S,_Gm;2%
X.<slbZgp4Ue4cB+3W2S:Boh<8=/0bqZ$^s%lciO!!=rI#(cRM"N(QNfaQ@1JcGcNJcLB&k5YW$'F&U6
UAt<a*Z>6V0ZS0<ba'`K&h,2pc4V3uA;:B:dDq3r/c,MM5n=1;qZ$^Q:BonV!!R3W"pV[@^&W`bJcLB&
r;[!k@'^%AYG2(5:fMQATqH-r][nF7OOGJ*S3$^Wecl<^P*3)oUb2HD"+ADGOo#+\0dHt;q>^Z89a6d$
VuVDLJcLu7!A]l<"ouj?!3H5?(OH>j9<?8r`mHrV1?C<YWrPu.i!(2BMSq2VqZ$^@1d>jT!!E:UhZh!p
!!MGL#,K\2!.k3&!2ol$)P_GK32b^8_>jV_eG]X_Q[s')il64pD3L#-!!(GrrWWKG*P/>,qZ$])8]^c/
"?+s<fbXJc"e+9Z#'Yh#!.k4%!.Y~>

%%EndBinary
grestore
np
grestore
gsave
28.08 268.039 mo
469.86 268.039 li
469.86 236.359 li
28.08 236.359 li
cp
clp
28.08 268.039 mo
470.16 268.039 li
470.16 236.359 li
28.08 236.359 li
cp
gsave
/13 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 31.68 9.39635 297.452 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 44 
/M[614 0 0 -44 0 44 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&k5YVc!WrQ/U&Y/t!!E3*&-rRL$OdIS%hJjU&eG$V'G^QO!YuRhqZ$[8)B8MQ!uqdk*rH!A+!:e3
+sXc$JcLB&JcM,;'I4tO#:CZC.4Qi!/KP'J0/*A+0f&Y3!AcS0!!4#q2YmCU2`Nf#r;[!^0*aQX4Jr12
!.k3&!3?/A&3W3A#=(RA-8%YR77J7e84cEH9FD5&#7!+]:Japf!!>2Y;cN\qrW!<b<E9)"=#a;0#=MOR
!.k3-!!ZS0>?_qL.g89a?!SXXrVut!?EsP64C9=?4Q-:T!$bl[#7"^J#@qCXB0KNj6>0,.C'"GF9a:o=
4)ARk!!#W.@;b`<"tL("#<r8PqZ)3JJcMDC(3"86.<@dsF\[*#*@WXcG^3_DHQOMPqZ+A2#U;GoE&pQE
4]]f-e,TSO1a,*^#7im]-[\j6@Pqk/5(.ibIPUj,#:=pM%W#U)0_k\T<BV3;JSPJqAm=?sJcLB&[K$D1
?@mh&#7r89A-W>TKnano7<jTD>6TlO!7UuS2dJHE<)3aAMRWZM!!?8[N/dZ=!KJN+#6?7jra,aaO-"bb
#6\OIAW`/S!")nkP>+bi#7#9T?dJe)!!!"N!6kKGPQGl'l3@V<Q%,*@Q^F1;Rd0qY<!"%>?<(<<q#KOW
">lSQS=QASqu?p[Spu-[T1o+e!e6(@rW!-63hV:i+bfat#bdufUno^P)NO_#!iDkX\H%3]JcOp5"fSC]
Wc8sS#6krdX/msP;Yp\%+Dd?/KDYs0-`mbmY!eDUYctC<Za>$IATgD4&Lq4i7ldERQ+"/T\>"\2U/EX)
%CrlYAOqrG\llZ:!;ca!=*V3)8t5kk<3%d"]"FD!A36D=9pYkY!!kM\M,XL$2J=T;#6SaN4"'k0!_6NY
UB#lGJcPZJ"HmaX.N8-g#&Br!9/;]pqZd9?5D?RAJ+s6a3s`=([UPq_-5MW8Ba8DhCESW[-9G]2#7,6W
@j#\*DeU?n-O=F)PJ%9?!$``N!2]`+<[<d@!!$/$"M[!H\#*.%!"/u8!#*.>_'F:.AI/8?r!*CZ_SVW?
4H0>m!8.>W,<#dh"]nc&_#OLR1\:qE#6JUnK>e'"XZ=9]?T^I$!4i.3W5Mp:!!AHX**;e5&d?6N#m=GO
.6e%B1(qVKM2>(lp&K[EJcP3=$WipZ%]0R?R#B$e=2k4A;8tKN#M'+^HmpPIpBLnsG%CdZ'0O,3c2[kY
<qu^r<]BXN%MM\?7T=8_a]-)[aAo0Gh#N$,KE)#R5lq8rDuKtH4(3D[?%'j"c2\#1=piHs1W]mi#7cb?
c)=ZD<6[D:Gu),ecMRnM4$1bo4K\\*!!Q_4'3W[__#T&e!!&Gf#B4to@rtVWC&J8?4"8Rl<*&krec5bQ
-r%eg#sU0M#D9mC5sAoV#6nhh#Afd+#6"T&,Q9h*,Q7ZF7T`?"r<E@R?'kVD!.k3S!#(M3#=!2/2GS+l
)B(JO#@\_&DU@SInc/\td/F"J4MWusAFTm+(7[JE#9&VQYg[Jqe2CWP!D-;6(tGjb9HPA-^o8j2'Cc&'
<IXlO!.P!(K)gK'JcN^h(=8C*#EsEf+(.QqM@toO5TjbrNui6Rh>ddf"^BI-f+`Z95,KuDnHT,2TciA#
$>F.dN*;'=!'I2[qZ%$e2j?e0;,L[#\h[#cqu?uK>d1V^'bX"7!!*3rrW`MW>!23QJcLB&JcOF'(0-oD
#ECULA.7#=?,0j7As3H)26/IQj8]Tq8]0!rJeFm3QBhfMlj*.f"_5D#Y:aMd#7HPo*DO5\Gq5:g!E\jm
$TD<>@G0<6R]C4OK)GZOW7i#&r<E@$`r5r=^mG$*!k-j3f`6U(JcLB&li7i@_P%4)gneRuC^](U8QFZ!
KHLLoi*A;*!!QD/MPVU)j9G].\GQRANYNlG#<ON*`0;+ei<OuC7?;fN6To]o<*)ponGitV8dK,YAnHlA
-O5qor;ZjB@J^9<N_^l"]-IigXp52d1rKBG!.k3&!#T(@HaX/t.`RU5ge<+N3g<^)U_R>dJB`'!!!EL4
g8;CH#6Jgt[eg:NThDT<eIiMS7+F"[44pB8<WItr4$Ye_Ra?H`<X-qB!;ca*]AGhg#;n\/(j-'X&mtS;
"[d&1'o]Es#7Cp-=4IP'1G]7@I$_#:JcLB&!!&;b'@:`n@L"bA/;qa]#_ffs"U7"2RfmF_G8OEN!!O#[
WWKJYlj"DDPse,"3uo+B@qpJ1^]4RXE*slg<lNQ*Rf39i=k5,2P2uZP?uuVlj)2rZH#"bf=oJC*!!#@k
#=6-'#7HgY@+]7-ARubbKlNL\JcLB&WW3kp9%&=s@q/$CE!4Spi@MQC"rN=WDkkieo)Jbk"!2[qk3<0[
-_JDiO?g-8en?tZ=8)[q4AktU!Y^g1j8]R*_IChg4Gems#Cf,<!!U"?#F:DcrW``E"9j(a&t#$k#6?p@
KE-T(JcNIa)-;D.Df5k-d=#0N:6UCGI0No_)Ik.01fRNO!!GF2`TKn]#Q=r;CQ9Ns,QL]A%E\ZO</Jj"
$X8pLSH&YQP'7/i2#@7V3e%Bf"1.t3!ei0+rW!,:^BY!;R-js+!.k3&!7:c`=bk;JTa,%I3a!"9U5ink
^_#=#[qgXc*;TX<<Z[T>\*aJ,(-mS,Clfa72#[IU#/L!6d/XQ&+bRr<!/ZOj#Ndl?!!-uiq?I$9T`+oq
=*]&r#F;%9!.k3&!.k45!#SjocH`*g@WFM4&0IX,BNr7`h,CduKLHmW!!H=DQY*_p#7))1KnO9(+/Cam
!!*;>irJ3A$[j1Nb5_O!M)GV$2#@7RDV4dj!>V:,!!ZMMGm=S?TYph^!.k3&!;Z[<?f'X-5R.P'>Zk,0
%R6TGI9'@SUGWfR1oLC:4BG]#NVj"aDeBu(A,Z]ECP-B&Ej?&k)PmackJi```Q/&V!"<5-Q%m0V4?OI'
26-cU!!15#r!*]SJVjF-,?;a+FU&010OM$aJcLB&!!&#Z$Wh<R+DZ+T<BOTpJ1-Fkg!Ed7[%(n>eNLjh
)b#Db@VU3Ec4\iU5-SY9[>fXd^`pjkg=fQ<!!<nPG.ISP"BW;P1HbX:rW!-+2?sIs/R//R!E??'#6bm:
Q$58ORfJ$?JcMMF*tua.@L&EJb.n"A_WJ9E>u=VGXp6)"*?>B#\8#\<>lddDr;Zs6V_eEDYQ+`3<EK/"
"!\Ic/,9/I,7k]\r;[*J<>c#H[^L4k"%nP'^kMi@!.k3Z!#/HgEjfaob72QtTY=O:HJ2acR95LK#6[8"
I`9\!!3uS*49k?V#:!29#7"o'jluht!.k3&!6G3B=3N#j#8&<qcfHZ5KdZ((E&pe)CMS&LdK$`V"s\$<
#7"n5df=t"JcLB&h#J3%BKl_,((1Cq$b^We#;ps5=6UVA;MVpcbl@rL.ng0Q\*:R+JcLB&JcP<@$!.Xj
#@jjkV<DRk#7,+JVZ9d*$@W/e!!?A,7S<CTirB8pGR"Ih-F0NLJcLB&!!%cS"Bbd2#EAnWhhNf_#6JZU
hR3Cq&Eg@OgH'P&#iQ-&!lr)Z,3T%'!!^8S#6uB&/!'a_!.k3?!!!3%#6:Ip#6CM#o`2l0'K=]IQ(\FE
ju#"$CPA(`D'UjgC;]-5!Eg-9#6H5@ReZr8!.k3&!3lM6?N^T=+@Ik36KWY#Th%6'!8@JV2`*&2$hOZ-
5^0>EA3/iQ#$KQe#7"rZiW+Q1JcLB&`rHW4>+Z$)9g-=@R)bOF#]D09!:^$o<=bC+@OH^sqZdJ%9BHHa
CJ>%CVH2j[!RSmd#6JZU<6YDp!.k3&!8RVV,J0NG#7;U.Z-frfe%XRhS&,.4<l6cDEKCcb#7"]>C3FIn
#6cL#c8I+]rW`P!dYsFR!!*+HrW`Iu`jPl!!.k3&!:p1&,LDiC#AZ)<3>ZkaF[$Xm#T^e_#$+QBL.m:J
r<E^G5X/rf#IiFMk=d6%#6U\G8Q#Hel2Uia%fQ\640,"SJcLB&!!%oW#Wu;RD$L;Y*WQKH!'FZ6/p!YW
J\qHk4M_mqJ.D;Y$Yc4k#RCY?Be%NJ'B]>q<X(p\#6uW&@#4l8!.k3F!!lVRTWs+S@]nVd!!a`-E5-ic
8&+cuq>^O@W7CqQ4M+i2$DjKm#7>5nKa.jCj=sWL?fqCn<uGcY#=$9!!.k3&!.k3^!#Qq*<>7iR#6u$m
^&S-Xa@9"TGr[;`#A_u]!!+;Uo`3qN"ZurC+*qGk#6bltL7+9,jT#KDR;3%;UfuLQJcLB&JcO-t"'/W1
)u^'TNeDKk>94h^Z[o4gU90*oJ5^pA!;6Bt=e<oL@r&QJr<EQMC-d3q+sKnF!!\:\('bUM>/^Jn!.k3&
!9O7`4<3MGrWa8e7<ohC_FlPbX?ITSh\uV[`&q7qR@.8b`rHEQ(ntNA!lMZ^70^)B4^M<T<oX/b"l^Y?
#7$O1Y5j.SJcLB&qu?f17SNdd*^FRU!!_N:.>#PR]>POR8r"+9"c!m!()AK1*1G#IaoDcLOYE48!'G[K
b/iuNo`,>"<^Y;FCBk*)BHiiEJcLB&!!&5`!>'8L#7F3-TE"s:!Pe[t"Af2P=J)>e#6JhMSGWTqCJqMj
R$>bo!@(Y"!"1`WC2.6o#7#05#!@J;JcLB&WW39(eHZ=,It'!H!!fG'=&9e?#IsR7"`&0kB')he#6>ae
#RPb3R5#Z7*`qh2!Bb>;!"7.)VIOCW#7"acWF+ojJcLB&X8mb~>

%%EndBinary
grestore
np
grestore
gsave
27.48 268.039 mo
567.48 268.039 li
567.48 365.539 li
27.48 365.539 li
cp
eclp
27.48 365.559 mo
567.48 365.559 li
567.48 267.999 li
27.48 267.999 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
gsave
28.08 300.439 mo
469.86 300.439 li
469.86 268.039 li
28.08 268.039 li
cp
clp
28.08 300.439 mo
470.16 300.439 li
470.16 268.039 li
28.08 268.039 li
cp
gsave
/14 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 32.4 9.39635 265.052 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 45 
/M[614 0 0 -45 0 45 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Q2gpd!r`9'"9eu-!!`]5#RLh?$Od%F%f6>6%hK<c',)&p(A\+>(Dm5l)B0Y:*Y\/G!?WH&!!OMg+sS?Z
rW<9M-R^DJrW%NMJcLB&[K$=X*r,d?.kCc)/J]u;!#%">+>GVe1GgsI2`(U=3&s#D4$<E@"[+sS5!M77
5X@Y#6N.&q6UX@47n?3D0M>%C9`+kk4\`ut%OiDn:Jan?!s:nU;GpFBjoBu5JcLB&b5_SI;?lst!'L5_
!E<(u!"&r7<`_^l2d'<S3rK-_1g<RWp&G5$?=-iCr`0)/@Uo<<![^8praZ%@Ad2FOBP2#lC<uqgCFiCC
Ci+'.@rQF.rW<?M,&)*J.Qu,YJcLB&JcO^/!H`J]!!XrR70>,0<W)n.D)-9YG\MFe!s9fpHU21ilMq.o
I=?ZrJ:W:I!t7PK%"j.BFG,?#?XA0V!;6C54`p`HL51S.:1?s;'j>$3J28tm7!gpN$]0`YM`CS9"`e-$
N%6!Z!.k3&!.k4<!#Q\T!s<%G?QG)bNE07ZNfO8E,SuOSGoVt/!">#EG`rg[Pa.P]HPh,+"!SU<6<$C?
7hJfu:LuJP85<u;R4"GR2)1ScK0PkC3Fd#bEW.0b),UJ]o`GOQSPGc+<ba8g+[)IuJcLB&K)bn:rW<:q
%A*`Aqu[.CTJAg&Ti9eJ%L/%gU5bqC4?Rn7G8c`2o`GY#&#<\[@q1CB!s;C&,k1sH,oR\u&LF;d=FLlW
9rFrh!<=9t!.k3&!!!"e!!&;`!sG5*T*''1!sin>1-qD';ZHgU!"K3q9;7E@UHCYaH$:0l5P5*f;%KI4
,@b5@H347H"!mC=%OE#3V%G#NAlsKp9hhOarW*!Bmf7q>JcLB&XoJKpWVlo,,Dh7rE&=Sb8#p<Jk5acI
!3#mk%u@<2XU2-:"L#!3MZZ=4)?'^\6`N1.Y`BBl"%-sdS5QVt*K_?pZWslFVl+9E9=Ce.F3su>!.k3&
!5edF'rF;`K7Xh5\9<$!0?jLn!$DJ\9heV^"U0X8\[oBn]R7E+UPuoo?b]<i\A4gm9-1&2!!ELI.L%E/
!.k3&!.k4&!!9pO4g+kZ!!*9WNrXb3JcLB&JcLB&JcLB&JcLB&JcLB&JcGcNJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGcNJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGcNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGcNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGcNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGcNJcLB&JcLB&lN$qhRK.p>JcLB&KE)$']`Q'gN.h7`!.k3&
!1<fi"g8#I`:!]B!.Y~>

%%EndBinary
grestore
np
grestore
gsave
28.08 333.559 mo
469.86 333.559 li
469.86 300.439 li
28.08 300.439 li
cp
clp
28.08 333.559 mo
470.16 333.559 li
470.16 300.439 li
28.08 300.439 li
cp
gsave
/15 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 33.12 9.39635 231.932 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 46 
/M[614 0 0 -46 0 46 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&JcLB&mf3Rn!WrN-"U54%!.k3&!.k3)!!3E4!seu2$4@7O%1WX7!!<H:&.tH5JcLB&JcM8?%MBEW
'GVAc!uDdk)%mi,pAbC:&0)]3*tX8/JcLB&JcN%U#n\9^"<es6,UFf:!tuIu-n,`;%hBU/.kE8)0/,*_
1,JM%JcLB&JcLB&`W-)t(H",M!"q4=3&ru[-3F?34?YkG59g4H5l:]b5sjE.JcLB&JcLB&g].IE6j#kI
qZ$j[2]5+V8H_Z^!s_Ij(JIO10i#gj!!%TNJcLB&JcPBB";"@*;,[)f&eG=3;\W1I<E<.%=BSg3>[7G<
ZN,RWJcLB&M#[Wb?suG%!;-<r)Id2e//g):!!?d7Af@9AJcLB&JcMDC""\(uC$5Qq!!I$tCMXK=!.k4&
!!=0W6Q5Or"tUu@)/a@C`;kJiZiC2+:iLF8!!I=`FEIWW!.k3&!:9ai.h$TF>'TuG&6sL+6UPhn!.'!>
,[c%LIgiR^JcNpn"(He32!=o?#7g_5"(P2M;VqJ+!0$s^.;X-YK)trO!=rucKL&7=HPuka2hd!ALkpnF
2f;<I9oP&6NfScsScF?BhuEitOA'l]!!sPJ%KHK5$]^>[b5_MBJcMSH'bHHBN?g3@Cg6sWP66hQMdU)r
2jBU+!s^-<097CpOEC_n2HW7I1l)-`!;6BpQm[9,q#LF"nGik+/M$l%!LX%YS$`6J!4r45%1Shur<"7%
Sf]PV#m>]5IO1X<Tq\<NU]gpuUK*>K4obR%E?h=`Vc**dJcLc1!s,>pWVQSs!!`^=lMq$=3\m_.!.k4(
!%JI;X*$6OX8i55'!2793*r>S3dn.e8NE1WY@2uX?6u.?)gZfYYQH1*2uN^[%pu4;Z%Cj5JcMMF"(,&:
ZM=J%A@$XP!;lg"X*m$8.uXI[!:Bh:%QCG21bPj0!"opH"'%<eU8'btXtrX0R2W8;JPTSuSPgDQH76!"
,qq:V!!Nm?VZa8VaoI"n[f?M;<FN3/!!6];Hg:Y7X*m$8/+rsp!/(=QD5\Kk"$m^0EY*hS3KCKY2n$,F
8r^:^,e*gb\Zr_33?J,!":p*Y"'GF#%2!_<M^M^/!%N6*OFhJd!.k3q!!BmI,]<DX!ucm-0'`K?>JC97
^u59F!1Elh.\Vn$!s_Ji+qkUlF2@hU"Y>AE!s;(#6u;o(!Q,#"$QT'E"L>rJF@Q--%W00VBG2#uOXES_
V*rAEWrR_OirB2m*sBZjq#CJAO0ImL"q\m;8BMGRc2[hEJcN"T%XPK/BZg]V3Wk;abbMi_r;[9<[XeMf
=V1W6#-J&9*W#g@)o7))M-L&Z!!a"+(^!IV-_pVB"Ja8fW=YBrJcPWI":o6JcXlnP!ub>td-1N6DgVY/
Ci$T]JcNdj#nFdFBE`5"WJ?K4!s)6HqZ%$UPftGsY5eR8IKQ%Eq>^XL_iB9cqZ%-F1s\c1UPm=?M8BTm
920p;^aXp:O8oDnEthCTq#CE-!bPi\kl:o!Kbm>0di,"^JcOO*"=qt(I:N6V#C)G\!s:9?&,Q>6D3JX)
3"c4YSk-3_!!GZ^8dV!a!"gd4<[AH(?P9HVf$)>?Mks0Zmf7q>V>p`1eMTH!q#CNu_ZNbUmf<1a"tb>"
U7rk^O8sk4n,NT2XsR!pr;[$5L"Fp&cF`oQ#nhaj<NZqd9hgN?!!NtC5rF2?qZ%3eHSH<a]DqpAD;!U?
""%'*.GFiS!4r45fQ0a:p](Dg_V1@=!!_1J8P,L+&c2Q[!/:IUH9sn*qZ$gP:/3N8$S;/T#ofq6"4'kc
"!h7J!!Eq@"&Q/s!!O"X"#\kZrW!0A)V?1g<8QNP!.k4F!!*UIh#IRti(8Y^q#COKR6$B0jo>W);Sp;/
Q7*=-!.k3?!!?[XBMSC("rnV=8eaH"qZ$UH#:R/Li@`hl?hXO(%\FS0^0ga;"tIV\">tqGqu?sP]0\Bh
C)^Eb!0$sZ%M/=7k5YW7\4^U`p](C%g6R$F!!`rt5GA8:Kb;c6!!%TNYlFkb!fMm2!!WlA]:C:F#l4N+
2jk#a,"FnUp&G.)7OJ6?3"Yre"q>*GNW`Hqqu?sOT*m]b1^2m2!.k4L!!Fm\?m>pP!!B=_Nih:@#6=ji
3s3'/._Yn7!6,!A)aB@Z.JWrH.8NoBjS8c[*5)KaLDPI5!!EfQ\lR_b!!WqpG)eTiAGlK6!"Etc6)$o@
!K-s)!!+#M`W-+qV0idK!!Ef\"!O&i!!WIj9EV#0.]NK#!87DT@^%+fp](G+V^7d9q>^a4[KIDO8m(6K
!!I0"-De`Y!!NiFXue@pqZ$g3WAOb[NKWr7JcOm4!=fX\!!<Zebiea$"6Nnm;sOGU!!t*R'MB4OgTh#g
R/hg=mf3G@B1sEB!!EjtMiE)Z!!^*Z-:n<kht6sP.L`.2M>7,U%X;V&FHDU_!!a![kQ:o6Rc`Q/JcNOc
":_oQLE$$h":lML9ul&i"t>7S0oNoe!j3ClK`Hf,!\*#+!*T$r"<=:"YW)CY#:sKj!s;.tD=ml3!TteN
#l+H)%afeu;,Nta!!WpXP!B*c`QS=6!7UuN&lXaip](EXLH9&%!!k'Hj,F-f<>BH@!.k3>!!<bP5n!De
":lN2bc:R@"98E3H&)A$!BV1l!!NjXO#9$2q#CU.]5p8(^B+95"qE3;0d[Yf\,_*\lMq(t%35S#%f$)-
%5\1@MV.t5D(eEDkT&7U!!%TNY5eWB"!R@<"C%]pVfDP5"q=qr!s>;8o`,-q%oPY,P5#"\/=A@Q<iPrr
"E!0$<PtO2JcGqd]VSS&p](C/L.[Ng!!3BT)RBEq!5nj=Rfdd+!!Oq3"'*k^q>^OTPPtXbU+Gp:">&+N
FI;k("V0\%ZqGcHS,<6i)lo8Nh(4QdQiI:?Wi@CsXS;bt@fpgirW)0_!s^Anf^f(E%BL,E!.k4(!!Ahq
,]38U"V-/Y-6[=(!!WpC9`kJQg[kIL%R[KYbpiGg"qI8tTEJR%qu?k)e5VE5p],mGXT/MEYcn7/#Pe?%
/<Z"UkPtee!"O<=VlTFi"=p04KlNR^JcP3="5<o<MY7#Q2d$5rdeNkHZJu#hb\H_L":o6%?pFDd"V2+g
g(shg!!NV/'.'K-j8ac3kl:`'/DU:0.GlEt11U(Z"6N]nTB?1W%Uq>]..dK?)DhQQ"$)'i!/(=Q]J0GI
M=poQ%`Tb?[k%:T"V3El"#6VB!!IOYM\R]8!!EiW(Nd[p!!F5n3KDJ4!.k4M!!*<6h>da0CeOs7L^s4\
!s'Gt:?MT[%U8!gkO\`Y%t^)L"$$GP!.k3=!!=3_-5Q7S"t=0ebd[WQqZ$b.<s(MJnc/e';PI/SpAb=+
'&uR+qZ$c)asNE5])[E_mJmDXh?-JHA,-*-.UP8GD<V$(#7k<p'WC[)#S+/UV#s7(=Y/;-!!%TNY5e[+
Sc^82!!NjNg,blWq>^\=XTKo$/b]8C!!EkN973B+!!F6]BNMD8!!EhB"-(g,!/:IU#)Ptr!l;\_q>^X/
;U;1Lkl:kl/B;khPP"n\%E=UX")-09_Z58g_uKok=T_BEo`,*qdRlMtq>^[0-j'QJ54S[W%NIH"b$=Z@
";"@']b(,B":'3CM`?duS,`aC?U<Ku%M&=8"=e4f9Y(!"n,NUs"sVZ@4nSd[%pu4:")-I@^An9E&FfaP
!94%[%KZA*":\8(<H[s7":i(dUPJ[G#7d-Q"%og0&G#l).]_CL55,$[#6lj*g&(gQ"q(Mg7f*1;!3lM+
ZH>0apAb:8V57)S!!Ec`_q3'3%.sT*&"LfF-98KH^&S0QD;5-I!!*QYVuZVn!tJPm0)5JL&r]E/oDf!p
ForFfq>^_:YQFu(+!:%R";-=pRN2&%":f@0[k.IX";0,c28nVWJcNgk"<51;(`W5M!ueV+LZndB%]k.+
ST=B'#S*>>"&"o^/-(8%nc/[q.\ZnH#:Y8b-DgM<!&ju`!u-"Q!!FclhN!fr!!a'J!s;1n;7uK#":jO"
Nl:Vk")Xo82#RCW%XGWWOjO/\!8IPVEO-"Op](F9%+c23l2Uttk&r&:_=dj6%M$l"""&tgklAHu!=iAS
!2]`"%s;Of"$lY^":m>I(Uir9""@qT?iZhr!!aHq<W`GaNlCPh"=cWLI2qt]!tU7l[JU",#)=Ok]E!N`
nGi[=3^=>Q!!@4b0`pV?"UB>j3kiH(!!aHgH-HEn<Zoik!!(RM!uo8!;R$58!!3D,0`D.Sg@tXM/YY,[
oDf"5#Vntcq>^aOao__m-Ck_F!;HNr/F#N`pAb=$>7.sBr;Zt*HNQ:@VZ;PR"tReVAd8;9qZ$a0-m]W\
l2Uqta.n*"pAbI//72=S!s;N/]E%6t!uo8!;Oda8!!3D,0`D.Sg@tXM/YY,[oDf"5#Vntcq>^aOao__m
-Ck_=!!=e;6':sC"onW.>7.sBr;Zt*HNQ:@OoV'R"=qSTAdA,3":ln,(+o7\oDf")a.n*"pAbI//72=S
!s;N/ZN((4&I/pD!!N?Oj%E7sL]HT<!?-[k!s)%$p](D9IS$@,!!G6o-Hg9'!!+R>r<!(#KCT!F)llq"
DYF,6EK?l$2uWd[%\FOl,5_Fm!4)Y-/J`$Ap](D5KJhuY!!Ee$U5T<T!;ca&)n_=M!s9iNj#=:E"V*'r
O=MjX!!I/_"$gAe!.k4L!!a"g1'9Q>(K1#.!s,_h^%24,%rMJ(55G6[/PQ-G!KJ5k!!<dUUYPSD":oVW
41kFk!s,f&Vrn&3!6G3D//('[%JTo*&lr&clMq%t@Ro%6p](U*)D7lh"%YsQ>5A6M!.Y~>

%%EndBinary
grestore
np
grestore
gsave
28.08 365.539 mo
469.86 365.539 li
469.86 333.559 li
28.08 333.559 li
cp
clp
28.08 365.959 mo
470.16 365.959 li
470.16 333.559 li
28.08 333.559 li
cp
gsave
/16 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 32.4 9.39635 199.532 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 45 
/M[614 0 0 -45 0 45 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
iW'2a!WrQ."U552!!NB/#mq%KZ2hZ?#QXr8%M'*_%heU:!tu@`(@hG.(Dn#.)uBU9"<@CI!?E6Y!;?Hr
!?W.$#l"B&+X/-V-2dfH!@A+#.&[-(!!E<O.M+-/!;lg!/1iJ-lMq)30JP==#Pe?++Z)&7#nJsS3$Pm5
p&GR'3A`QR4$5)2+TsA'4[,A9ec6!W-n%:d/jM]P6MCH^/42fonc/eL1C6N@qZ$Xf8c8qq9(2f_'2'?>
qZ-Qp!s'T?%/^)-:/;3^lMpte:`$25TE#*"78Zr]p](C4<)lH]!;HNs!Dlfu1\^qV+TtnM#qfC^:/7hi
#6Y04>7Vi]>m2og#tA81L]HcA$6]R\?jR?P9k$skpAb>+A-lgBo)Jpp#RM5X2>dFTB5%5M!GMW*!!=Ag
95<kp">"<pC`iWVmK!7fQN4Go"Cl::DK#:M!tu@ZE9mQ-;]B^VEqo\@!!*OMBaJm(-)^eQ@q0\+G[!R]
?=!qB9+:@kK)blp$@7%A+:ij#?O92FpAb<s-j`%Inc/e:8dQ&Wqu?sF:jtJf#qg_s!!4<7'CGi'+`D'E
JE[&c!6Y?F"?S)a!VcWs"G/d(m/R;@BS1st"Si$&!=!-B#sEu;oDl,r$>5)k&J%Ju#oPf5h#R?Q!<FC:
!"3:l&.]:1Lbsqp4c8t6"9:+^'fbaa"H/3FAMa2`#@i`B.2!/OHJ/?$%"/F@e,Y(#i;a!nNua;kp](Bs
#RQX]!!Xu*NKS!<(\n%9!L"E.#tC.Sh>kh$"9BI,?C(Kh#ZFheFH?e81/$7"!?j#c!3Q;1!@89`KS5Zl
%%%?CRJ$U_"DL8mnc/Z""*P]S./<iH',(HSFEZ@<">!+N4cS(o!$UV-JcPKE"H-/149>3W",i[k9CMoc
+Z,(6&Mek3!!j_N.2iL!@XU8X!!!#[!!Fi\KTL6O!!iUrSk9:q%j7LN!6"pI+`F"[;4F$T!.%6D1*?2i
!t6)9RdpF\!@VuCp](Hu!?XcOS,E?D!!E<K$$9P-!!**(e,YL/";=@KTq_A`"TSO8UFlrD!!XS_Lh1-7
'_q_7!?7hN#nNkk3O&Pd!!*A&rW!*FVc=7,SGE3l+\nsY#mh-AW_f>ggAh[+#;ZYnAkl)$!!`fu(A.Y1
'<;F/XRZ>l!DrFh"A"%R(p3$&nc/b.#o*sH!!+5GScGPd"_Xu-(apR(!!NB(#&LIsnc/mpB5a.EIXW+/
!!`P/IL-=&H"a>\$7pU!Z)7R&UBrEUq#CBq!Wo\@rWr`rZp;%'MiIf,!!P3+4V*12rW!'%[L$0Io`,*q
M?sV[j8];`VRR/*g&M:5ILish!;c`r!Jpfe!!GhR0"M)Z!!E]=AdZ0@!!aZ(BPqp7(DllI"Y>t=#mk/D
]EbP=$"J!.KW>@Z?3sj4!"^<O]nL>n^3LKHF:W=P^R9EE!/COWB4#?Z\,_Tg!!=c=$'=`Y!t6qQL#W.9
'9if#XP3^X'>Op-QKnO&!7(WJB8Tp-/GT8L1_pi;=X!A:"p$E%&!3h.q#CXC3F*7(%l_>k!5JR@+W$AZ
&&PKe#ql)T'*58K`"-h+`a+mk1QDbJ4e]o]#3PuW!!OOD^'RZQqu?g4W=PBn!!ON&-;=I?"onW:9F8cF
j8];`aU&\LgAh@T9*l?Uec::%j8]9=W@H*e!!S9B6q!lLo)Jr,#0[t0?2+C)!R:dY#nJq;ec=2"#pCuo
NXqh1#ot>j!!WJ(:C.PV2>mLX+Tuu(ci+4QV9l"Be,ZcS"]NeT%t651!!>b'*Cp#-"X+[Pbg<6d!!H4V
#o,Yq!:^$k',hC,gAh@"dLns4_#T&eq>^X!N?'njq>^["Y!b0+Vt0llB80"c,guGf#6>cr#mhUbT>1F,
!9aCg!RlK(<*Km_2#[IYB7L:Xe]IXf$R)G!J(Lk1#tBMR?bcZ`!!OMM4UIrqqZ$^$#o+cb!!XUNfO>.T
@/^-/!QbX93o^2D!O2q\V?#BO""[+V&ZYok!!+5eZ2attRRGj*!!<6MC^U1mo)Jo+.1&klpAbF!SQZ=+
KYj&B!!+5Z^B"34&-o@!#mjT<%so*/!!1Jr?j?<)$4J=i;Kt>2<)g[:XT75Y"X*s$$'?b8!!=AM#rhb^
!=[TZ#ltQ4r;[!P=U?u&(ZYPu+u_nGlN$GT"D?HqF;L8Dp](HuZA_G6%(6-=!M^M>MY[;V';-5u!<Mfm
"T\gi$8V\W!!ZB'OpMG2h<P%AB8XA&":'*J\V0ke#\'Bs)ZU"SVZ?;g!XpBorWrXJ3i8;Fo`,.=%=SU5
]D;L0!D<rSr;Zj!e,0LP(&\+9!T",Ne'm@X"&kQnceAF&+U/5jhi@aB3PAQ%KGrbtquFA0">&LBTMt^f
">#6;8n[_q"9AXW),0c)#%Jt/#moV"qZ-*c!?k4P!!4;gK_>]QJ^Woc":W+qIL-*ReB7uU!!RZg#mjB4
rW)ls!s.Em1]@@[+fn`O>D!4gOo57`!Bpf#EcU4@"9I?c4XSn`",eoFPjACH!!r\D\-WI`#uuRRkQ'$2
"9E$_)9_mW"D>%O(!6%I"T\g2&**oh!!Zqo&IAakXlTPu!!sek$"]Rb#mqM)r!<B6%.+$#%&9S^<=(G$
%IjGo!!"^Q!!OO`#mnP-q#Cs,TFXZq!$NXL#mlj%#mo2`rW!*F)d<WZ\`<_n+e;UD`S1@pB>Osaf)WA^
#m?Ct4kJUM#oP8B!9aCd+fp>'2b<iH"TaZ))9*il!!OMfjU#&nq#CX#!Qf3c$,jj0!7UuUd>?]cZ[C!Z
b<'V?#lugflMq1QHW1;UJrBiu!!"SC!4Dk1"_@uTkkG,g":5Al!!&nB#mjR+WsK)<qu?m$=pY]MkOnoE
!!<8K$/4,6"<g,=%pd'Qci=FS_[-h]DZPW8%u$am!;um#B9W]??2FU)B:]Vu!V69oMs1O2#l+H*+U&$e
#mhtb\GuU0jo>hn6]D'GDhp_HOU2=fL[+pF1p)7\$!VOXaT0Qc"Ck[C$%qsP%at^k-if"/#mnPXMcU4H
qZ$X?h>R]\]&Whn+h@tWgAh@"N<onXXT7J`%69RXNi)jWB1<1jJ6dK8!!NC1$4kN_qZ$^sC`0>R!;6Bq
'0upo?haU*(X1)0#r5e\!;$6s3B;F/#mn,?%-mlu(T=kN$+UP#[K,:e"Nb3]2jX1<%SmBY!9YU6#n_4Y
V?mQKq>^M/rWrS?irB/e#mgn)!:Kmi8-oTFQiR$a"<k2[#tt6t!<Jnn#m,A^VnW37!>5\dMu*JW+XIZF
+nPa;A&em[.Jj)O!!%qO_?gMZA`&^P#Bk:1]t"FU4TWs7lMq3KMS!g6/k(+^UB(&h"9`]NOiI(p%LEHF
%=nflGr5R%QO*u7q>^a';$dP)BSZiS!!>'2$-Ls%!AXr]8s95X+aj[83W/pYR2Z#1!9sSk1r94q+XIY5
C\e#5!FZ9joDf#,;@+ALq>^d%0Vi.a6q$*ko`1Wb$l@aUHN?!R4UFT+,pDaXqu@!VNF3;(\;A*uSH&g%
apCOa+o23;!!`f:WIY?j&LIDV"*k29)u0I<e-ZO_ZjG4C!!5h#H.i6"3!i"?!2]_t;$kJD!""OM**gDg
V-lL4n,Uu="<j-=[4M.S"5OJ8;tU+n!Rh?Ch>.*W!N&g&$$=M>dbb&4!<0&"+oVHH`SkV>eA\%:lMq49
/N>mG+GFu!r;ZhD"4JP>+fPGFA&Af`PQCFW&.](:#ml2@+TML;%gd4V!!)lr#J,#!#uM"#+m&b,\d9i*
gAhAo#mkHcg&Sbc"4@J^%f-/3-*RfqTEtq8f3R/3l2Uo5*DBu>!!@rr$*3[u"3(WRh"h!TB;Udt*Tb\h
!5\^@Dej_,/fMP/l2VAD/V7[O^;@/V!!%nQIKg!"nGp-#"9stp@KlH*!cMufrWrWC+!LU`"Ek:^L]R;O
!fmj&rWrUK+o23+!!KG8#sKNf!!T,.$/OD\`W4Bd"0Dk98+logY2-So$$gSd:!*G=!!(4LXn_r!+:6,!
p&G7>Do`5%UAFop!@8$Y$6BAU!!!#O!!dFXHjMDD_$'$'&1B,^BbeA!Z2jq*MPYb+"sM_$ci=1QOU5J#
p&G/4D\)gR!Z3"&rW!(E%ge$mq#CJW%hJXG!HoXK!!055!XV%6g].MQ%gh(J+g:t0!!B>0#tO[h#d3!n
#mklu9hi\/!mCtQq#CL>$-6WS!;ca"+`GF.(o$m-"p$"V#mq^WRfMaS#/dfJ$$>!9kl;6X]h].F&rC9&
QB<2,E-;9&!9O7b@pBNN`rYl6#7_4S#mh5F!WE'&8:h-S-mABd!]bperWrVF!Tj@b#ET8K!Ug$V!!O$(
$%74&RfN?d"L/7>jrsEu#n3),<=*Qeb[_m?!!@'QOY$>/"6L-8Sb2scFpSJ&UAFom!<tFg!ZcdpK`DDZ
!34F*4`oP?!U9Xq'8?V'#qAn8D_!dX%p-1?ZN0k&"XY5r`$QZ$!!ZD%#mlW&!W<!$P8O\:A+os-0/!hB
#t"aT!!@?S,ZEFt!#YkF()CPK!!QX=#p-;opAb<r!!Pl$rWrW<Yp%?l"O]%36Qu:+"&oS7!VQKrQ4F;]
Vu$Gu!LCe5)'2WB!0dHi%)#(?FFMWN+sHa^o)K4&UVLGTK\B>(a2^Rd/?SsVMhqsK_ZBK3#64amRL]_0
!W2p#6Q$1kBD2B1cH\]d$/5LC!!Eb1%k]Ef!!Ila()CQP!2ol(%)i_`$&p).!"AQ$#]425iX(e(k99X$
f)Pnu#spKF!!=Yfj[f(F"<j`NCsMkW"Wo)u&"!CM!2ff&?dK;i;'<V-+mK%1%<gMp#mW5;,phUZF&UKe
"X,#iB4iCK!!IHc$&)m]!!Fo,$0!N5!!Lsc$)7P#!;HNsA/tu2!Tj@b?<%:<'AEKif+0,PA(q!t!!X7G
HjL+.:At4qhS2P`p](UpZ*Aol>Nm@O+m&dl!!?LADD:kd"*b-S+nbm=Kb(]8+o;6D1nb3^=/R4Z!4r4;
#W$p_$#U6]+sH7P$nNfRY7DKr,_QKF#QaSuhuF"n5<j:9^p#BP!!VP%$"^1]o`,.3/hRGd;u?Uu,01'K
'D)8,gDrm"q#Kd^"e6G:#mLFc!!L7Y'bqD%!7Uu[kDTrY$/17;!)D`e$-6"_+nksA,sVtIAPChZdf9A[
!Y6S#q>^U'.O6S=!!Lsc163UU!!WiI%g`u1+ft_E!71]Q%#mVn%oK"b7gC4'!!>69_%lkS".FuK+lNFs
!!7o17/@2kiri<F!!OpI%ggWnoDf&$.Okb5!W2p#A1@o);t^1p(DiGLRk3Y$!SnUq#mnRLg].L['aY2g
!O2Xk!":\@5XYnb*hNH5!.,:V#m>A/gM\81!!j%Qbmt+>^UF73!!8o3+m]129h'sjq#CMJ&)Cmo!!]0l
HjL=c!W)j$1aES<'nK;L!9*tb?%<q%$%1NrB4pN1$O<;oS1it1*B0@e+l*,#;!:skr!<Q<6k9S1O[B+*
l2V!s>7"jM+nPa;hA$cC%/^)/'B)=jP6(@W"^bUD$!(!d!!RB\#mh`4n,VhU"YD21$.EOX!!"hk8P'p/
$,QrK!!%m7#mo.4@L81K\d]hY!!nLTb@Luo)En2k!!4R.8F$6X'Je)[q#CNP%rD@D!!ZuniX#pK!W)j&
';,jB*Jn8+!.k4E!!s+m+:ebbc04@Bl2V/F0W2CLOU3%\D,]Nr#dqn3G"bus)%ZZP$kK&*Pq*n[%g`Ou
0ELVBrW!)W'cFb;o)JnZ6pukFqu?kW-OI/<o`,.O1DOf%+lr\)%NYNT!MUan!!!H2;$dOn/=lhW1uDkU
#uSnq!<<*'E=W@f9rHb"%ge@"IG[uu!!eELcOU=j?NKZs!XsAulMq!scP-*S":.I'.09;G#)4T6$-4&/
qZ$h1I1HW)l=9&YMZ=#>/`;]s#raeo!B!g>!!oYTl5^l^N6VIf!!O\])+5JUq[!>7at3Gj#7+`Y#mkJq
/FEKA8E:9n%0?)$"aYP&$(!4@!!GM$#r=.+!!P3dZp[+lj8]Cs*T@S9BE?oh"_Tt)#o6)%!3ZAB"K3FR
%oKA5!<<*.%N,T;V?$YsMRs]9$!0Vl+o)*CMeKp^$07F_n,NJC+mf73N!doFq#CLQ*E4lm!!Z9!%rcJ,
+o;6DB?M;%&">-!!1j/lM\O82#m4A`"X3@8q#CZFb:X*S=[t%.!!:Rr&,HS7jZt9qr;[$FB)qu403.uX
!d4\In,NST;&SRKo)Js&F9r92A,H<0JK5'SA,H?(!!R$`-OGt;j8]BM7,tulb:MEK"<89sGmrI.`;gL.
b;'AZ13XNX!!"?%'aZ,k!W<!*%)t),%iFS=:*CeW!!c87:Ceg<Q3$OV!%e*LnGi_/(GZ;?BDMT2k+rUN
;u?V":cK?S-n#,n!![(B.L?W^MnK+r!!4]=-iF>SBgHed;s=8i"PjCk$0?edc2dnFmf3OA)$t1a7/[Dp
cjTmS+oVKPU;1(d!!$lW)$pW7WZl*I!!Pn^7)#2mo)JrM/dVhp;u?UuQp_6r/G9&HEYT<+"SVo`!!^[Y
W0A$c%,:g_Jc6Yi"OR2N/0Q25!:g*j/0X?[#E)6:$"^`\/H,VRD.XXlF?X@6!"(QN66-A9S&WGR!W)j%
80s4//q/[jhZ*e!E=W@%!!2rs"k#.:$,]^?!!Zdg&*4l6!W)j%;oT.N7&?FTVuQet`rH7#k/>1KrWr_G
TMbspl2Uig&,lk=).b^rDZTS4$OEeL16?M*Y8%A\-3Hf\S6Pt!(L!q>92SAV>n\C0!<<,J(.JT:1:3#W
A+fm+;_:I,d7Eg."Uce[<Lj0g!!JAi$.`b`!!O1u#miCYirB+i#m=:%;04#;!!JN$'a[X_!!3@;BBoNu
+p%TAnc09'W0%Bcaqkj;!#$m-%gpXp'DDJ6%G2X@$!CD`"0;P#!!f6sj:?4PBP6<)"h%E2$$ZUM!"U8n
%g`Qa!<<*c`'anoV]km:#?0#"#oT,U+cucZ!"Fi:.r5_.O:MY,WC$`"li7eW/dVhu%g`PO=2#GXZ3[<S
_[@:uO:(sn$q*Jo$#YK1!!*,G;D.qT!l:3mrWr`a-ke-T!"&]+"6D!C#mme@;tp=r/<:na@0H-$"_/eg
WMqoU!!IV0$'6k8!!X+n/d_s-BB0$u)e'-9O+[fK+n>X"!!UAaF:"-3U]:VE%M/r8A7PQ<#MY7L$%\Lj
+nbmC"I@5u)&W`u6#%tJ!!kSu4=]I'Sr.1A!!V'e&)>GRqZ%(5/dVh*$igH>6j_m%!Vl^"!IlR*7+mLo
!.k4<!"0Ls>q=+8'aY_VQ](52&dL"A$(>TR9JR+b.T%tBjcO")rWrmYf;&L1.LBQj/H#PO+TX!C*W??N
*j;ab%iIVn%/g/2.B?m1'a\j_p](<9"FL`u[Su_s"WM.^S=GN8!!K/1$/l<e!!]pN$.$qq+liV/el<%=
#A"2nA).+gWe?$3_^qVa#"UNW$)rturW!0[_rV2%I3/L`!;um*'=Ys"Zl'1a3*un6qu@!+]*\jE@33Eu
k5Y\7<=&tB;u6Oq9kF;1#:T[K?Ub?*"S_s$!D+mM#oke^!.t7OH41Sj!":1gAh"*7l9'C\!":D3/j4,5
V^P2g_GhEN#n)B<510j1'.\_BbV8el!]:T$r<WXF9Z83M!Vud"LHu[7V]km:"Uoeo7Wp?Q!!%cW4UIF?
!W2p#YuM+8A,$$.'8\2C]tGuW!!ptV#m_sk#m3`S!!NW>&.*hCnc6#s&8NX"I\UNU!&QOia9b]R-irc:
$]Bpt1Z\oL@?b+8!WE'+!!U:$%g`Obfj65p!!\`j&(fE.+o;6J()[DbkS(@gFMPR/!Vl^#+cSVk#oE^E
c2a"-#nmNdC_&"K1X6$u!;-<oS9,(3rW!?`0[cj.-)>_IV]m<pr;Zt1a9h'$pAb6u5Z.Fc"_,>U,"Mb3
!!EKR$'d(>!!Wi?'Klcf3Ud"OG?[5Ydea"I?nPn1!W)lr!!PPq$$$F_iW'6L$4-l42@l9;h#IVHKS0Z'
%,Cp+!"^K)%r@k:!!%qr`MF)BPbK>e!!t@A72ZC=jQb"kr;[3V,r:]P#o-&P,pd4#!;$6pRhZ63=C_4.
$l<dfM)@iE4[_q"!?q4<#0n>%$%/$>\,`?*#6`U>.LC"C:@A/bd<#\mquH]r!s&f]+nu$>J-nq?o`,+A
9Nt^3r<WW_JL)Kk+oMBCI20+aqu?r=_c7!uY#Ffi"P"540JND)"9]W2Jg0si#)ghKALIQ[o`4C[#^mFr
#68ud$Okhk"fsI7$(_RH!8mhgV`PW-ZUb&rMb?N/$!Vtb!U0Rj8>D\K1(O`9Y#G5u$5Y"'KdmBD&J6m1
mf3X5AI7#p#9a'Ir;[.l<='s&$Zl]l,5)!@VlpU;2[0;W!!!#0!!WMB<t?e:HLLn;d7+FJA*j7"0.uKa
!!)Zl"fA/;&1S4h#n!kWXEnLZ!8iHm(]==<(D.5i@S)LH!!Ke<*_oK.!!F!9#o#r*!!JL5$+r:V!!3`C
*X*_fl71`qh#ITZ-RT3b%'fm-!"c&5>7&)k!!(I%`"*A_M#m_?!!l=H/Yp;qE$]/o!!t3I`aH^q&#II-
n,NW\6j\``BDMT73unn<?'#@jR4S.6#QOi*_ANXpR8]"Dbl@u"/KbR8*%1jY!!K)\$*YT?!!<pg_?]N0
"C4<-$4m(A#MG.O!1u$.Vu?Z#1uScK6rFH^!!NTT$'YPqqu?j3&'1%;p](H7@cE,ThuF%m$-,%+b<6nA
nc7tU"LtrJ3dRb*$R2*_$)K(`!/o^T%g6HTIie^N!!WS_F9s3c8GW;m/>pVNj:CA:_\;VA"P>jDW>G=0
#]'fHLWBeX"9J8t#6=kX>6thJA+TbQ!;lfu$on@Q!!k,_2@gPK1C.L_!!@0N:X\S0"1;^]VsOHe(W4RP
.fK_b=d^rE+:/)M!!(J^#mlaumJmE-AI2C.8H&Sm"<5DgX#]qT"H.[X^C9!"#WE'V1]T%?cPPC;"TW@T
#nAtq!"VW3C_+$G8-"Q<a9cG6h$i`Pr;ZkV!VZR!:r44Zi]:uYq#C[I-@lLED!Dr?p&G6t(^Z9.!VcX"
=q;,r$#ZXapAbEXisH)!PW@S#_#Su~>

%%EndBinary
grestore
np
grestore
gsave
27.48 365.539 mo
567.48 365.539 li
567.48 463.039 li
27.48 463.039 li
cp
eclp
27.48 463.059 mo
567.48 463.059 li
567.48 365.499 li
27.48 365.499 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
gsave
28.08 398.359 mo
469.86 398.359 li
469.86 365.539 li
28.08 365.539 li
cp
clp
28.08 398.359 mo
470.16 398.359 li
470.16 365.239 li
28.08 365.239 li
cp
gsave
/17 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 33.12 9.39635 167.132 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 46 
/M[614 0 0 -46 0 46 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
dJs=L!X%Ze#Qt;8#7(VC$OlY-!t>JF&*s9"&.oNg!!)Hf";DRW()Qre%iH9)!ur-u!rr<B*uGh;+mo=6
+qYY:,UE?h"XPK.(afC[!!F]!(FfIC!!4Yf/-RU*/ftB6g].I10,QAEZ2j\#%jWk_#;S(\!%9W9(_JS]
!UB^d-j02D#;nCu(cXN:"8Mp&4$,Pf2_R?A"82]u*BtB+5m-l^#=8Y#6Pr3)7J?cd7RfNX(e4Xa!9X=`
-ijG6!!i]2#r`\C84bE,!!Gne(ebn8!!<TA(es8q'M^#8:Bq^R:dIr;;Cqk_;`@ZT<EAMf&6BHG=^"u/
!!G#=:H)K]<^lib"C+>3>m'!b#m)as?75dt&RSr:!:'Uf3&ha`@]KJ<<b#YF#%]@d!+n1q5\C-U2$<.E
!<bjb!!`mF5R1Y1)?fg8#APK!#>]&*./*]EC`aKAD>+#70j#80DJsLg!!`lD&Ju??E<Ge4JcO[.$Npi"
:Dap!E\&57>5J:'F*&38,:MmY"Di2tG&ZXF&U/I9(`5M&H$TL14@9s1GS:)F!!@RTHo:m'#m>ZL(`5Rs
!!39"!!H\+4Y%3'!"+0J(k2YgJ:SOF"5X"]>=:jrJgIJu%T\3H#98CF!!$h+<(&2:li?JS#DE^f#T/;O
/bf;O!JlRK2h?jE"8Mp"'oWta./*]F"HAEVNs#+V#9cD=#8i"""5Ns/!:g*t9n[mQ(cP*LKS3)GrW!-p
:fnQs-3NT7"Di2t0eMPg"-8Uf#Q>PG;\+d>(f)tF-1([5P;`N,&,lP5="0CO(mY3t!!F3.(me^h!",*]
(dURj"@!`',i/M))FQt1RVhTq]DrFBRm../Qn8:<J:(<`1]l8/!1X7^=;WfaITlOI#Rm;j()W=/TIp$@
"biWT5b_HU!!<=,>"//c#7h7K(`3LQ"NLLt!!E=-Ud@!M(fW7G#(37pVAqr?R4_P+!!I+2(c3Q#!">bC
<#?I/9rM/1W>$'6!"K$F(d<u\!#.s/(`4'Z"8Dj!WZN(U<o3lZSNRgjrW!%F(j@Rg!!QpL()Rc3h#Pk'
%g3%U#D&rW!!":2Po)Us"4dGX'S@A1#XYYr%/Bl*-%h==";l8Y5m.)d"rja5(pGDWkl:r!Z'?.2#FHpE
!1Nrl">u]NZ3^4B!sr*Y7Jd)T!!I*N(mHo=!"4Le#8j77DAZ5U"9e)l#d,p"ZiL.,'bUE^!OZ\:!!J0B
6X9fa!:KmiZNl4mrW!$)(l&.K!!Tg?[ht,Na8kB'"b4%-'"MlY!!TS=(d`oYe,TdXU+j.q\k#;>%/Kr?
.#W]f2gG^9!<<*L&K&,'70"@@]Q@[W"%6!r..dKES3g0l#@:^bRfEEgXoJn>D]&cb(`7%o;$om7>3Q"j
E4o4n/lq$5#VIkL^2$\D"U+,k#etL!*``7@Ytt?9!HK@Y!!I@0#Gr0l!!GS<(r.*i!!C%SZiT"`"fXXJ
(ntuT!<)s.8jZK:$7,ZPO+.Ua*2b(0!"'Al_R3@PZ\kuk./NuX,USOc:Mr[*_mK_)=U]&I3)<<UrYP`:
\%m(Y!!O`G(`7X)rsXP\_Z1,SD]&cb(`7%o;$om7>3Q"jE4o4n/lq<=q#C[Q1)R`@<)3Z#lMq4*FVl0#
!!'9"rYPZV+nu$?F$^,/'Aicm5q<ef)u]g>_&0N[o)S+W"fXXJ(ntuQ!"MUf<&b42!!&(0%=&qk,lRen
!"'Al_R3@PZ\kuk./NuX,USOc:Mr[*_mK_)=U]&I3)<<UrYP`:\%m(Y!!alI(`7X)$k2P(JcOC&$Oib,
;$\!]>Fomf"6TXfC3UR.$=`)s#6ZqD(`4&Q'`7t"!!pLY(mmoQ24[,6(]hPVp](Gs&K&FfhZ*d39,J3K
rW!&>(rcU5!!"/@(]YTG!!/Yo_>k'-a#?YW+Th]E0u6gE?306ikPtu!21Cns#<cj<aGg?"!#R+F0Y1%8
3P<"".#gQY(dL?"GGiP[(C2A_!!X.L(DmuO)qG"@!:'UiE5TSa:IC[1j8]HSb0(V,5c#\+kl:qs&-`@V
<&PES!!5h](^3]+bfgA!rYPYS%/9f*]i;DBE8LWt\Vr9jr;Zql(mY3Z!!&Yj(]YTH!5JR<SB*iD`$PB_
"jJ.pR<o"`!;Z[%!R@WN(`53NcR&Df(6?h>H!dsW-*"cd(mfr1,pWTrX#LrSq#CU5d<QQGLB50jJcH)W
!,um<@8E/e)rpu#!t.?l(]i&.lMq1m>:UO-#Lfhpkl:]+rYP]SH$T<)!Ac>'!!+@;!Z9Erh>dYR=HI:r
!!Ao3/8a5D";r$n`D,+fec5l3^-*7M-2mlJeR=`2ef2[1$P*D<;&:&]P?A"g!;um,<fPR-<"[^p#9RU/
!sAK%"9Z%K;??Xp"sps.(`8`CWW81^"^mHlG^Wci!:Bgo719QsP=$2>IKW+.!!i]n#uh`YDPC>!!!sU`
(rnNa5!IXqrYP[iF85e=NAqan%.=2c!!?%\fjOdZ"O1^!8M/d!"=ZJs<'eP)li7Ot^pb+M9`k@q<niQM
Z(;'<!"'-bJ??C"GoYChE;T\C%)^Lh(^Ls#YU'DL!!N?&:d)I#qZ$diPo+DR<g3Ra!2ff"8o&]"']K)m
70l=NVoonogjK=q!!=KYZ[)Ne!gsDukl;#Bb6Z>oDu]m`C]5.OdP^h#"#Le0Mqn@9Hj?hc!!WE'O2Vq>
"Ps+b8OPr`N3Z,gKj(td!>JiCDA^(3"9&9(h(fh%S--Y/#SV[:R2B&RAhEo\$#gT.fG>A0)1P]`!!B[@
6;@@X"Y;nU(bBP%!.k3`!!HKZN,'Hj!!l>1(`3ir'F[G*!"Ao."!o[E#FR*1#8l;Dkl;$k+*`;9!!EEZ
7/e#(]+b#@"=04=\L$&3"4J*"-2dfGdhmN9o)S+W%W!XG(`6424h&!eRN62G^&S?OX?[WO=![bF"iK4\
JJBd4!6>-GO(Nq[H-7b1E;T\B"<f>8<!OKt<`]+u!t`W\62^ce:,j(-ASpQ0JcO-t"FYMoAgH:7%DO_-
d^fZ#TAX]i<cCM)!"B']^-`\S8Sp0p(n!tuqZ-*c$*Cej3WK09h:#@&(^&\^)fY]T"E/)7$No5c";@CE
H6rLi"%X86E8CQr$B0r>(^G=&2[D?NU'/=5"^Z'`/#OZl!!R<!6TsEJirIj7#UEP%:Ddu3)HQ_8#6A,e
T68ru%/^)6?#(:aD#aPMTbnX!C<us4!9F1`<nM]52;eHXZ*uD$EG-+e(`9s"*Y\_[E('kG^YsGS:^^G,
*POlXbS9=B"5Hl9eH>k<g"@2?(^#.BQ5'8t"=1dl.Uq36%!Hk4XhT$:E'_;WTE3mL$ciSZ(kRYlUZ/s;
H2JK]#GDJj!sD$p7EPT7EH/Kf(CG6_!!Z0M#T/\o"3po9!!laAVmB?%1>X>S!!WN+%j;'E7Jm,n"1&hU
!WWpu2],)d\c@<^q#CM'9,7oo!#\(p(hd:W!-,jg#R:SOZBj?O20%]B#@Aopr;[!n+:!jD"7-!nD+GN*
@W<hm:]2+6(IJE?;C2;B!t2p^>QAa+!#>S]E&Cp(aiU2^Jfbg_+K"99Eg7I_,i8S71P$A[+,C=*E!.F3
cDM_j;ofaR(^h58AJuit$k,Q)!(HY_g].nHdaFCuWBkJ'!!G+o(_S%o\c;b3M[&4N(a%Y[E:<i78/T65
AdJ_[(u8Al!07*__o3IJ!r2i]!!JH\S]V!2!!L&uOLb\o(]t&9W[7NB"N"L_$6/=3#'L3^>g8g8q\T_R
JN"DYG9m5iRNEM8mJm8>M\0c8($Emjj3j+&fEleI.k_K6r>5at84+5U5m-!E"\,s<(qVj+!;cj%@MRi\
(^L$W#G4+@-3F5LE9%#i!!XBR6pq<V'`A"8:-TR[`#H/c"sI&7Go&A"o)K1!!/86S:6pG9(`9e0NrT.[
V#UX!Hl11NirB4%TbsO-q>^mB)mg4p#eCfWQ+Kcd!!KID(ii@;!#_dL$*He-&^/?'(`*FgN)UW29>;a&
V,Wm&n,Nc7't/43_0B`2#PJu;T;L]+Rg#N((iCs,hZ*[u\Gd<G>6FEr$P[EMaG`&:H$RG8,h)f!"G]A^
(f?k)rW!+l;\r(X-+*^X"N*E*(R#a_o)K)cRHWmQ(`3kA@eTkS!4`(3hg+-,irB1q#V/"2!!Z`&(d;c@
V?(<DpAb>1#<tf_m/S$P6\:[i(iiJN[hu\U(ge%S#8l#8LNS0-E:X&5'G/3'5<&NX(Ji"@Z=1O<_Ou*s
,E?8=I2r@kH>XQsX762X!!P00(r=$Sli7;3b0SBn)$L%0f)Q$Y)J^1*CCgXJ!!R,.:DY\qoDlZ,#B1C2
*sd!C+nYgA)\!WCGo.Bjh,`J7JcO'r%&f,g'*&#AS#C!WS.+cb"C;]X[L`06"[tkGFZ4a>!!FZV(jf`j
!:g*r!IP`.2E_n@&J>!Z$l@O4-W@Sn]iBGZ9ORJm(F[Y]%6YP(68j^QhBRN+Di7=N2%0Tj"8i-''8JdW
(u$"d!!+Mb!uTP;O6?QJU6E%n'6$Co!!`XCiD`'dG:!4g"p>8T(iml?hZ2+*#:0P`H+2GK./NuJ)[l]c
7TfU+!l\FIb5d+oirBPC5a.*+;@O5I4h#R`&+9K$O*hc]UA+]l',(flk"YCH"HFuL%NXs;"VZt&4u*uP
(_%:<-BAo(?PjV":Dh2*o`,C]H\OHrDVs:hc@FFRnGifljNCL>(_Bm.!![Ll(`6I]"7Q<b!!TpVFGKrd
gAhH6%9*T\+X-da"c.C?I'.G1!9X=o";<5L2\DUIA'2rDIg(/'5<&QY"$ePT7C<,I!;HNu.R:\5BM/U.
(]mKTX7-)lB0[<9ebK1L"2M^](fG5A!!FV#<+HC(!!UqU\p8iir"oT&`"dJ6#Q>PD5>N,U!!)`n#\qR*
(mU;?$RG-?#_coG#T+E%7loK,"b<orOW>J'!"":M96Ztg!Eqnli;a$.Z;ar`X8Dr$'QP"e)HO0Eq>_"d
R%I=o6PbUr?XHp#N-YC>"5eMP7@sR?!"7[`Ps@JL(r"@F`[_-.#VuMP!!K#6(dL^g!!QZ7ZP^lgn,NW9
&f@BI>4MY3=rU2^9,L%GBH0E.&X?HO4W'-*()Wa#4Gb*R!!rc2,-aBM3&u.-r;cBg$6,IT&I4R-hJ>mp
h>d_33#Ll0e`-W95tlhgbLTf0-j/i:pAbD4l!GOs*H:rW"Vffd_$)*a!":85.W-)kF`ld+6l6d?(]qKI
",HpW!2KSp;>h==91dY:E5Sj6GmVae!!?U8(g$f:-2@NF"".2Q#Z>O/!!OMP(t),QoDfjE_pH`iP85"S
$Xcu9XOOW_(ph]MMG"f,\M:6fq#C_OAS&@fQ&/'G"7Q9s!<I",[0RVg\TS!""5Nq]@SmAu>6=ud!!nLR
FU/h/ZkEQ'!!PHdR5^::qu?a#Zi^pWQ6iF/#Q_KM4;%l^4U:s'!tHMl7IU;/!5SX:%oua0!"fT0(`6eb
>9u]<!87g=VKnO0rW!F#9$aoS6ALU%!/_R0GA[*T$:-uq(p+GO"%<1io)JuO<*tH;"9\H""Upu,JjMj(
(]t3i:lG8P#7Jut(s%PY#lPSAZ_mj$!"!^YMOBkL/$6\lmf3\<kN?PH(`9jgNs"_Kp&G,&%/g///9MfN
X5*a\9'/bP(ak5\k5Y]<f6MYsITlXL"Bi\\;1S*8[f?L2@N*)\(]tY/%rg2%JcO@%!X&T-r;\%9L):\n
8gXZ@!$s1H".-UOE<&Um\$m.Y(^G=!H^G!SFGokn#ZAhN#@7E2@Kc3$#.,![H?r9oqu@6QF/oIX()Rla
`<ON.&C>Ls!!/HBr>5f9\4f(Q6Q"a3qu@%a0u[*Z6`,W"E:3c5S?^&P(DmdOc33#)!<Ydi!!Ib\#8l_+
'\`Tm&E&KPWP]uMkl:l*_&1!n>5S@($eINX*`gtpaoD_NG"1BHa<M?,7Df+W!9=+oDmL3l6#$Eh!!!*%
=oa?rdEN4h#Pf2?#6u(_@g)Q,"^9Oq+<\Sh!#VGb(hdTS!>HJm5mr_7EY]LW_5<AsVh]$d!;um.,"MqU
(T!;0,qXW!6Z/PCrW!45['`jg[^I)knGi_>$Q_<*=T0->Bb`[4g&M=d9MZLa>Qa?nmJmJ=3@e&<@iGO9
!!Ot&6ZqK)r;[$B*Jm-#BcY+lh>db!!GuZS"@]BlJcPTH"t7c$L"+"/q>_#jR>FCK#8iksg3s38k#hU"
!KoM<!!S`C<86/gm/Rij#mVt2,FH[^iScaT(`8Oe8$G9-p](qDD$AUX(`?qQkC=7`3>NGSC]k"D!)e%H
O`qKRnc0,B;E<W3`B>%TiSe@n.+eM'Zn`I8QiYh>!+H-I%7?(c'6*=="UkRN2p=/X!!h&XY?2VsYU$CP
JcLf2"E7P*>86o6$I4#(T5FlNHm9jMrW<<46$sLd&GH/.>,`=D?!Zar!S1BJ(^4"lZXJ:ko`,lch5)ko
(uqOQCIcV'do7/$\T7`N-Q-S9/b8rG!6rO=b;]A:"G+Eb:''ha!FRME!!]%.#8i[k7FhGD_pW[7JdX/!
o`4jh"JX:h64<_l#6Eq/FVr<?&"*EL!!!"n!!36*"8W!)G"<HL(`9,n$k,T'!!XB>(e7:#!;Z[""4'@P
QXF4e!!+"3rYPr)&Snf'd3f[S/b8rZ`l<QH(`-)SFD_="#8RR^N%lUY!5lRCE:X&>'HXl/#8g7Ei0)#2
eH5pL!;?Ho+XH=Q"][c(N"BsX!!jlp+?)W?X!e)B!!aoeIbZl@?7#OM"q\`j(s?P&JcLB&XT/BM6N.f'
CPW)h!!MIL(s,hS!!Peqdhm43p]0jb$>R0b&]*Vk"^?[+mf3u)>E_2e&u1q)`F!us+;PeI/lqE@%?G,:
`<]8ugJo."Sg=L*!!-7*p]0pd"XW)+(t,#N!!.-Dg].T%Bbgqf<FB#'!!Z3'*&ffM-N*oKF,H5J5RJ\0
!!-,>p&K[EJcNXf#(IL-(q<dhq#CN#4WJD8!!NmI(^JP)kPtaFH[C2EkPu/*2Rc(<CD]h_OG58Q(mU8U
nGil81VfUg(a(XZ--cJq;DK)Jao_VDq>^Lag&MC>$DA8C7XZO-p](OGSPL(]6JW(L!!WS+3#FhC:%nVg
/R%*5[f?FJ"O7"!!7q2S`dns9>B'B<"A60@hf8Gl"Tpk'(qi#U!;lg.U,G@U#+]cWCRH7M(`8Mo/b/lI
g+,*!TdL!eE6\FeV]Z3]RZH\5jT#Qha@(<.^V:EbqZ$j?j%gLNOH(Xd!!ct7Tbq;a+q26eJcLB&li715
%LlQ[p](H^R2CTXq>^^gU>Zq+TIn1a%V67i2U+t#,C:oJ(d1.J"AJjr"9\>t#'(Om7oqQei;`prNs+qP
"q/IN(u]lFe,]:E#m.+:R:Kj-&1%GX!!dAJ0,S&[N=>dd#?j\`(^Oc8O/`23!.k1Rbmk1cE;0D9lBrKB
<r)e#7AA`X(n`J$!#&oV(cKW5YTnKE[2;%lkY2$W"9\>t"EG=k7oo^KE8^cuD3"hh!!WhO<#FSB"3^`O
!ic`uA7VYN,m4,H#Aph$(giJd%/p53>"Lpq#\T3ZPlQC9!!&Ad")oP4>5/(#LGB^TeboLH!!eRa4W#$G
N<@6%'B0cEDWRB:!!&V((n&sQ'EA+H!VQKrXH_S5E9dMs!!6=,"7Z?qX5=1"(5)_1!"dB^L5$L"AL7fc
,\FG$'!\M8!!U9;(q3G6quDfY!HV<7!.k3E!!KHe(lZW5!!l$8CD[<_#Et\T!!3Q2!7:c[Q>9G:F`P#F
=#;QI6^RlS<a(P4p&G.gXsMQtp](OF7_0ERAL0dc!"FF-2BRn<:92,>2\OF[qu?q95.A+\c4&k9JcLB&
[K$IBL)>05,l.KS'K-eRhC:/qAci,870Fod$Zc>fmJuAL#q\.Q(^;WP3-[gi(^.BY!$ka\!!`P+b8;)5
'1Mg!aT)ZBgHq/Chb+e>HOp#S"eNSK2nO(V!.k3&!6Y?H'0/;pbEe4f!#>TV1dD;i22c/c$BL5M'5!K<
6oMsk"PNkP!"I%c(lD!9YtW=X(>Omg\GuhF.gHoSMZ`)Aj8]2`E;KV?I<<%;(j3i>qu?pI_O5\5U("X6
JcLB&huFrib%X!U(jlK4!!#HcT,<\_!!&Q,0PY>aM*2*Q=Etai>=I'B%LWV'(t7-gK8nY'PADWI\c;q=
V$@j@K`f[%q#CG'D>F5:*Kj&pfNA@U!!Osr"rK[TcN!tt%+kQ3!.k4C!$MH*_O25XN+J%PIAIbcTHjL;
9F%['"hb`Y*.(Rt?O+ndrW!03!GqlP)^PpO!"KsODDrCkN#+!7T,98_>3c18!!WMQ#T1s`"2+[9D.RJk
#BY+l!!!E=dhlj8!RC`H"E;6YJcGcNM#[_^IYgE/(i';PGXE>*?2ag00eu9;)*N8Zc2I\SAJ-X"<YVSY
?=d]"1j^,S"QKIl:$R+5(`.R8<'tpJfU*?&!9O7bR[G""QiXf!%4GjE#JP*Z!.`,rN+I))!.k3&!1a)l
@M:@\r>5S@FTq^D!MCtB(]o!<Y5J>)C5E0CVl:I.(^.E45m%5M!!eQi4?sb&A2jK)!^k@Y^]=94#*-).
(r?qT\c<*qgDiS&N=X>J2b].g!.k3&!3lM0,ngs-[g.14'Dqh7C^h3d#LRts!#+H+=?RK+PsEMC3&6Fl
]%[`+!!)'[$Z&-AT=pJ]4W#$pNP#5qA$],OZ>Tj>!5\^B!Ah$ja>CjQiGZm>JcLB&_>jZG/m0.j!!]U3
(dpd3@f-3>"3/M$(mVEiLBZL/d+[GA&hYd=lN$k`%lFLoM_RH+PgijC"rJ2^3kYLt6.^B!0;es3!7_&S
@iu!n(kFID[K(mZec:4~>

%%EndBinary
grestore
np
grestore
gsave
28.08 431.479 mo
469.86 431.479 li
469.86 398.359 li
28.08 398.359 li
cp
clp
28.08 431.479 mo
470.16 431.479 li
470.16 398.359 li
28.08 398.359 li
cp
gsave
/2 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 33.12 9.39635 134.012 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 46 
/M[614 0 0 -46 0 46 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcPQG"T\Z,"9\o*!!WW4#QkA9$Mj`+!<N?2$O5bo%h&mW":l%U&ebro()IGt):\`P!!X>\*!73&+0tqN
+<^gh+sZ^[JcLB&NW95.,pjue./NuJ$7RGT/1pYt'.tpg,p`Ql!&,KL/i!Ve1GgsD2Y@%N2\#`g#mgk>
"#r;%4$5C8!!iQC4[&rg56aBZ!!Y_U!s:nY2W+Re!.k3G!!G_[7joe]!!F!,8P1]3!!Q"h9heAY%o=*-
;,U=l+:D13<``B-2YmCU=]nofrW<F1>YP;&?!^lG]`87F6;7Pk:dFXQ^AnIJA7#lMAM_L0^An:1B#Xh&
!3-#")CY7Y#!Za5!bc9kpB(S6%r5uaD>jM=!$>6BDI<AF!cN$tr<!(@F1qVY(_]UG3-9#o!7UuQ/p/g6
"*ReT!.k3&!;c`t)?qV$!#J7OG>3=-"*f-<(DhEFHk(KQ");(hIPLg%!XaF,rW<<1#TSAG*<$$@0/`_/
_>jdBIh2^0@"QH"k5YW0853=iT`BZEOT5H"K5L>_!=D98!%W_VKa7d*L+J+95D`-5MMk5`N/`+.N]N4Z
!&BXt&d&5CGQV03Oa@1U;An^!fDl,=P8jZ2Pa/NSqu?nc*dh]l)N=`K!!!"f!!+uplN#Z>#"_AgH'UiP
pAc%kQ^F0HB1X<J!*E?H"*b(R""JhiRfb`BdK&b:#Fq;.*!6M<#-._,"eJFUIeEbn!.k3V!!JQ=T:ffI
!:Tsk5<kj*7.UBoAtkEIUJV5EUni/9Ngi37!sk_)&1j^$!!+L"qZ$b?Vl)$I!s5DsD6!X?0N=fm<gDYE
JcLB&`rH7AWiJgp`;g"BXfaM]K(/gT7A$cfZ):r9C'/$8OW4HQZ3,;mK?=2oD>XA=Za>"'"-uP-mJsj!
"K8^1[^XK]JcLB&g].Je[0)CKY5eVKL_L@[DZ^*B%j[3%L'(_lZ;aW;!!`\=#Qk0fZPhBqci=3\ZidsE
\,_*\JcP?A"WBtG"+;8o!"g)E^30S\?AC\YWjMq_I>t\EquFh=#6h+6".l+"K#.NL!!Qu7");7]U]>uH
L]@Sn8-?]$5ct)!"^qN\!s?1b%0MW@%[k2OEl@,@hZ*nn+pe?2`5EOp!;QTt`<-33)34cL!!!"j!!F"D
"-.Kg!5nj<\0_%T$@!Nm/?u)TL5hnHd/`k?#;(W["1cH#.&-bE49G\CpAfdFJcN.X"g&$C"3<@M!8.>\
ML,FP&J;;\L*=[X[/L..&&-'a#0Il*"1]7\r;`Yo"L%t17W%/c\GuXKQ-95[!6G3Eb@^nZ:2RcHnGj7]
bc\0_""?>p3terKZF!m>_p(Z3a8cDKCN0HSA!Q3W\c;kE]`TBQc2c,is$4$nJcO[."\Y<e"'fuP!!KE4
8<%m)"3sb@SIPa7HR4%hPYWpQ!!]=>5#'AMK$aSE!!HtJ"3j9F!.k3&!;$6p9:H"c>]m4M'<P\6NHkWO
;,Nko"(us,Hn(@V0)GXo!!]=>5#'AMK"M*E!!HtJ"3j91!.k3.!!bFp!s><,!!'8(&T_4[C(m9\dEqta
Fut"""%(Gs!9=+a[g/Z1%A\TQ!;QTtdaJ;K,EDhV!!!"m!!:Yh:&Y4pM<P#g!!.^1p](m7YJJc?U8<j/
0@3*VG&"=oWQkM@!!^08*<Qb/0qA:IF@-.[P5#$/!.k3Z!!\[g"*&[-%+G:?!!-[[p](mIG].$5K1h]'
UUmtN5ndmqK#mus@n[.16;fQ5!2TYu$BkQZFQ3@Q!.k3p!!g+b"*b>&?>R@VoDfPW1k'rW&r$XrO/T#/
GI_T!E3G_Q!!b1dfE_RQ7o/+E\c;ldVZWjHc2`FrJcOd1#VI6F"-[2Ad1s"g"bVjr`=JaB!t0i7:/4$>
(B[o(Ts;`?#$MO3C*Hb6bQ,rh"MS.DVb=Q#JcLB&pAbIeg&o!VSP=eqfDtqgi;a:<79[sX!s:'"%@OCM
q#^[(Bd<BQfDl7I[kS(7_^\nd"W=`Kj8]>;aTL6bU]>uHNW9G/g^ja,b,Pb;D#aRi!<4bB!""6Qh;&E2
b^qT&r;[Z=YuO*mZ6k(<:*dkg$bE76G!Z`B/"U6)irJKI$>)c<6X(.JDH\-!TE+fg"XoH7!uloS!.k1N
!7LoK:ES'd#h$?fJ1[:AHmInUh>e<LP28>bg*MQDLS?C$!*Me(!s9Rt<m(:>#u;cj=<MSc+\=93!!5'W
[Jg70Foa"t!<6p!!!F%F!usf)!.k3&!9aC`-t_!0#mS@C(HQE'J0lPj!:p0k:U'Ws$]Mk$KSOpWZEMM@
./!WF=476RHJFS-!!XMG<R5Hm..I;S!<8>I!!F.H"4K9i!.k3&!7(WO(q]sN"oqhIfNRbE!'pL"!&jh.
rYY`h5jn[^D)!l.VTR%52(gdBM95\urW<HR,Vn4'"226+2=pkL2gbN+"2WdB0$jS$Ji*]e2VS5E!!Oe.
#Qp[-blE=qJcOm4$3oE_%A[h@Z'dR]q>`MZ=#l%cJ$e/t(md^#W4:\u"FZ.T%)f$e:JW]"bVM&.2)I+B
0l6mjQ**TJJW,P3GF2f,26DtR^&.s<-=IT7"21*2./3f@!!,m4qu[$bV)^/j!7:cMb.7ZW@SaK6JcLB&
q>^j'iWFl=!!$2j>SR,:"b_eO?VO8]!u27oE2q0\\[eCqNIQFQ7>.Y,EW]$1qZ@HX)meSHaTJSuE<ED+
j9#KNbKTPX!<j\H!sZ.7Z79c0K)>V#!9O7a`8Uk>7\Tm7!0I6kQ(JUS$uGtEWISVQT]O]+>9'qCpB(q#
Z4IQsH"ni9.i]*pZFs!0"!t6'GteBqgu^*hZ6@$o%G5T'Tb2#A_eXF="*YI#"2Q9'"*%9tnc/[o])Dd:
\Z0jd"'uf_kQ$27qu?pTL`?MbRV(7R!J3#7!.k1N!6"p^0JEZ&U1g01R*S,ZDW-ci_qNa`c<a__>W]U2
TfA"=".0;l!#u.F""G9?]hJS2/)nOH:]LJD7%[L^)D-)SF!Fg$=jU#[36ub0EQNSTYHNMriGsnurW<ia
!o.?MEs;Um,@HfX#fD[_!tV=<r<!+G<Aa4G!SL$B!sd;^(BXd!QSm4lYlOf@jT#L^eH5o)2n/M]j8f2t
T`BZEh#J-A9&H53DkT874q_VD!s;8C.K`C>rWE0pqu[-t]s>>22f8No!A+HQ!t5tiU]l?G1f#_s96:C,
!!AK=PqMq6!p?-W"p6?m`W0U'qZ$r7.0BijC',*-&,lY4]lpaO!!00Pp]CXK,o^oW^];@S!G3tG!![6M
!sn*-f&?[]!.k4E!!nW&'[)dU5/"Z.!uqrWB.F&d#ne3f?<rt'fS2I-NK%R`GQS%_@TXlS!"^a4UXpP$
AqFkb!!%Ze2)-iH!!Y>BGQYWbf(T.G.#MC0"8i6&YN'6a!!*GSp&bC.G$9L!!58F<0MWSiRE(IYblE=q
S,`SA./a,Z))QES>)M'#M+NY242J3)ED0%Z&"6[*XOND8^f]+>]+rJc/cC_<"].Wa;!F>L8.$5erW!,E
B`m:F2VA'61`HP1cFENI!>X\n!sZFh#Qo>W7IpNX!!Ot)"$SdQr<!8hA.\nTg&[N?df9WPj9#LqeBj_q
!.k3V!"dhSha'`NK`ija'65G'N>ET6!st`]hTuT:2)&l*mf<:d"DrVL7lL8F!ud_jFOpKq@p9'#V#:8q
:Tb%#qu?d?jh:Tp"UMq."*1.+!!n2]#$QQ[a`=0T!sZEa%KceEV#a[PKE139#KI8U'&H#abbG/i!6P9I
1-%@k&nd1?&GlP:H"nLM6="eL@BNDd!!4#jK)5NM5]dDhrW(XP"?1R"/2$l$"1W^,dea"F\9n&S!brK_
nGj(($k,fB!s>;[41U<r.;p%%!s90TUkJ1:JcPcM#;1iQ"#t*b!K@)2!!!#W!!DDq\fq%T&3^/SBu3)#
W5f<*^3!$$VAe(e"5R)%5j/4;!!A-R*)uh9",fm$;YpFpCtSRd!LXeo!#RJXQ`!.PC=/]a8&23.d[L=@
X*YC_OB@+h!0mNhe>EB[QudBRp&K[EJcPHD&Mqk`J?&bS[+:Bl=\fn8!.nh2!!7!qD:S[h\3:!d!,_Z7
"%SC6d/*eDCtSUe!j^2umf41W/osPcUEU+T7R'%8i7J,;k24W!UI]M[`rN.?#D1\H"2*Y[Pi)On!/^a]
-n)QhDCTRGaT)?nQ.5jB6sTo'ar,dZ!.m$bq>^Od>l=a,!s@hali78_g&nW(H6KTn!t5fh!sra!U-&kj
!f>(+!5JR>($5V3]#W]Eb5d+oTE#:M-n#'J(gD707I:*4!!4q*:t5OO2;h30"@lY91AChV0T%@_!ur<`
C<-VK!;uluYsS3f%MF*j&7R<n=^bV=EQqTfTE*OC#<!rB"0YTj>."?^!4Dk7K\K'iU&[uG*6qX<!;$6m
D)Q7]!!7#9HMmp[a\GXfO1XSP]0ruocN=^iN=>u1Z0MAj-OB>H!M5>Z!!"b%>6>mqJ&`ss!:'UiO/`;q
d0`Z]TE'QDbQ&%h(_*dVEniU`V0GSf_uSKk!bS0Fqu[2`5NT=n]XGKN!sWab3s/3g#3u6iTH3Y,!>AZ9
!!jL;RiJ`>R>;%A!.k1TJi>jqakgWd!.k1N!9*t[B#bSa!sT#tG+f#GW3--i!!=q)WY#.3!jW,Iqu[<<
*=)`L9t\+?!tsMV!!1NKqu[82(U^["E<?<&g\h*Y-q_Q--3JR]@qOd%QiI:7+p3,L(%D9U!.k4F!!6cQ
'E/(<#XW^."1>(u!!=q)WY#.3!jW,Iqu[<<*=)`L9t\+?!tsMV!!1NKqu[82(U^["E<?<&g\h*Y-q_Q-
-3JR]@qO$eXT/ML+p3,L(#/e@!0$s`K=cX9!tKejrW<4IPIm@c(GJp2!s:$uaHd,^]`S?[>^HPTHt6dQ
!s(Jkli7Y?+$B_3_:g*shdIABa&L._B0Z:o$%o,3hB`8Kg'hT*!5ed?JdagFNBtPaJcMJE%I&EG")c+^
hNL,*UDB-a!3Q;/KPOosEQ(>=E7gr_!s]iH5<f5PG"_6''EA-[cs$S`E`M!u1M0H.WB,A.Z;p`$#R1L3
80#<JLde3AfDl(O)[!dC]<M?f!7h.#~>

%%EndBinary
grestore
np
grestore
gsave
28.08 463.039 mo
469.86 463.039 li
469.86 431.479 li
28.08 431.479 li
cp
clp
28.08 463.159 mo
470.16 463.159 li
470.16 431.479 li
28.08 431.479 li
cp
gsave
/3 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 31.68 9.39635 102.332 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 44 
/M[614 0 0 -44 0 44 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
i;a;f!WrN-"TS`3#RLhG%'Ta!!!s)E%hJgT&ebroqu[3?',MK&!s9DFli7Y:)B/b\*$$(5+!;^N,8((\
,UN3c#::fH.0D%M/E[#$!!Or,""u>4n,S%?JcPKE"Yg&\"!]T#!!<E]1`)S\">r(r%ljCf#rjq+(B?9K
!s:XO!!Xc449I`15PkNe5X@O8"%#BK!!bn\7KZ-p1_%q7Y5e_s2?O%Q9%j8s!/pm\92#Ei:&Ftm:'OL]
!"phZ;,U=k<)lUm9f*:Z!*<5(!s'&Dm/R>m=]kh=>$Lk+"rfd3"'o4[o`,7g1LFNL*?S^!_#VCR"_2'F
AR>Y\!.k3E!!Hn-!s98#!2ol%87uUL0kk.p!!R+P!s<=@mJmFkCc=9T5TBP%"[HoE!t&r;!!uD1Df>do
8J?)QXoR,T"DCd;,]^'gJcN4Z"Di,]!u]Me\Gu\Q/9Ugi"a5&p"*[E+!!>!$)]SST#So?gGln.LH3!L9
$%%%5*!9aZI=<rQ!!.S"nc8+Y"Yr2'JV%R(!.k3o!!G*!!s=1h!6"pAAnH\uKgkD0!G=Ll!t7>3L51R]
I#/14&W.q)!!GiN1lOp-!u6$>-`m@L-B@$b"+Y3K!s:]J(JfbcJcGcNi;a!:G67pkVZ>HO"^"lh&7?":
!#'l7Ookf;P62b-PUi#bLmJ2GP"P*A$:pPPLKoC<GC<Opo)P9\$"A]R"$f)8DASc3!.k3&!;6BqBm1O:
S!!d@!!\s`SQnF7Hgh">22F3o!t[Hj!sh/`7qDc)(5J@E!"5<hTO+;o4aEc47AJfA_#OOe-78Bc%44Mh
!u39f")S1:G,7ae!.k30!!K/X>[24F!/(=Q(IA0*;Q'$b!_@\fncJns2!=oKJ>`aQ'a"PD>Cp3#)D]Y>
ec5bB=K;#o&$&/%)[WUJ*b>EU?kX@^Y06lt!20AqY7FlCM<=l,!!QK/PAQd[rW!"MF\)<.!X8\1$3LmG
Z35AM;mWeUquZtOX6'Bk#-5,9[0$M^TftYUE`g!Th#J.t[fZ_2\,`Hc\P[FS[1Bj\E@ngo])[E_[K$HD
"1>OndK$EM-k)bQ"%dsM(Ns[B7BT1aY&jYd@OFWQ"275oN5*0E7QSCN)Zp1._^>?_k5YWUR%VC(r<!0f
[Dd&dWW;Vj#.DMl"$I?ur;[>9BZ;P*5@lfX=`9_K[^N19JcNso"MFoF[E-#]_>k6O].0#*4KZ_s",4l'
0Y;=7Q#C[@!tIR])aHnl3HkTd)Zp2K7HaaJ!"GI20s%KW<C$]u.Z_YQTE#7XNc%bt")Z5.q>^s5UR$\7
*B6=.]!o/G-C4^a!!!#X!!K2%[C**6!7q2l=GT1$D&.e(JNqBl[5]VG.WC"BD9e$V_]d>q^eAVC!s-b]
hZ+(8[`<&pd=',JD%B=W")cQ9Nhuda12:Q&"+cX<$EV`4q#CeFX)8SL&H`daXYpCa-MmcD-CThmJcPKE
"A/bp;q7$2lMr2>M)bZ%3n=V"f7UE'"'m/e>m!:CG);(/b9@8D^4Bht!u2nRh#J%;S=E,Pe5qt=JY=>Q
>;!\EB_)58!"a[h(Wld\"#pW]<#)*-Q=iba!">B1[+ca%;E\kAQ.(*Z!!4oC=S2ZG!0$s^S4*NZ<8@BO
JcH>^!3Q\F5?Wi`CbQ1uJL&$brW<]t;L)PR!s:N"!s=`&!s;HLec5hK#Mg'Mr<!<jD;J6Yb6p,7j8dR-
"IuL?a@uR8$k]42c`B/K"(38he?8NG%[tquhc)k_#n@bI!&A%[huJ?/U&Y?f<s(WM2!4k'!"G\:AY,$5
Z(V77G8"atr<)s"$DE-P59#/b!t`:EeGoi)#,p#i`.H53!s]B'*$g\.GSed.kl;TOHPb)Q,Qe,fE,`_7
;]I:sDZW3,&\lq0FS5\@Hajr="#!-u!Dgf;JcN7["b=8gZa6=Q!3#r+:8Yc..\_L.GMb<ip&bF4<<>?'
rW<3df[Tg!f)Q),-E^j:IbTfGr<!L[)]V@#3]bmF2Gh(qR)]11!(`knXAo0$'cXIs8kLjP[0+0!F_Fq)
aTEL5M/5`W!",6+h1ef0'pj`(7(*)I!6Y?F/H[UX0tdS#!#hAVE!$1Q?EY/JT`]ic<0(fa#spu:]"q8%
>5eU,>`ce3/Em/t!!l?.@KeJ4LpA$"!tKlF4e\PaTg:s[bXO,<UWriBJ21WbC]4D>4ZQNgeZ/TK"fe%,
;LSTR!-K)?'XAJnQO!i)pAbOIUX?slAN5jjEM'!+JcGcNi;a"0")r36VZ>-F)0?^""3aST\Y0*-JRE[H
4-UVo\kNis+G`nm!s<,@MIY-9rVuth1B%7Y:,7jBV3N5gp&bL1P<DF\-(<<`%=g2b(Yt/g"-^h>P]8MU
!!=$jStu8a$;X;FW@gBN$VJkWq>gKp$FWPTi4]aeZ)hbaO8sk4p&G6S"&r5#OoXVE"a_Oc5RPm/!s:MI
L#2e2&4Zk2"'QK@-3Z-%H_9(9`l?d6"Fkq%8@JHs#_7&d%:]D>2N\-ecDbc"qu[+R&<hffMs13CJ.-u'
!"aXMS.#U31R:m9"+_24cJk\p!!?^S)`mfq$r;3"0TTIX$!D-^[^Pu3$:kDYWLa2-^t0q<quD<KMuWuo
",2F0quD<Kq>^Sq_\)2:&ic'7)/UX;W+Kt0U(W]P!m.76f`2,(:L^d0!"XQS:*p0e1,<s3N`_ja^qTdM
#(\oEA41ru%SiOa$k/Y$J5/jiJ:E&DrW!lGB49jV-73kW6ptKoe?=>_`i0OPAK9QJACZ_5!!J<E"3"%1
!"C82k,D:n*(GpI\7h_AqZ%"HC#V2p&MFGs,mPd^!.k3E!!K1,.4Jrn!0[BlJ@:AFV45GJ"?2!*;ni55
'E\GgJJK:V3!07B*CA#b4\Uan<[@YH"WL^S.#X#9!!7Y?JF`aKNlQ6kRMSM(I-+!9r<!g#St=fqJcmdj
j[rt2UBP;h2)VNg/e8\KM/'D8$\sLr8HT'G!s:e!;NNCGA+9O$IKS/1p&GOt-a^sMW@BCAU*?h7Rem'm
$jCfmX^-KJ"IjiEf)UC&[K$GVF32OhdK$3G+ssK,E\(#,d\YnpTX;1\ZTSBmPEU8:YqH1]38P/W@+HK$
rW<]kE"cb[*OrerLnaqM12,GucN"3"J:@QKJ,k)tJ-09'U'(7Cp&b@28[J6q$tV^j(,+NE;Zi`/M9#Sq
n,NR=!s/Ys!"2=6kifi'"#uI+ETHrr$r<aFMP?f<GDn%&<u8jVJcNso"H/>T^8/FB]`80>D?Iudq#Cdt
T,K6!*Y8lj9L<%`"!&-`=h6Q6&3_1mZm`n16*aZt8S8$nH<J4[:3t*f!*I2?%^'QJh\-Yt_6[E1P7U!1
o`GU;0$T92`$d3*g(:Bpli7/Z70CnZn,Nkf84.,p^qLB%)4%=GqZ%(UXtbdK0*=@#;b!#W%C?+e!!!#X
!!J4@^:pD@!7LoN#&XOb#l+H.:7iFT`?#R%?q`mmr<")V$!FhuaUgWXM6n\MD*bI2>"N?,S9e>WTMBgV
YZU5lg&MVcC96;+'2?<L>s4A_5_8S1$l(D>MMf>#/O\;(Xg[Qr"@tr`cungX"@u'NC0:eW^(AC(QE,0*
!"FI]0o<\!"$JeG7[42fScF?Bp&G4!c=LQ3OoX\G"AVPkStu&["a)VGc-=!!!t2ht\fMD(,.FL%$ZQ(I
%hL0=Q8/V%XWG\4<to^61=lNh!!YuP1uCbI;uW?p^7Htn>lt1?H.i#o"/>uhXQoigW&d3%lMq97CiXq:
JL]S+C^0_9!sUR;YmI+t"-Ysb)'s)SMu\e:"IdpE"#p,XJcP]K"4Tg\Yk.o#8-]BV7N6narW<Lk^&qZ?
1`Eo]+'edI&ibI])AhB>h?+KOd"J[2['qr8_uTH1$V1`!(GhJ9I=VJuV>1)nX-*g\li70YIO#HVkl;&c
28+sm!u8U%Zt&q4%1K!g1f,?:'gO%MYm<,[!.k3E!!SnJ!s<N'kQ$bG"/Co:,4ts7!!c%BXJFMN>9*VE
#!I%'-'t2drW<?:'GsYC7R-kS$"YR&EAO5H7s>dJ!!?\Th6sio!QSCG!t*HO!!B'\ZY8_+"b:)h""kta
!")K"EJLi*)d59k#P\9,87s[540o#S>@6#MoDf,dS28HiOgqjr!.k3Z!!Q+L!s:d8dfA2(!e5`Nc2[qt
;$2%1!"FIkguhM[Nt2<p?!:G7#Qk07KPSKN3B@$?$5!q.UF(>2QT`RsrW!6OeKgKV!-E=dI_Gdc#0$b/
CIn:%"/V0e9D\_^!!ahte@S"PPVV>#$@lSo`)Ra><6fO)pAbRlUFgKh2dJqh]4c<]!"#03Ct:k&&`0XX
joBu5b5_]r(F^dK_nH-A!!3Q<7*Yc8@NYbE[d*ns$nO-hhidj=&oC*l4ucbNZNCaf2N(+$UQ&/8&"CU1
!!"e;2_UYC!%]Z__S-!R%-=/b.AlqA"/TrhU\"NqJ@5\mj@)K?"(dfT!!)'[$\/]"-u5N-8$1q%1A:bV
"t.j'!eE!r"CL,JqZ$u9=]n!*^VBr8&k14KJcGcNhuEn[N/W>=VuY6G"LbcA;q'q1"Fssp`6eGb,%Y!]
AHIXB.Me7#NWssaO0qsCWW4BdQGA2S2HW_NL5'ZSqZ+M6"B[_f7o9$^"34Yf[e'P,:VF`nONGTH37(+X
!;?I#-Ib/:Glq>2+3NR:!"2O2iNQ8`!uhk`eW0S.$EIB8"'&u$Pt=51]E!N`o`,/UEcM89=HigK!!Ka_
"!f_c!![sA!Dp!o(&e:Y5i,((AQEV[aNkL,*=b`N//X!@bT,ZmY#skJQ^99]e$%s8qZ$X*Y2B9_[L30j
NVWVVVEK\*!!0M9rW<:eP6urtgAhKf"\"Cq.[(p*!XfCbp](Xr]M#aW=r]h-\S1sB$`60S4VIgFWga)>
e>NA*!!Q-Vi<)8:rW%NMqu?l.X91t;irB:6Y0t>%EuY&[+:pb7^U6%+:gn%&_j<Pu.b`:K[[*ml$,+$B
2;-6H`7*cI!.XV@m/R9t[f\9;q>^TG0/2tt#^#&.&1#*.DHPNk$\5[^(k'MWSt;:QC%hT2:,QX?hLQ4R
>$eD@V?6o?YQ+YuY63":P5q3T":#/6bUr&ZOoPWna9+YUp&OCY#Co3UQ-WJ[.Jj2c(!YFYbX%r%gLrua
(a7aDhkOXiC.ZN=^iMsA!!7N'EQ\=^NWX;(&^1%O"+]>M]CQ",:+ZQbRoieA!"5<,<uG7J"'s8\,t%G-
%=if/%[V`40#EGI""uA-!!B&](>8Wdp&G.b8>qUMZiC6*V$#SXe,ZBH"HJ<@bUqcRr;['nQtb[DgQ5D5
"!S9l!s<D0V4*E^_)W+62P6c%hol1R,fA.5fU0,,3lV?/U<<N>89P*!c2.JCHRKjVq>g<k!uD%[V9],L
840nsfs3mTahQtSp](\P6mp-l0,;S2"!"rP!!<D!JV*Fm!e5]Mq>c*IaoDTqAnD,dYJ1(M!!J=="5YW`
!!n+*[\_El?A:*2!rt;)KXp6\5Ehccg_Z7&&J5*VKpA]r'#^rm?q4b]&VC&`-7oVP!!HaQ"/0*"!!IhK
":qU*!!@a`"'YF!ec6.S:9"?Sc\6p'F3j)`#5S<2J262h0]!NZ60!JN!+u@EcI2cF!!!#X!!Wk(6UPf'
h5LD&!!IC^"!4Yr!$7Z/j=rJo_1Y=0?+pCC*7)O%KZOdhP>^-iLmOj`@1G19)ph;)c8.#o;*nS!^!m#d
Io"OI"(3GR!!Rkb=_5@+rW!"M1(<sY"#Ak$^Yo1W!"4<4R*p!-*g8dK3s#*V%=hp;iSh-IIng!E)]%,?
!.k4E!!Yt]USFe#0U)S#!!IC^"!4Yn!!\rq6`+9g<W3(HP;sm"!s9=V_e>1O>Y/h;H!DBJ(+tL'`&DIB
XY(JF!)@$6gJQ]*#Crsphua)*iV``Z-Fa/c)Z9X;HeiB3!!IhKWGUkC!;Z[&:0>24('?Mtb@)ss!!7\$
FoD@D16r"lh5C=4!""1ECi!WId#J)+JcP]K"HM4=a^NEo"b;UhPta:9"!=5pi.k]*5TU7c!s<+)QVbOZ
/jdZf]&C(Q!5+DT6,;gen,NK2M>[M`;kj<mJ:M9JJHDkN!!H%O&Cq'`!!Rl^jq/YC_Z1'>=E`R6JJN4,
2CALt!!K;H"'_.V!2';r1?[i1"3G9B!0R<bY'gC:jRrT)!"FD^"Z*i]"<7LGJO)R6rW<-crW=2WhpG0?
=qkopD(qEK!!"e>5s`d"S>BOU&c_nYB!;(3!e?f2mf3K@e.I66$Nh>0!!%M;R`GSJM>[DWNn=FueGK:M
#0%6<,*'J>$;O]HI1ZPma]@T5p&G5*8N=O]r;_EL[/^CdkNBM\.Ugj-VZ6h3XTMM[!9X=d:,Se$C5Q9l
""\#cV-sFs>1l(YP$p*G!)BSI@"X*?V;F9u6!:Y[&eH(\KHst+7#_^+!.TOr!!.QXqZ%4YA)hD:"+c,o
!!"@6R;HL<Hi3pIY'gBt@Jp0084lkn9F&93$_3u4LHbl+$3\GCA,60.84jnWYNGn;!6P9G:M+4f"%V.^
!5&:6%BT^Qb5h><#_+1tU&tK:U3Z_?/qIlTKGJ>J0,DkC$ig9rfgh2OX/j<#P62O5k2$XO"$e=<$>1[!
_TBcI@_GN3rW!%MH^P<@!"j_bj36Z""2<ap!.[Eq2aG`&r;[=XV*4uO)?9b4W'skla_pbOa8cTuH`1VD
)&s2;*PZ%[!!G(:(9o47!.k1N!8mh]8B8b\!tX1e!8%8PJ0t3p"#U2`H27LAJ@<W$%"K-SZa4D6X67'2
!s:)>&3U(??Dj4l:70Z`.\"JH3B96R"#p?@!_3=p3)!3kjV6E)&qZ`-"3H"@rW!cjkp/liRK*bS,+]p+
"+c0$!.V.*JUrt?qu@0]M$!ic_>k"AiuA/m`81LK!!n&YR!]#V"$M;6!!H(SJNgc[!.k4D!![tBRO82F
jcoi5!!.V1r;Zq/"9T#-!!.V=b5`\V!U-AVFT?n<=;R6a^&nIK'ft.OF]U18KlKO]QT7&.!u7L4<Gir^
32tn-D(oKn4@"+(Udq,CrW!gc:LUYMM3=2njc?!?B!;A'RfIrH)SR[NEW#kJIg4j=&1W6oVL1]45Ui22
aT1]."UkXi"%Uo=!!Rm?><'lrVuWn!J,~>

%%EndBinary
grestore
np
grestore
gsave
63.18 463.039 mo
153.72 463.039 li
153.72 443.539 li
63.18 443.539 li
cp
clp
VCULPL+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
63.18 464.899 mo
(Thisfish)
[14.6614 11.9976 6.66959 15.2354 7.98942 6.6696 9.33379 0 ]xsh
grestore
gsave
27.48 463.039 mo
567.48 463.039 li
567.48 560.539 li
27.48 560.539 li
cp
eclp
27.48 560.539 mo
567.48 560.539 li
567.48 462.999 li
27.48 462.999 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
gsave
28.08 495.559 mo
469.86 495.559 li
469.86 463.039 li
28.08 463.039 li
cp
clp
28.08 495.559 mo
470.16 495.559 li
470.16 462.439 li
28.08 462.439 li
cp
gsave
/4 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 33.12 9.39635 69.9325 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 46 
/M[614 0 0 -46 0 46 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
huEr^!WiH,"U:t,fDkpQ#Q4W)#RLV@q>^Ns!m:QP$OdIS%M&ON&J>`k'e0t%";_mm)@R,q*$$(B+<_pR
,6S,p#pCTA"=GTH.P!&%/h\n51,CC*2#[Im&2c@)3&s#D3sIf15!M:85sbP_6UV\Y73DI.%hM3#$:mTW
3_E%=">EP:6f%gq!!Q+n:]r7FqZ$d#;H"rB!keSc!;$6p&.hiB<sY&kk5YSi=9Kkc!!31(48Jpn!Er]4
>o!Q7(`$Fb?l!0[*+L*>8P'%U'MW+K(J$&fAk=7\BEDlbC&ebeCM`tM)%].]"U"s!D/O8`E,bo!*!A3A
!H`H7G'A0/!"K$6G^2l,:`+OX*AD8II)c6R!!E=N?la^m!!G0/"=b+a!/LUVJ:W=O!.k4K!!@aR"G=)^
"9CRoIY@\'+\;f.D/P&^;gV)-H9"Vt(Dhj_M+MQA:,4jUMZH1fN/[fW!"]\I5TKt18</`70N0)hOCn\4
DNT@1"A"^X!r`0/!K]QS8X,K%QBWj+<$8CF"TUo+8U?a#!!Nq$)+fiQPQ7?V"Udgj!h#;;!0R<e4.-5'
!!#cKq#J/0"T_a=R[-\H">Uc6(,1%K'UYA[80*tdPQ[R0&t`R'TN\$=U8%\g&-rPX"9_79G)c\NJHhp-
+p:J9L':SR"ElLarW!E/#8<s;8V3i?!N;]kIm^@="9B!XH^X^1#6>JR(K<Hr!.k3Y!!Wh2WbAFl6e)17
!!`Rn"E4>@$`rChdJsI_:'.O?Cl\Gs5Y8+S:Tnqg#noK="<F]YYsf\=Za9io2?3^gUbjn2"@5]p?3DX=
XC=9p">Eob>.+Q)\"?$$BN;Pq\OiNP\nM$BWW32t].6$TAGZ?0&OZb\]]oKK!6P9GO`Y\4X$LmD!5&:6
6bNVeb5gT'"V;&FUb][`"=6TH?m@1gQsE6S^VF!\"H:1$.PS`,!!!SJ-j0Z,PS=+J`%WIUrWEp^.Qf?q
`WQDu0fd9oEBJ">8Q1\OjoE*q"\(LD<`V6Y!!Npa/Hc5Rec::%!!(pW"p(Nq!_m(7WW:HI!tWET?F9e,
!!A?dON@A'&4oDea^6=%aoYNFG.s"?T"P%&$ipur8KAhpI1S7AIlRE1$?eAP7">84W`B9oq?-np0mlI:
!7UuQ!R5OS8IDa#!!NDC`(;0^_#T&eo`,1kcHaEqR1#8[k5YSrYQQn`!!a'=Ukm"/"9]r@84cAtV7-SN
A#f`kYRgdG&ZdH9+Z;7$7a97="9a(G$HPa8!"R.V.=iOd;][",PG?,m:V$Pi!!WH+*Zdk47/R#g:=5e_
#t(fpMZ<ngdaHU9If9>,!!*W=p]13l!t-"M.]!+Lb$%u'I[OU@":Rh""@ul6/eN,J?qDRN_)ja,aWpul
,Xi$Dp](R##6=m+"'&>2rVus"&u>U+!!^TIXOKfKIf'0K=\o5<eX-?0!!NbYdaOe:kl@FX!>#Y1!!<TI
"=j'EYlG!N>$?Z0R:,mp(e@R.87*&`&TW)'8L)&544;4r"9]u=$*a1)#QY/2!`]>&<=]!.!<Eh+!!^TI
XOKfKIf'0J=\o5<!7c]%[/^Am',)]0+OgD#!!*X7o)Jk#dfaOG!5edA!DX50]@LVtoE5:E#tZTrrWE=H
Jpn3g!2]`#Oc`7^8O[Cm!!NoHDZjJ"mJqh=aoDSGSXh]*0&Q^1!CPiH]Dr$AfE=@\!7UuR!<J=F$SL"e
ncT&A7AC.2!4`(5:5BYgD%upK"TcV("Dr;8!.k1N!8mh\!PlJRU-mf<!!1:Df`2'S3s,?\"&=OQ(:=/%
!"d;Q3S?)&G+9fpN1rU(4j-j2!7(WL&4W!%8QMP`!!NCO"U&eE`;kJio`,*q;GmXlP5t:V!Y>lHqu?d!
<NZ3"!s,n7/"cn7!!:<YV#12pOV8CqRfMIK"qVBJcq,H;r;[!/ec\O?#dFAf!!E<e56QrD!/pmZ&:bGj
!;c`u6Ni>RMu`YR!!.uXp&G9=RS?@5JGoNP&-BQKSr]BATE#+WdaA78kQ$_F!s\t#1A1^0!!**+o`0mM
">uW20U_k>"Tb]A"9mM8!4;e1OW,5BSD2NnV>p^%"J!lu!.k4-!!*X7_uKoPY66+%r;[!3AHYTA#kJ%J
!6P9FOa)*R(Ri)=])Vq:"Em;Z!.k4B!!*X7_Z0g/@0A`)rW!*543RhNMr"Gc!!!#W!!NCQIfpPrW;t<G
!tUt>)n#`u!6G3E&-Ag6._>TZ"Tb64";\Mh!.k4D!!NBk6j+;nPQ9hG!tein[%RJO!8RVY&-t5u7G@_@
"Ui`]"I,:]!/gg[!IT7tHi3qr!;c`u$].I1Mu\G0nGi[m$uJSlr;Zsi/-JQ"TE(Vb"9F41">K$>U&Y0$
nGi^7'a,=VpAfdFNrT1l#l4N'$V(>i!0@*Z"V<aF"Ek]B!4;e0&0N(u8^d[K!!$3m!!E<L"@ueW!.k3G
!!(1;!!E\\(nuNZ!!NBn?j*4TpAg6S!Ql_^!6P9E&>>d#8\P2^!<4q6!!E>Z"A,oD!.k3R!!HJk"Dt[J
!!^RZ70FX,UuVNO!!**Ui;`iXhZ3]-rrf8#p&G.%7n;G:":u[Y"KAj1JcN^h";$:j8ZVdi"d&li8_;S>
!.k4C!<:LI"QBC]R(iV(:&qeQIej'+!!=>H"Oj(FbQ%W<\,b.]"Hf#RG16Bi"\r#"St<s5!/^aZdaA7$
!r`2^!!&.r!!ICI+Au,!!;ZZt56M+[N<"P1li7.rRflG!rVus1ErH1A$)IWo!!L`u"9d-:!4W"0'8G6A
!s\r3#PS4M!.k1S!"YJh(9d];"T`6=">IWR!42_01,;E(+;!''bl@`of`;$Ti;eH0PlLr#70GGOrVurQ
rWE6/_u'Ld!6G3E6UOBITE2h.\Gu\&"9HaIJcMbM"5!_mbl.SG!FfL@"N9I'WW3#dg&M*Qh#IO2";R'!
!7(WH8H][_!!$3W!.k3c!!E[/"@ues!!SLI/-JPYdK%&_!(Om,nc/b."CqOu!9=+^0EdgUirB3^&-)\<
`W1Sjdf9Mk2["HEr;Zsqh?6D8^&Wrh"XaH1aoDEn!;QTsHN\]sirB&\XT3qQkPtbe2G$K<&H)S3Oiml!
&ukr&!!A_oDGKHsNrT80"Q5F;!.k3&!;lg#b23=<Pl^g`"@#H\NrbOHZ2auu"PF15!5nj;$fV-g4ToXt
irFZ2OT5mGE&Vs=&.egA!H/*BXUp'a`rH2Y"ALbh!8.>Q!YFAl"0P45$dJa(!2]`#!P<[]5QLob!!L_@
"N&=J!.k1N!8RVW(^*PjWW;Jf!<Nhm!!BAqD@<rSJcNF`"p)>_"@)tgrW!)L8-HfPec::%nc/bX"=IC?
!!3E3&?Glm!!D1O_@`OCJcO-t%[#aB0Q_CJ!!!%r8H`qR_>oAl"cNR=7K<GW!<81I!;QTsG=Y#'NW=Y2
j8]Yt^B?SYJ.M\\#Zh-3f?15rSH&a4"QL$X!4`(0b1H[s-85RW!Vl_I!.k4G!!Nl?8P+I@rW!*7$3UL2
b*i=9!!?U3j$qQ!c2[kM&D7$dTR-g1OlQLo!0$s^+=AO.UC7&$!Q3t""?/f(!65'A('NT"^]:nF"=]iD
%KXlUJcMMF"d'oMG1dK+!!F_e"Q'UV!0.$[`W>f6!!(gT"04-7>,hSK!!BJC"DG:FJcO0u!XK&Cl2Utg
!Jc"V&,cJ2-85Q4!S[UX!"I\aYrP'K%:R'^^:-!$iW/NL"4\cFBU&SY!!@6^"9P=uJcOp5s2sL)"IP,N
TFq/'"C'5SP$5j*b5`5u^t-4O/^#?nNa<_/D(9C>-NoVDdf9P8-Ug)s!.k4G!!3<,J;sV]!8db[&=&ag
%KZP/";uOhi"<?s!_*_$kl;3l!tu?PTkQ?L.+I<LG'<K\!H0jE!!Bu-`+\E9NW9/u">5i4!.k3&!:p0n
!KKa\=oJC)>:TgZ'9T^'!Eg!&!!@sOFKl,u[V+:LJNP/X8c&W%jlO@[^#l6=Yr4MfVL&I"OnSj+~>

%%EndBinary
grestore
np
grestore
gsave
28.08 528.679 mo
469.86 528.679 li
469.86 495.559 li
28.08 495.559 li
cp
clp
28.08 528.679 mo
470.16 528.679 li
470.16 495.559 li
28.08 495.559 li
cp
gsave
/5 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 33.12 9.39635 36.8125 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 46 
/M[614 0 0 -46 0 46 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
h#INX!WrS*!6tQH"Tel5\H%3]ZN(+6#m(GArW!*1%0?\C&)I<9!##nU&ebog%MTTl()If*)B0Y:*Y%uJ
&0E#<+sS?Z-7:/h.4Qi!/._^[">)5Z0JVPenc/bI!](4L!94%]1]fNmU]>uHa8cAu2`Lk!&,lP3)EIp]
4NRTr!!*H^qu@9k5!M:u$:7*"6q'R87n?3Dq>q."9MJ8X:f1+h<)lt#=:b')"'Jf32UVR/9*/?'!!%TN
p](CO!];ls!.k4+!!FfX!_m##!!Q_;!Wld@bl@rW=CY]KAS1pS%;'3\BPCUaC27X&DJsIp9QB_,%LI/s
E--5GGBeCZHY,DOm/R69>('K#!!@ZOIgbNANW903!eF\R!.k3&!:Tsk5B-a#4T5<`Jm/;/=47-_"D3=@
@<r>.F;osiLkuHGMMR0ro)]J^N>t9FMEsNaDJ>/n5%?.+!&<X:"C?s<Op'25"-We1$e56Q!!EOW!eFG6
!.k3)!!8$]!We@HrW!(>%0Df\li7N)"?'^IQNoET=(`*Y'+Y!j$tDJg?[A,VR[Y7d8Y,GS'U,#XN/U>"
St;RITqWm/%M9:T%hI\#qZ$a1Unnt4dJs@l!i?@@!4`(4Qj!O10[B`N!1<fh+\GEkr;Zt=VdPdUpAdP\
&!U-r5%Ztg.4/mf->oc]Wa'_JXHJaKXfege7BWhuI7aRG%9p,gZ].J^[=K9JJMe@S\$ujW]">Vg\e\tn
Kf0Il!!JX+%5g'<!!!#T!!=8D^G`(lcN"*"Z2tu\\H%3]Y5e]e>66(4rW!`bIKFMMOYI@H!"TSu_(<G`
UJFFOIXOi\!Z1t?%5NC:J-Ej/9d-"F`lFl#CR)FD4uQpM55rV(">Rps"-mkc=5a/M!!C=E,rV"gj8]<]
?iksDU]>uH_Z0h5Vm(NjrW"Z/>lk(F/1d+j?XKj;Za!e.!hINY1/"3[9MNc&ac&f_cHWN<c\g'XWmK-%
W+6SSb5)+M!!Ho<bCpJU!!S;_6TkDLJcPTH"B2N+D`3XVJcOF'"IK2k,!Gl)$#X#M!_6j%X'/^'!YHJ4
6,&c'%fcSl'"KA;\LA3?f)Y"7*!DYXVS0R<<+q>)AJ#M_'\!d.]2Fpp!7J87Iga^*".fS(=6]dH!!K&#
!nEG/!.k3&!:0[gWZM9hQMgdfelr1Wf5Sq.!WtiO_%3mQ)8Kmq;T;JaIS$,[L7Z\lNLQEjT2"%nfPk0r
!!ImZbmk96!!C.@d6,qZU]:Om1]iqOj8ac3JcGs*S=O%edes.ZG2!)(I%Er&Z)=E?+*"1[!_-c4^&T0;
KnVPB\^8(uNhDouYtNqmTteWj)'t*@Ycp_$E<N>DT\Pe2!!ENI/hK38!!BDsJ!%MH\Guc-!<RobcN&Os
Q2h*#Z3#ft1&_.[)%?WKhc5YqK8Q?.DW%NVZW[F)"Si$!2HLF8!#JsfCdI%=75]W8Y-0TQ!ckA$Wbi#O
5/R<8$s6VD<T<"Q/\F7r&^pRW"3+NJ/GT8G!8RVW:-+CHWW:?F"*cX('"@pn!3?/34gh0hDDj3L!%'N(
!aTW)Ono%\0X`T<B)M]8apVf0D'USA!;lg/OZbT54:_Dl"D5Kk4V%OZ=OR*I#?O&!!!"]S&,lPLAj3qR
j&2.oPo$TO%GTW.Y8RLbhAg[8;gU!V$P2n1"$A^S1&1eODp+thirJWM",b9[_3G#]!!>Kl!Y_=/JcNRd
"[/qH@,q^p!![PA!Wj8k/GT8Jj0/SKr;[j$-D77<!Z,DX_SSHGe3JE/G\`SCG]#HY[k6[S5SS?TUV;f<
dk(c>ctF6W1MNd'Rbo.bZOs:mZeM*pi+Zm2\Q(gC.OckYirB2DgB(m7!!NQKLK4BTJcPTH"2"d=.?4C[
!7UuY4bkYR4u!$;%^UR9(H+2I!!A\E$-<&F1>FVd!ca1-DoO(LIs'G!:>'Z.T8(6=RiL=<h&T#3)]Xc+
[^JuOJZ_a=fu0M(_i2"C#uIG[kMTJhO2):Y!!J!K!kXcK!!D=)LVi<VNrT;p*D38sq#H!HMuWl4b4u&#
!":'V=YMQ1!0u'jIl94]!!ENuI?#lX!&W+m/cq5ZOLZgP"pX3m6"O+t^5lfOBn'KS!*6%[.94I&%-K&g
dZG#=(;#ZA\tU#%5/G\F!!+tgoDmnO"dF-9*FHt?!!?$?7q^?PUAtBXV2@Fs!.k3E!!*Tbj8f)X"=KB7
=Tn<r"j.SaS^RiC!!PR=!j`ULW;uYm"=[&KF?S1T"&I*1B>=MW!!><ZMET8cJcN4Z!=ppB!!F[5!a,["
!<)s%aqb/Odg,jP"[:Q?ZP<k?!!F`F>')q)!!!#T!!=)\7qSb$c2[st+!;0+!.k3K!!\8&>ub3s&,#u+
'8E'L.fB>MCg/`Cb5;77!!UfM@,$K#joFrP",[O_AsEAV!!Ao$?n%lOJcNF`#J&IgP1Xq[&,6,.^c)]T
W]'eU"<4VTL!o,a[f?Ro`leZa4kK`<(`uL&!!'n:!=pp%!;HNr6S=A>NrXb3ci=*dV>^MtMA").!!P'F
%0DGgqu@$@gWXV$<QI=h1"QEK!!U3/SI*\%f`2++IB6rD!8%8P0U0*J"-Q9LBDDOZ!.k44!!1GSr;mJ#
A65"[0`[Li:C0Vo<7:[E%V8BfbM1jGf"9_)R)m(c`rOus#Udni>rN;p!"drd"+5NuaOL9c!!@rWFZndc
JcLB&q>_2GblRrM3!.jCJqD'U]:1FDh5HY9!"`L)2fEf$Erj4LS@.R*-p05l!;$6sQUa(<b:*Dk.GXt+
U0GO&^]:nF"Cg$c=^KDSJcLi3#,6MI7O!@BqZ6m%$&3fToDfC[-u1-;[NS0s0BZ?O<soP?!!gjO!WpIU
!!!!2h#IOB!BPS-!7(WJ=.]P!?F^&f!2TZ+<8C.J2g:0c8kK.WED%T/mJmat!'*8ZF<YfQG'A7>B9<_0
!"$\$9$@\VQN.#Pli?h]!`m+Zr;ZqHZQEV@!:BgiQ;liT&,ZD1^n1[5=/5hJ!4`(=l(4FII=E&^I^%K]
R$[":%g7K!43jJ+Lqfh#e9NFP.02=;\c;snU9F^CW0&gm!!68b&,cJ3$SOQk"9=)T!>.^%g:5q(r;Zs1
ErpMdNrXb3blA7'NS@&,N(6B'a:L$f$P2A"&!4>eVGDhnLY^[+Tluj>&+BSE!!Y?<YY*."@bq(cPRmWk
"3!=A/,fMM-L*MZ!1<fs.,=q+7kM;sj+=5J![KJq!.k3&!9!n[51"@'r;m:b+ucO6-ka@&b2iU8HYjTg
`b@j\TIgp-_80_n=HqeFirB8F"Tm=R4OjE<f$&aY!!%89F&guqXoJMdJ[,1U#a;U$+W=Vf6n76tJcLB&
oDf(Zf9<GCgIhAF#0\sg-U,>gjT#rr^fD1WImu(KTqP7!=[75Q.`%@t!;QU!2Od<Ykr(9H!"*nT#ukP[
ag#-l_8lVn!!VK.!l`DDqZ6h'lBfitJcLT,"j#]_k_=TiIG:Sjr;m1qetWkoOUpIP%mK6tNK'I&C*dfL
hG5qSQHT=4;]Z!U=#'OO!!(dS$9t*`K:F#U!hImRZ2iMW%ckM/VA<;O)*?1!ZCdnY\c@<^_#OKiQeMKG
AS]l:g.;IRVu?`%*Ss%m&hqK,!9aCo/=DoO49.MmVC`V9Tr'1gb0L%jWaKf\1#i9(!!H8B!a84q!WnR2
b+/P"!"EP"!k2bA$Tr$#[%`.1U]>uHec5\)eGp7pWGL0,PKQQ"!_ed@^0`>*2Tj21!:g*s.Cs;2G3$A;
B>Kqa!!@eCN=OA:!EQE'!X-bB%GI2)!!A6@_gD:]!LXLY!.k3^!"rn)R[fSIVb.!lF0;2mj5\pK$fD!e
$\_G\$g!fZ4*BYZjh&CPb1lt"/;=3C/COS+";b>F!e+%S9#&44!1*ZgD#j_&#OqeG!.k3p!!bEI>QZ.5
%8-O"#(VI;KOY,qi;aHj<)FJ77id"MagJXg,GERub5D>%!!K7B!^FiV!".jF8cf(P<LX%d/DL6;!""u&
QOf5,!"`WJqu?kQ9`daIg]2p+JcOU,#_fnu7nn&RZ*F90#26P(^4]Pui;aEj.MRJKJ)S]_%0FYT`[21)
l2^Y\"39/[A^UPc[k7`b(I!2<!mt>p!:'V<dPenW&li;+QsWiB_SRg*=?VlKOV36]];SWSGAY]3D:$&;
k%npQBN5\6+'[8Ra8gelJcP6>'*M<GC"LroS<M,g!WgUmO*an4&)R?r2UkT$G6jJlF[J7<HOK!:"HeI3
[qGF8!!(gT$HNs"'Yr.YEWY83li8&7#jU]RW-EPil=7Y>!&5#,Pg\"&&'>F*%fe==&,qmq&+KW#QOj&q
"(K%XHQ/#`Ul)O#L7>BM0-Z70(`4PNdjAsm+?BS.Z9%X[#f@RL,&m\?5@Ur!JcLB&rW!HBl(LT"PM8]&
S"X[rHR`LZ!"*%@DR>@lTkMpgQKnMR<D3JW#N5[Q!!m$lPQ1^6J-(f"!"<EjY?Ro./i^*sSOuNM!YsGC
DS!NCPs.+I_0`lY;A1Q34Y.-prkTPjAePh,3LH`mKIC7U/ZoNa!hBd?1eTZ0@*9Yk>6Q)T/kQ1+'X1,u
Mh;s+["4mhJV+nm26G]j_cm!?!_JX^irB)%]`<WaOT5Rn'FY0iN%Y)2"Ke+X-\VT;Qe_WO"G@LdhmGsL
D_ln-ik^lL!!Lh-+6!gT!#]YTEMg:YGBhV`ePD?&*LjK*/M1ksT3X'AncAqd8tARHo)]=0Ee]>%fu2,Y
+eGO,p]:q/?urKs)Mo;KGAa-[\0_-K#mM9'[]S/]-<(KS4q32YaC?YZ3JE1B;Gp@.#,+!#/qI"5M#`,-
U&Y]f]V2H#YlY!MS$d0OW5t=q!:9as4ZRgnFK?N=+AAl;DPJWgo`,(iV2$MN!!0ouq#D-46TUbpI^!)]
J2GKH3_E#8YrJSVb9T&>!WpS);C>RU?[,S=5`!]hFM6^ZkFeKRVcm9%V$V-iZEON3!>o4M@*Ap!Y[)Z6
91s`OP9@3Vh/_3+6("#.!!3_!2XLJK$Tou$i"eKH!.k3&!58F6PRmQi&678j73Psk3W]B8\):.^Qj_gP
'*&"dA(1d"(C#[QS5"a2iOlfePktF`_Tth"0\-4)QI>R/!Qmn*!X0[9S/m-br;m>Y6G(*Daq$3,0b=7<
"TSO(@K6E+!!lZ:#RHK%Ah.?i!#C\['S:p%jlhtD1K'X/H$SE/@m.mCOfAD5!.k4"!!/4Hp&G[UUHtT+
ZN3#e![&W)i4CC<Qeh]POXr"qL"oUE$6.:97mdIeIm76>!+AS'GRqst)3:uSRTXHVkgAO1^-4]q^c`?/
;CB:=#F$t0!!-D8o)O@BJcLB&f)QEn->M,H8$K4gV)3g#U?QtQ&s:rL'/jKj\[f:h2lj<T)gL:ifOOt?
QhUO\!7q2Z$YF!6"HefLOZ\bj1&V(T&!W=$0u<pB!.k3&!9aCs-u3Tofj1-M!ar3#6Q)VmJ%V2cdbXs6
$WggN<I<1[\285Q!6Pi3!.k3&!.k3&!;Z["^f,`>XPF?_!Xd-mS8^%g];&@VdbXs-OZdkEEYQXrJcLB&
JcLc1$8?#NFupY8@%@?#rW3L398njgh^-h'l/uI_iW''u!OL:`!.k3&!.k3F!!k8hj*!L'T4"5f!Xr7*
N/`bQ-.UQ1k@"br!9X=aD?7)noDjC~>

%%EndBinary
grestore
np
grestore
gsave
28.08 560.539 mo
469.86 560.539 li
469.86 528.679 li
28.08 528.679 li
cp
clp
28.08 561.079 mo
470.16 561.079 li
470.16 528.679 li
28.08 528.679 li
cp
gsave
/6 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[442.08 0 0 32.4 9.39635 4.41247 ]ct
snap_to_device
<<
/T 1
/W 614 
/H 45 
/M[614 0 0 -45 0 45 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&JcLB&hZ+&c!WrQ/"pYD?$4@7Or=0,E&.fEd',2/s(ZbW!(_@Q'hZ1au!?3#k!.k3&!.k4=!"Bqi
+!;[L'd=kJ,nMCMrXK/\-n-Vr/1hn7!!4bR!Vl]t0/+7uaoI"nJcLB&VZ6cR!AiU5qu@'\2)Z4/3&ioZ
4$<KP(ahHm5!L4s5St>(5mTe&.R,.F6UX?Y7KNJg"%PmR9!nYN!.k3&!5&:5/k\me!!iU"/N6F#,u@GZ
;@X18;cF;><E3(#-72Vh8P)uc=^!(T>[:ZC%:Gh/JcLB&JcM;@).>F40k4`\AL_;))&[+$BdIL%.Vij:
CMaUk->le$E,fo>F>=q\162Ee!.k3&!3?/(G'>K^3dL[M$[X@DG^OoH$@-rH-iOS]&:]4-"T`d(!Vl]q
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k1N!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k1N!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k1N!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k1N!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k1N!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k1N!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!5SYc~>

%%EndBinary
grestore
np
grestore
gsave
63.18 470.119 mo
153.72 470.119 li
153.72 463.039 li
63.18 463.039 li
cp
clp
VCULPL+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
63.18 464.899 mo
(This)
[14.6542 11.9904 6.6624 0 ]xsh
grestore
gsave
63.18 470.119 mo
153.72 470.119 li
153.72 463.039 li
63.18 463.039 li
cp
clp
VCULPL+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
111.72 464.899 mo
(fish)
[7.99662 6.6768 9.34099 0 ]xsh
grestore
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TimesNewRomanPSMT gcheck setglobal} if
4 722 72 <0002004cffe4035303b00014001d037db10202435458402808161415000c
0f100255000e0c0f1002550e0c0d0d02550e153040000120003000020000
10000200b8ffc0b41314025500b8ffc040111111025500000b1b25110700
0710070207b8ffc0b40f10025507b8ffc0b5131402550704b8ffd6b41314
025504b8ffcab71212025504310b0b003fed2b2bc42b2b5d3fed12392f2b
2b5d5d5ded012f2b2bdd2bc02fcdc031301bb10602435458401d158000a0
00b0000320003000400003000010000200000b1b2511070807b8ffc04024
1010065510072007b00703000760078007a00704079204a204b204030431
0b0b07081614b8fff440260d0d065514141f1e15000c0d0d0655000c0f0f
0655000e0c0f0f06550e160d0d06550e0e1f1e1112392f2b2bdd2b2bc011
12392f2bcdd0cd003fed5dc45d5d2b323fed12392f5d5d5dcd31301b4019
125f185d1960006014d6030519201c3917201c3916401c391fb8ffc0400a
434a34081f430d5d361fb8ffc0b32828341fb8ffc040532a2e341b061909
58135e165f175a185b1a07010309060709080c0515490689028c06870c8a
10851da302ab18b513d402d90fda10f402f3031312600760087007800789
09c107c80ff007080401070d84020309baffe00006ffe0404a3609460247
094f1f5402540962027202891389199913a409a40ab808b509b00ac702e7
02e00cf40a1408d007010007d007027107010007100720079007a007b007
06077d041400301615b8ffc040131239125f157f159f15df150415151bd3
040104b8ffd0b2143904b8ffe8b2133904b8ffd84048123904310b0b5c1b
011b25110707cc0816281b390f16016f167f168f160316f4141480080130
0890080230088f08df08031008400860087008b008e0080608aa0e150400
89000200b8032c4012300e400e500e03000e100e200e03f00e010eb8ffc0
4009434a340e431e434b182b4e10f42b7172724dfd713c10fd5d715d713c
10ed5d712b10ed003fed723fed2b2b2b7211392f5d4358b26f15015d592b
3cfd3c10f45d5d7172393130015d00383800715d014358b4060001020271
5971722b2b2b2b2b2b2b0072435c58b90007ffc0400b23390c402d390d40
2d3908b8ffc0b2283907b8ffc0b2283906b8ffc0b21b3907b8ffc0b21b39
08b8ffc0b21b3907b8ffc0b20a3908b8ffc0b20a3907b8ffc0b2093908b8
ffc0400e093915101939192011390d201139002b2b012b002b2b2b2b2b2b
2b2b2b2b2b2b595959130617163332363717060623220235341233321615
252126272626232206da016464875a852d1f15ca98a5ebf1b69ac6fd8701
a805101963365383023bcc747463781489e10101d9eb0107cbaa3a582438
4081>TimesNewRomanPSMT AddT42Char 
4 13044 87 <00010014fff1023c04c1001b01fdb1020243545840251d40121302551d40
101002550b0c18121202550c15130105131812120255130e1313025513b8
fff8b40f0f025513b8fff4b40d0d025513b8fff0400c10100255130b082c
0f161404b8011bb2000106003fcdfdd0cd2fedc4012f2b2b2b2b2bddc010
c62f2bcd31302b2b1bb106024354584019170c10100655160c1010065515
0c10100655160c101006551bb8ffe8b4101006551ab8ffe8b41010065519
b8ffe8401410100655700b010b0f1b01156914014914011404b8011b401c
0106082c0f0b1b0105021010065505080f0f0655050c0d0d06550513b8ff
eeb41010065513b8fff0b40f0f065513b8fffab70d0d065513131d1c1112
392f2b2b2bdd2b2b2bd0cd003fed3ffdd05d5dc010cd10c45d3130012b2b
2b2b2b002b2b1bb9000dffe840410c395f015f02023f1d99119919bf15bf
16b819e819079f1d01891a014f0c4f0d5f0c5f0df5180506181518271803
161518191a030118191a03141ba00103153004b8011b401c010330020201
060c35082c0f0b16cf15df15ef15031565141bcc000bb801ec402c200c01
0c2e2f1db01d021d000101040405241450130180130100131013b013c013
d013e0130613601cab89182b10f65d71723cfd3c103c103c105df45ded10
ed10f45d3c003ffde43f3c10ed10edfd3c10e40111173900111739123931
3000715d0171725d00722b59590111331523111416333236373306062322
2626351123353636373637014ad6d63328213e11272380442e582a913773
2d172904c1fed346fdae593e29286263335f63026821166948266500>TimesNewRomanPSMT AddT42Char 
5 0 90 <0001000dffe405b40394002c03cdb10202435458b626211e110e022cb803
e2400e00092618080428251f060f060006003f3f3f2f2f173910fdd0d0d0
d0c0012f31301bb10602435458b90026ffe840440d0d0655181c0d0d0655
081c0d0d065518101010065508101010065508182609040028211e110e02
792c012c00752501250b752801280b1f060f0600062c2c2d21212e2d1112
392f11392f003f3f3f3f5d3f5d10dd5dd0d0d0d0c01112173931302b2b2b
2b2b1bb1122eb8ffc0401c3f351627201020112527202e5f2e6909702ee9
25e928f825f8280c2eb8ffc0b213352eb8ffc040c81b1f34212e2e296436
1d19191f1b23102e040a261d262c2639265517a717a718a726080b253724
37274f004c014d074908472446274d284d298807801080118d2588288829
802e9a109417a718a725bb10b925b928bf2ec825c828d925d928d02e1f00
050407061504170925072709280629351743104311500552075618522989
0b8f1088188919892388258826802e17870986178726030d095901771077
110409090826262725250a0107021e011017111e102023211e2000292c1e
000f0a0e1e0f1f191e1e1fb8ff86b308282720b8ff7d4040182524200807
080907242928142929282627262527300809140808091815181915240a25
140a0a25232424301819141818192926231918170a0908070a002821bb01
ec0020001e01ecb31f010f11bb01ec0010000e01ec400a0f0f10101f1f20
200002bb01ec0001002c01ecb301000618bb016a0025000801a6400f2840
2725252424280b20fc0f650a01b801b1b4c000652923b801084015401b2f
501901a01901bd19cf19df19031992242f18b8011bb7200f250110250125
b8ffc0b30b0c3425bb0110002600150167400c400a2f5f26014026802602
26b801ecb4097d272f08ba011b0008011b400a200028018028f0280228b8
ffc0b50b0c3428a007b80167401b5029018029010029102920294029b029
c029d0290729602dab89182b10f65d7172edf42b5d71191aedfde4f4ed5d
7118f41aed1910f42b5d711afde4f45d717218e41aed10f41aed10f4ed00
3f3c103c103c1a10ed10ed3f3ced10ed103c103c103c103c10ed10ed103c
10ed10ed1112173987052e2b0e7d10c4870e2e182b087d10c487052e182b
087d10c4870e2e182b087d10c42b2b180010ed0110c00010ed0110c00010
ed0110c00010ed0110c00010ed0110c00010ed0110c00710083c083c3130
015d5d71015d005d01722b2b2b015d2b435c58b52610140c3f24b8fff0b3
140c3f13b8ffe0b21d3917b8ffe0b21d3917b8ffe0b2143917b8fff0b217
3925b8fff0b2153917b8fff0b11539012b2b2b2b2b2b2b2b595959132115
060615141713132726272627352115060706151417131336353426273521
1506070123030123012626270d0180352111c4c5341827163c01b4481e14
08d0c114273901215729fece29e5fef525feda1d383c039425041e1c1f2c
fdf101ad873c170e032525031710231415fdf201fb3620131e0225250d69
fceb0249fdb7030249330d00>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/e 72 def
/t 87 def
/w 90 def
end
TimesNewRomanPSMT /Encoding get
dup 101 /e put
dup 116 /t put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/VCULPL+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a /b /c 
/.notdef /e /f /.notdef /h /i /.notdef /k 
/l 6{/.notdef}rp /s /t 2{/.notdef}rp /w 136{/.notdef}rp]
VCULPL+TimesNewRomanPSMT nf
VCULPL+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
70.8 493.699 mo
(is white)
[6.66479 9.32899 5.93999 17.3208 11.9928 6.6648 6.66479 0 ]xsh
477.48 539.839 mo
511.029 539.839 li
511.029 513.679 li
477.48 513.679 li
cp
gsave
/7 /CSD get_res idxcs
clp
[1 0 0 -1 18.6836 565.492 ]ct
[33.549 0 0 26.16 458.796 25.6525 ]ct
snap_to_device
<<
/T 1
/W 70 
/H 55 
/M[70 0 0 -55 0 55 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcNso!<E88!!36*"ht$>"pYD?a8ku8!X];Dg&MEg%M&aT&J>`k(%2,(((1r:!"0AU)&aG6*=Eo1+<^t6
,7#P@-7:55!!4T!&`<X'.gl_9$O[1k$SF(d0ekF>+!V.$2"^hM2)[DO!"&]c3BB5a4[&j15l(H_'1"rP
o`,%]$UrnP#t@EU8P/s_"#`g<!!5hg:@/&O!!5q(;#UFr;%$:g!!?/!,mN3+"'&B'(&e17=BSho!!6@4
>knB]!!6F6?Mjd(?XW4#!auIDh>dWZ@Uis3!!E9%)G+Ms!!6=3%cmZm3!:[BhZ*^j9ka(to)Ji+$YnMu
!c&0Xj8]6t$Z4c$!_Z[6rW)'\!\bf^hZ*^m$ZG)+!u5c(B''*j!!@4]Eu!a9!_NiBhZ*_#$[1P1!d>#s
nc8(X!dT*'irB.-$VoU[!dkB(m/R09J+s!HJ1cBQ!9*t[Fpiok!!I:oKF<M0!!3<J3Ssf<L'/+Z!!e:8
#Rbs8-ij)D!bi%"huEgR9oJTC#%3CL$\`a]pAb8T$XV`k!fm^Wp&G=(Fasi-OHC+I!!8;kPMcEBPR@im
!!ZPjQ4#T((\7V.3?jgK!!-[f!=364!!a7+R61i_R[`jJ!sU#,ADmLkS67d<Sc/Tp!M5pV$_a;i7dpBZ
=:5Q'!;6C%UnNd-=f"&J":GU76Ds2N!Z)6ChuF-]$`QB5.]TNr402BH!!981?MFNb!!ZW0QN.5VYN>fd
YR=(]!!74q(#o8r!&>`1huEe\3T:#@YpEJVhuEccZL7ec!!7-kZek``$aemn!YYs)hZ*Zb[JU$f!!5b#
[bh&c$b,*q!Wib>jT,/X!=QHt!!3Z=]&*Jg$b,*q!YYr8nc8Rf!Fuc7!!*IDiW'$>.])S6"$!n=]_)7*
$_$#S"/Q,[!:p0oYJ$S:*c1KL!Eh2B!!3@%Vu-Mr^'h^J!!Y<r_$e,'Ab5s()gV\R!!C,n$UXak!l#,I
p&G:iFMnR+]+jf9!c/6Am/R;)`\q:p'`7q5;]c6aq#CW#R:6QE;,d,f#S:WI!!!W_Q5',ppAbIU4UX%Q
!'[qQr;Zn8$bQ<:#-l7k$O\mMo)Jkk0k([m!!8DnPjn_\au9\Pb7t!WbR8.`!";'0Kn9aJ9$F=D3mGt?
!!E]<cNX@R!!!4@$[ZFX!![ge8.,fa&,cJ0RB@"s!"#c1$V:U3$WKH^nc/i+Xj7AY;u?V!7P>-pIn'A:
#m&DJd7CDJ+ER\^!!8Qk!W)j$8qT&SdA.NM!;um$A/ksbdLl<U#ue?C$e'hbBU/f#$NmGF1kGK'"(p%@
$0)!fVh;?OpAbT!MEN41/g[?dUF9aK!!6b+?1\-R!!3]HJZ&S%!.Y~>

%%EndBinary
grestore
np
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 ]]
] del_res
true set_gvm
/VCULPL+TimesNewRomanPSMT*1 uf
/VCULPL+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
