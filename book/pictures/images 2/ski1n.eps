%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: perf06.pdf
%%Creator: Adobe Acrobat 8.0
%%For: leboudec
%%CreationDate: 20.02.2010, 18:12:08
%%BoundingBox: -181 180 271 451
%%HiResBoundingBox: -180.5691 180.5692 270.3711 450.9402
%%CropBox: -180.5691 180.5692 270.3711 450.9402
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: 
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 4470 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xap:CreateDate="2010-02-20T18:10:45+01:00"
   xap:CreatorTool="PScript5.dll Version 5.2.2"
   xap:ModifyDate="2010-02-20T18:10:59+01:00"
   xap:MetadataDate="2010-02-20T18:10:59+01:00"
   pdf:Producer="Acrobat Distiller 8.1.0 (Windows)"
   xapMM:DocumentID="uuid:80de74a5-849e-4770-9d01-9e7843af4818"
   xapMM:InstanceID="uuid:e15c20d2-5c1f-4505-8474-545bdb99fa6e">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft PowerPoint - perf06.ppt [Compatibility Mode]</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>leboudec</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -450.94 translate
pgsv
[0 1 -1 0 270.371 0 ]ct
gsave
np
gsave
0 0 mo
0 450.94 li
270.371 450.94 li
270.371 0 li
cp
clp
[1 0 0 1 -157.395 0 ]ct
gsave
94.98 583.051 mo
27.48 583.051 li
27.48 -136.949 li
94.98 -136.949 li
cp
eclp
27.48 583.051 mo
95.01 583.051 li
95.01 -136.949 li
27.48 -136.949 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.2 .2 1 colr
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPS-BoldMT Initial
ct_T42Dict begin
-0.555 -0.305 2 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /TimesNewRomanPS-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3216615a8d000000cc000000606376
742070f2f1560000012c000008266670676d682061fb00000954000005f2
676c79665f77646900009db40009309a68656164db4f836400000f480000
0036686865611304167800000f8000000024686d7478ced248ab00000fa4
000035526c6f63613dcef628000044f80000355c6d617870168f04780000
7a54000000206e616d657f5864d000007a7400000ffb707265706b6e3b5c
00008a7000001341676469720000000000000000000000000003036a02bc
00050008059a053300000125059a0533000003a000660212010502020803
070505020304e0002affc00078410000000900000000544d432000200020
fffc056bfe460133072101bb400001ffffff000003a7054c000000200004
058e001f054c001f054c001c0394001b0000ffe10000ffe40000ffe8fe4a
fffc056b0023fe6affe00313000001240000012400000000000000000025
0084002400e8009600bf005d00cb02030045012e00580004011800190002
0139004b011000170005010a00280023004b00500015004a00e5010d00af
003100ea014600810125004f009c0022004e00160041009100a00147ffe9
008100d3016900ab001700a801400027004c0148ffdf00510050ffb7012e
0000003b0097009a010e001f004c010a0123ffde00220073008700ba00d6
00ff005a009805a0ffe900500052006effb7005c00d1015a015bff1c0049
006e007e009800a100bd00e4018801c00405ff6000350062007201070113
01280382ffa8003805d809b5ffc4ffd00010006e00a100ba00ec022b0446
ffee004000e80401ff680003001300330033006e00a200b600dc01180135
0343000e0034005c005d007c00af0328003b00480089009c00ba017b01af
030effa4001700370063007f00e0017801c0022105d805f0ff7a00120027
00340052008a00a400c100c300eb011801460154036dfe3fff4e00010008
002b0045006e0084008600ae00af00c200c200c4010f01210149017b01c1
01de01e1036e03e6006300a700ed00f600f801280169017e023f02820532
fd81ffb5002600350040004500490057006c00ac01260140015b017b019c
0277027e027f03b603dc042804efff38ffc30006002f0040008200aa00b6
00ce00d300d700e50146014d01d6027e03b30586ff7b0012002f0068007f
008400a500b900f501050109010c01140120013301370178017b01c001e1
021d02230258036203af058cff79ff8d00210024005d00650068006a0083
008500b700cf00e200eb00ed011a0120012f0137013f0150018d018f01c4
02cf0357035c03960440049604ab04c204fc051105c2fed1fee000130021
00240030004d004d005d0066007a007c00b800b800c300da0103011b011e
012f013d014a0150015f0166017c0190019501a301a601b601c701d001e9
01ef01f90218028c029402bb02c502cf02d0031d032a0344039f03cc0421
04da04fb0761fd1dfebffeefff0bff2bff33ff90ff9cffdbffed00010008
001c0025003f0043005a006b0080008400900095009d00a700b400cd00d5
00d600df00df00df00e400f000f600fb010601130119011b012201230127
012c013f015701580177018a019301a401c601e101e401fc0200020c0222
0222022a0236024a025c028202ec02fc030a032303410378039703d203fa
04790532053205ab05b505f006e4072508ccfc9bfddefe00fe69fe96fe9b
ff3500030006000e00130019003400420048004a00570064007100710072
00760077007a007a0083009c00af00af00b200bb00c800cc00cf00cf00db
00dc00df00e400e400e400e900eb00f400fd00fe01020105010501080108
011b01220123013001370143015b016001650178017801780178017b0182
018901980198019b019e01a101a601d101d201d301df01e301f502000200
022d02410247024a0250025b025d025d025f02630281028b02b402b402ce
02d602db02e202fa03100311031f0327034503670388038a03b003b403d4
03d5042604410448046b04c704d1053205480549055f0563058b05a105a3
05c205ca05e405ff069306a206b806e8070a073607500754078907a907bb
07dc07ff08270120014d011b0129000000000000000000000093015b042f
029001ff02b800db00be027403cb029401ab000000000000000000000000
058a038a0364005f02b803bd029d7c9003e203ac02820000044400000000
003d010a00cc00bc00cc05d3041505e800c7021a00ee00000194036102be
029902180136033b048504cc0050007905a305a302df020702af000001eb
0064005f0055011900f2045600ef00c800cf058a0143014602de01ab02c6
024a005d00d800a402bb009900a0006501370274036400b500fa009101b9
032001b60025007f00d000ec00e000000000000000000000042ffd42023f
06180276063a013701b90151ffc70229ffeb023f02e1018500db03fa0190
0156014e012f00a600e300bb00d50134011f04fe041b00d100e4011e009b
00cd00e700b300e200ca042400b800f500b90334005a04e00123012ffdc9
fe440574038301f602410002001700500015004f001700a8005100980052
0049006e000e00af017b017b019c006a008300eb00cd0122000005d306da
009a008f00ba0315002503a5028002ff03c80420009200e0034c009b007d
00f8011c013400a8006d006900000420ffe6fea4006a006a003800380162
015a0044006d0048001eff6d00a600a600400040ff5cff990559052b00ce
014c011500bf0140011800c800960509feed004800b4009500db0048018b
00b3fe6400c000ea01180125013203b003ed0576059005aa05b405be05cd
063100780084009b00cc00e200f4010a0120016300d100ea00f701080142
0019002c00340041003800480058006c025903bd0043011a007000d30028
003700420050005a0064007300780082008c009c00a500bd00ce00f00110
015c00be00d801020117012c016300ea01080041004b0055005f007300a6
0109018301b300410064001e002a00eb00fa010e01380274002c00400082
009600b600c000cc00dc00e600f000ff010a0120012c013b014401560163
00f70057006401100136005001b10000ffb60039004e004403cc00e50024
01100042012201a400f0006000e0000e001d003905e30102002cfe4eff38
026903bd011600ff000e00a00054001b003d01710041000f005000fd0015
014f0035fe47003900ab0080005005a50016002b00ac0115021504570555
007300da005c00ce0072ff58019a0744000040425554403f3e3d3c3b3a39
38373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a
191817161514131211100f0e0d0c0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b09051582320b00d44235921212d2c20204518684420b001
602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c
45b01a234445b01923442d2c2045b00325456164b050515845441b212159
2d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643
b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c6423
64615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb0
1723442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b0
1723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959
182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b0
0185592d2c20b0032545b019234445b01a23444565234520b00325606a20
b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a4520
8a54582321b03f1b235961441cb114008a5279b31940201945208a545823
21b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c
0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011
432343650b2d2c4b525845441b2121592d2c0120b003252349b04060b020
6320b000525823b002253823b002256538008a63381b212121212159012d
2c4bb06451584569b00943608a103a1b212121592d2c01b005251023208a
f500b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b0
062510f500edec2d2c20b001600110203c003c2d2c20b001610110203c00
3c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c
76b8029f23701020b8029f4520b0005058b00161593a2f182d2c21210c64
23648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59
b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d
2c0c6423648bb84000626023212d2cb4000100000015b00826b00826b008
26b008260f10161345683ab001162d2cb4000100000015b00826b00826b0
0826b008260f1016134568653ab001162d2c4b53234b515a5820458a6044
1b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b21
21592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b
03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b004
25060c6423646164b807085158b00425b00425012046b01060482046b010
6048590a21211b2121592d2cb012435c580cb00425b00425060c64236461
64b807085158b00425b00425012046b8fff060482046b8fff06048590a21
211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58
b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a
034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c46234660
8a8a462320468a608a61b8ff8062232010238ab9032703278a70456020b0
005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b202020243604259b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b2021002436042595959592d2cb0024354584b53234b515a58381b
2121591b21212121592d00000001000000050ccd382a3dde5f0f3cf50819
080000000000a2e3354600000000c5b1f691fb89fd8c1000083500010009
0001000100000000000100000721fe4500571000fb89fadf100000010000
0000000000000000000000000d530639011c000000000200000002000000
02aa00af047100b0040000280400004f0800008e06aa00520239008c02aa
005202aa001904000072048f00280200004202aa00320200005a02390002
0400004a04000087040000320400002104000033040000450400004c0400
0045040000480400003f02aa00af02aa0098048f0029048f0028048f0029
0400007d0771005c05c700100556002b05c7005105c7001b0556002904e3
002e063900530639002b031d0029040000160639002e05560026078d0029
05c7001d0639005004e300340639005005c700260473006a0556004a05c7
003005c700100800001205c7000e05c700120556002102aa00d602390002
02aa004304a600930400ffed02aa00260400005c0473002b038d004e0473
004f038d004f02aa00420400004d047300460239002a02aaffc704730044
0239002b06aa004c047300460400004a047300270473004e038d004b031d
005102aa00260473003f0400001305c700110400002f04000011038d0015
032700a501c3009f0327005b0429000c05c7001005c7001105c700510556
002905c7001d0639005005c700470400005c0400005c0400005c0400005c
0400005c0400005c038d004e038d004f038d004f038d004f038d004f0239
002b0239fff10239ffdd0239ffe304730046040000490400004904000049
04000049040000490473003f0473003f0473003f0473003f040000630333
003b04000080040000230400005c02cd004d045200010473003a05fa003b
05fa003b0800fffd02aa00e402aa00160464000f0800ffe90639005105b4
00350464000f0464000e0464000e04000000049c004f03f4004e05b4002b
0696002e04640034023100000266002e02a400380625000905c7005a0400
00440400007302aa00af048f0029046400540400ffff0464000d04e5001a
0400002404000026080000af05c7001005c70010063900500800004a05c7
00460400ffef0800ffec040000510400005302aa009802aa009804640010
03f4002f0400001205c700110156fe870400ffe902aa005d02aa005f0473
003b047300360400006e0200005902aa0098040000530800003b05c70010
0556002905c700100556002905560029031d0029031d0029031d0029031d
002806390050063900500639005005c7004705c7004705c700470239002a
02aa001502aa001402aa001402aa002702aa00c302aa008402aa009102aa
007002aa005802aa00150556002a023900260473006b031d004505560022
038d001501c3009f05c700230400004a05c700110400001104e300290473
0027048f0028048f009a0266004a026600180266000f0600004806000048
0600000d04000015063900530400004d031d00290473006a031d005105c7
0051038d004e05c70051038d004e0473004f0400ffed02ab00d105c70010
0400005c05c700100400005c05c7001b05de005305c7002305560029038d
004f05560029038d004f055600260239002b0556002603c0002a05560026
032a002b05c7001d0473004605c7001d04730046063900500400004a05c7
0026038d004b05c70026038d004b0473006a031d00510556004a02aa0026
0556004a042b002505c700300473003f05c700300473003f05560021038d
001505560021038d0015051700290639004d06a2004e047700570427004a
036b0041045a004903b0000204fe00500400ffed04d500ae02c8002b07c0
00260800004f040000990800004f040000990800004f0400009804000098
07d5016a05c000b6048f002504cd0099048f002304d5022204d5010505ab
ffe905ab027e05ab027e05abffe905ab027e05abffe905ab027e05abffe9
05abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c005ab
01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005abffe9
05abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905ab02d605ab
006605abffea05d5ffff04d500920800000007eb013007eb012007eb0130
07eb012004d500b204d5008004d5002a082b0198086b01b8075500100600
00f40600006f0440003a0540003704c0003f041500400400002506000055
06950028046b002705d5fffd024000c6046b00c606aa00370300001a04d5
009202d6005c02d6005c04d500b202d6004d05c700100400005c05c70051
038d004e05c70051038d004e05560029038d004f05560029038d004f0556
0029038d004f063900530400004d063900530400004d063900530400004d
0639002b047300460639002b04730046031d00290239ffda031d00290239
ffdb031d00290239ffee031d00290239002a0400001602aaffc70639002e
0473004404730048055600260239002b05c7001d047300460627002c0473
004b063900500400004a063900500400004a05c70026038d004b0473006a
031d004e0556004a02aa002505c700300473003f05c700300473003f05c7
00300473003f05c700300473003f0800001205c7001105c7001204000011
0239000705c700110400005c0800ffe905c7005a063900510400004402aa
00af0800001205c700110800001205c700110800001205c7001105c70012
0400001102aa009702aaffd80400002304cd005a060000480600001f0600
002b0600002c02aa007902aa009102aa00e402aaff8405c700100664ff75
0746ff75042dff750639ff8806ebff750668ff76027bff6d05c700100556
002b0504003105560029055600210639002b031d00290639002e05bc0009
078d002905c7001d056b0073063900500639002904e30034053b000c0556
004a05c7001205c7000e063d001f0668004b031d002c05c7001604770057
036b0041048b0012027b002c0427000a0437006603be0003034e0042048b
0012042d0053027b002c0471002403ee001c0489006b0393ffec0391003d
0400004a04480065036000390427000a03b2000f0581002105d9004f027b
fff00427000a040000490427000a05d9004f055600290666004105170029
056d004c0473006a031d0029031d002c040000160806000c080400270666
004105cd002a05df00120639002905c70010054a00220556002b05170029
058100000556002907e9001f04390029063900200639002005cd002a05f6
000c078d00290639002b063900500639002904e3003405c700510556004a
05df001206df004b05c7000e0639002905df000c08c9005608c90056061f
004a07db0023054a0022056d00600902002805c7ffe80400005c04000049
0452004903a20048040c0000038d004f05cd000c0337001b049c0046049c
0046049c0047047d000c05730049049c00460400004a049c004604730027
038d004e03ee002504000011058900520400002f049c00460483003406c1
004706c1004704aa0024063f004e043b004d0375001c061d004c04540023
038d004b044c004903a2004803750049031d00510239002a0239ffdd02aa
ffc7063d000c066000470473004b049c004704000011049c004604290029
031d004908000041080a000d0462000f000001010000001c000000320000
0012000001020000008f0000008f0000008f00000090000001020000001c
000001020000012102e800590000008f02aa00ee000002af0000ff6b02aa
00af0437002c03ac002702ef002103b7003d0419003d02630038028a0038
04090043043c0038027c003803a9003803920027037bffdf0417004f0444
0038029b00380287002103d30048040f002703f1003803a8002c04840038
041e003803dd004303b60038058200380425001604c6003804df003804f8
0038020b008c03ae008c061000850263ff9203a9003803a90038037bfef2
037bfef2040f0027058200380582002f058200380582002f0437002c0437
002c0437002c03ac002702ef002103b7003d0419003d0263003802a7000c
043c0038027c003803a9003803920027037bffdf044400380287002103d3
004803f1003803a8002c041e003803dd004303b600380582003804250016
0263003803ac00270392002703a8002c0437ffdf0000ffdc0000ff250000
ffdc0000fe51028d00ab028d00a002da004303c0007e0196ffba00000046
00000046000000460000004600000048000000460000004600000046047e
0188047e0150047e0104047e009e047e012d047e00ea047e00d5047e009c
047e00bc047e00ee04350085028d00c1043500b3060001000600010002be
005806000100047e00a5047e00bd047e00de060001000600010006000100
060001000600010000000046060001000600010006000100060001000600
010006000100060001000600010004e6ffba060001000600010006000100
0532003905320039022cffba022cffba0600010006000100060001000600
0100049e0034047800300430ffba0430ffba0376000a0376000a060e0029
0708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba0528
0097046f001e035200030600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000000003000000046000000460000004000000046
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100040000150800000006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100028d007f028d00670600010005a0002e03c0
007e01e800000207ffc301bc005e01e0fffa039c0006039c000601bc005e
01e0001a05280097049e0011022cffba022cffba01bc008801e0001a0532
003905320039022cffba022cffba02be0036035200030532003905320039
022cffba022cffba0532003c0532003c022cffba022cffba049e00340478
00300430ffba0430ffba049e0034047800300430ffba0430ffba049e0034
047800300430ffba0430ffba02be006902be006902be006902be00690376
000a0376000a0376000a0376000a073200400732004004deffba04deffba
073200400732004004deffba04deffba0880004008800040062cffba062c
ffba0880004008800040062cffba062cffba0430ffba0430ffba0430ffba
0430ffba0430ffba0430ffba0430ffba0430ffba0454003403c000460454
ffba02e2ffba0454003403c000460454ffba02e2ffba0610002f0610002f
0270ffba0298ffba04e6002704e600270270ffba0298ffba045400290454
002902e2ffba02e2ffba039c0023039c002301e0ffba01e0ffba02e20021
02e200210352ffba0352ffba0454003e0454003e022cffba022cffba02be
00580352000303c0ffba039cffba039c0006039c000605280097046f001e
05280097049e0011022cffba022cffba0454000004c4000003e400220454
001a03e400220454001a03e400220454001a060001000600010000000046
000000460600010006000100060001000000004600000046060001000600
010000000048000000460600010006000100060001000000004600000046
000000460000004600000040000000300600010000000046000000460600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100028d00ca028d00c7028d00c60600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000600010006000100060001000600010002be00690100ffba0800ffba
1000ffba06390050046e004a065e003004cd003f0000fd7f0000fbbf0000
fcc00000fdfc0000fcd00000fda00000fe1a0000fdb50000fd2f0000fc96
0000fd430000fc180000fcd10000fef70000ff030000fe66041a00970600
0048060000180000fe4f0000fd8e0000fdb80000fcd00000fe160000fd2d
0000fbeb0000fba30000fb890000fce50000fc660000fc200000fcb80000
fc4a0000fc4a0000fc720000fbdc0000fdb80000fe770000fd880000fbfa
0000fd760000fdcb0000fe520000fc7d0000fdac0000fd5c0000fcee0000
fcf80000fc9e0000fc2f0000fc200000fbcb0000fbb70239002a05c70010
0400005c05c700100400005c05c700100400005c05c700100400005c05c7
00100400005c05c700100400005c05c700100400005c05c700100400005c
05c700100400005c05c700100400005c05c700100400005c05c700100400
005c05560029038d004f05560029038d004f05560029038d004f05560029
038d004f05560029038d004f05560029038d004f05560029038d004f0556
0029038d004f031d00290239002a031d00290239002a063900500400004a
063900500400004a063900500400004a063900500400004a063900500400
004a063900500400004a063900500400004a06390050046e004a06390050
046e004a06390050046e004a06390050046e004a06390050046e004a05c7
00300473003f05c700300473003f065e003004cd003f065e003004cd003f
065e003004cd003f065e003004cd003f065e003004cd003f05c700120400
001105c700120400001105c700120400001105c700100400005c031d0029
0239ffe8063900500400004a05c700300473003f05c700300473003f05c7
00300473003f05c700300473003f05c700300473003f0000ff090000ff09
0000ff090000ff090517002303a2002207e9001f05cd000c05cd002a049c
004705cd002a049c00470639002b049c004605c700120400001305c70012
0400001305c7000e0400002f05df000c0483003405df002b0473004605e9
0050038d0038063900500400004a05320039022cffba0270ffba0298ffba
04e60027022c0065022c0016022c0016022c0011022c0043022cffd20000
fef00000000f01a8fff502aa009002aa00900000000001bc005e0000005e
0000ffcb01bc000f01e0ffbf01bcfff501e0ffcd01bc001d01e0000901bc
008801e0001a039c0006039c0006039c0006039c000605280097046f001e
0532003905320039022cffba022cffba0532003905320039022cffba022c
ffba0532003905320039022cffba022cffba0532003905320039022cffba
022cffba0532003905320039022cffba022cffba0532003905320039022c
ffba022cffba0532003905320039022cffba022cffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba049e00340478
00300430ffba0430ffba049e0034047800300430ffba0430ffba049e0034
047800300430ffba0430ffba049e0034047800300430ffba0430ffba02be
004f02be004f02be006902be006902be006902be006902be004f02be004f
02be006602be006602be006902be006902be006902be006902be002f02be
002f02be002202be00220376000a0376000a0376000a0376000a0376000a
0376000a0376000a0376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a0376000a073200400732004004deffba04deffba
073200400732004004deffba04deffba073200400732004004deffba04de
ffba0880004008800040062cffba062cffba0880004008800040062cffba
062cffba0430ffba0430ffba0454003403c000460454ffba02e2ffba0610
002f0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba
0298ffba0610002f0610002f0270ffba0298ffba0610002f0610002f0270
ffba0298ffba0610002f0610002f0270ffba0298ffba04e6002704e60027
04e6002704e60027093e0032093e00320740ffba0740ffba060e00290708
002902e2ffba0456ffba045400290454002902e2ffba02e2ffba04540029
0454002902e2ffba02e2ffba045400290454002902e2ffba02e2ffba060e
00290708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba
060e00290708002902e2ffba0456ffba060e00290708002902e2ffba0456
ffba060e00290708002902e2ffba0456ffba039c0023039c002301e0ffba
01e0ffba039c0023039c002301e0ffb101e0ffb1039c0023039c002301e0
ffba01e0ffba039c0023039c002301e0ffba01e0ffba0454003e0454003e
022cffba022cffba0454003e0454003e0454003e0454003e0454003e0454
003e022cffba022cffba0454003e0454003e049e0034047800300430ffba
0430ffba02be005803520003031a001a031a001a031a001a039c0006039c
0006039c0006039c0006039c0006039c0006039c0006039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c0006039c00060528
0042046fffd905280097046f001e022cffba022cffba039c0006039c0006
05280097046f000a022cffba022cffba05280097046f000a067f0044067f
0045067f0044067f004501a800280000fe290000fe8c0000ff250000ff23
0000fefa0000ff7a0000fe5908fc003208ad00320000ffb50000ffb60000
fef00000ff590000fe590000ff8c01b4000002f700000000fe850000ff07
04cd00320000ff580000ff580000ff59073200400732004004deffba04de
ffba0880004008800040062cffba062cffba0454003403c000460454ffba
02e2ffba03c0007e02e2002102be0058022cffba0290ffba01f4002f01f4
003b01f4001201f400b101f4006d060e002907080029027c00380000fed1
0350000004f8003803e4fff50454fff503e400220454001a03e400220454
001a03e400220454001a03e400220454001a03e400220454001a03e40022
0454001a047e0072047e00bd03e4000f0454000f0473002b060a0000054a
00220473009a054a00220473000a05c7007005c70051038d004e05c70023
06880000054a00420473004f042700540556005c0439004704e3ffc70639
005305c70010064100460274002b031d00290639002e0473004402390017
03ee001c0786006105c7ff5f047300460639005008730051062a004a058e
00000473002704e3002904730052031d0049053b000c041a000002aa0026
0556000002aa00260556004a0668004b053700300653001a040000110556
0021038d001504a7002904a7004703ab003803a0001b0400003204090029
0314003502aa002604c5004601c3009f029800a0023c001402aa00af0b1d
001b0954001b0800004f095600260800002604e3002b09c7001d0871001d
071d0046038d003805c700100400005c0000ff0905c700100400005c0800
ffe905c7005a063900530400001b063900530400004d0639002e04730044
063900500400004a063900500400004a04a7002903ab001b02aaffc70b1d
001b0954001b0800004f063900530400004d07c3002b052a003405c7001d
0473004605c700100400005c05c700100400005c05560029038d003c0556
0029038d004f031dffec0239ff88031d00290239ffea063900500400004a
063900500400004a05c70026038d004605c70026038d004b05c700300473
003f05c700300473003f0473006a031d00510556004a02aa0026046e0070
02fe001b0639002b0473004605df002b056900470403004905560021038d
001505c700100400005c05560029038d004f063900500400004a0000feec
063900500400004a063900500400004a063900500400004a05c700120400
0011040000220499005c049900220473009a038d002e038d00480473004f
0473004f038d00300504004f036b0041036b002f04be002f03a8004a02aa
ff680469005c0469005c04bb004a04000013042400130473003b04730046
0473004602390017027b002c024d002a0239ffde0239fffe0239002b04db
002b06aa003506aa003506aa004c0473ff85047300460430002a0400004a
0613004a05d9004f05c70049038d001f038d001f038d001f038d004b038d
004b0335002b0335001f0499002a0499002a031d0051026bff8502aaff68
02cfff9a028eff8502aa001402aa00260473003f04f000700430002c0400
001205c700150400001304440013038d0015041b001503ab001b03ab0060
038d004a038d004e038d004a03fb004e063900500452004903a8004904bb
004a049c004602aaff750473ffed040e00460473004e038d004a038d004e
06e3004f06fa004f0771004f052f0026044b002605a9002606cb004204f9
002b04c4002b0419001403d9003c029a001e029a001e0172ffe20209001e
0209000a0221000a02c9001e0375000a0264000a024000c603f800c602aa
009802aa009802aa009802aa00ec02aa00ec0203001e0203001e048f0029
048f0029048f0062048f006202aa012102aa00e402aa002602aa012102aa
001402aa002602aa00e4023900a2023900a202aa00ec02aa00ec02aa0099
02aa009902aa009902aa001402aaffec030e002d0265000a016b001e01bd
001e024a000a0203001e0310009603100096031000960310009603100096
02aa006202aa006202aa001502aa00140400005304570096045700960457
009604570096045700430457004304570043045700430457004303100043
0457002f0457002f0457002f0457002f0457002f0310002f045700250457
00250457002504570025045700250310002f0457001a0457001a0457001a
0457001a0457001a0310001a045700420457004204570042045700420457
004203100042045700960457009604570096045700960457004204570042
045700420457004204570042031000420457002f0457002f0457002f0457
002f0457002f0310002f0457002f0457002f0457002f0457002f0457002f
0310002f0457002604570026045700260457002604570026031000260457
004204570042045700420457004204570042031000420457009604570096
045700960457009604570042045700420457004204570042045700420310
004204570026045700260457002604570026045700260310002604570023
04570023045700230457002304570023031000230457002f0457002f0457
002f0457002f0457002f0310002f0457004b0457004b0457004b0457004b
0457004b0310004b04570096045700960457009604570096045700420457
0042045700420457004204570042031000420457001a0457001a0457001a
0457001a0457001a0310001a045700240457002404570024045700240457
0024031000240457002f0457002f0457002f0457002f0457002f0310002f
0457004e0457004e0457004e0457004e0457004e0310004e045700960457
009604570096045700960000febd0000fec20000fdef0000fed20000ff6f
0000febf0000ff310000fec00000febd0000ffce0000ff660000fec00000
fed20000fed20000ff410000ff430000ff43000000000000ff2f0000ff30
0000ff440000ff440000fe87000000000000ff940000ff440000ff440000
ff440000febf0000feda000000000000febf0000ff310000ff7a0000ff54
0000ff3c0000ffce0000fe870000febb0000febd0000febd0000fed20000
fed20000febd0000fec20000fdef0000febf0000febd0000fec20000fdef
0000fe160000fee00000ff940000fe870000ff440000feba0000ff230000
ff860000fdef0000fe5f000000000000feb90000ff430000fe2e0000ff64
0000fe870000fddf0000ff660000ff440000feb90000feb90000feb90000
ff030000ff440000fd1f0000ffb70000ffcb0000ff530256001e0212001e
016b001e024b001e029a001e0213001e029c001e029a001e03ef001e0209
001e01b2001e0265000a024a000a02aa00e402aa002602aa00bd04370064
04cb003d05c700120763000005c7001204fe005005d9000004a3001e0639
00500400004a05c700750360001b04e3002e045f004604c3001403b0001e
0603000a046f000a06f6003206aa003705cd005004b0004a05eb0036038d
00130500004b04b1004b0574001e04d8001e05cc0049042000490452001e
039a001e04a3001e04000049038d004e02aaffc706390050035e0049035e
00490556002906390020038d004f049c00460a01005304f30011061c004a
04cd0025080f0029054f002a05c7000b0400000908c900290630002a07e9
001f05cd000c0ae1002907fd002a0439000903370000063d000b05810021
063900500400004a0686002d04d7003b0686002d04d7003b091e0050075c
004a0697002104af002109e40049067600490000fe150a01005304f30011
05c70051038d004e02b4000a0000fea60000febc0000ff7a0000ff900000
fc2b0000fc4c06390020049c0046054a0022043b002b04e3003404730027
05c60029049d0048043900290337001b05cd0023049c004506a1004a050b
0024075f002b0556004608eb002906c0004605d6003d0445003005c70051
038d004e0556004a03ee002506f0004a04df002405df000c04830034070b
000004830000070b000004830000031d002907e9001f05cd000c05e6002a
04bf004705f6000c047d000c0639002b049c00460639002b049c004605df
000c04830034078d00290573004902aafff905c700100400005c05c70010
0400005c0800ffe905c7005a05560029038d004f05e90050038d003807e9
001f05cd000c043900290337001b0439002903ab001b06390020049c0046
06390020049c0046063900500400004a063900500400004a056d00610375
001c05df00120400001105df00120400001105df00120400001105df000c
0483003407db0023063f004e054a00420473004f06d100420640004f0660
006b056d004c04c2006b03af004c077c000c063c000c07c3002b06590046
0639005304bb004a05ba004a04f100250000ff430000fec90000ff770000
ffb00000ff470000ff560000ff740000fed70000feac000000000000ff52
0000ff56000000000000feac0000fd9a000000000000ff6a0000ff7c0000
ff690000ff560000feac0000ff7f0000ff560000fdef0000ff430000ff69
0000ff7c000000000000fdae0000ff8c000001020000ff090000ff090000
fee00000fee00000ff780000ff210000ff0905c700100400005c0556002b
0473002b0556002b0473002b0556002b0473002b05c70051038d004e05c7
001b0473004f05c7001b0473004f05c7001b0473004f05c7001b0473004f
05c7001b0473004f05560029038d004f05560029038d004f05560029038d
004f05560029038d004f05560029038d004f04e3002e02aa004206390053
0400004d0639002b047300460639002b047300460639002b047300460639
002b047300460639002b04730046031d00290239ffe2031d00290239ffe2
0639002e047300440639002e047300440639002e04730044055600260239
002b055600260239ffe7055600260239ffe6055600260239ffec078d0029
06aa004c078d002906aa004c078d002906aa004c05c7001d0473004605c7
001d0473004605c7001d0473004605c7001d04730046063900500400004a
063900500400004a063900500400004a063900500400004a04e300340473
002704e300340473002705c70026038d004b05c70026038d004b05c70026
038d004b05c70026038d004b0473006a031d00510473006a031d00510473
006a031d00510473006a031d00380473006a031d00510556004a02aa0026
0556004a02aa00260556004a02aa00260556004a02aa002605c700300473
003f05c700300473003f05c700300473003f05c700300473003f05c70030
0473003f05c700100400001305c70010040000130800001205c700110800
001205c7001105c7000e0400002f05c7000e0400002f05c7001204000011
05560021038d001505560021038d001505560021038d00150473004602aa
001605c70011040000110400005c02390007047700570477005704770057
047700570477005704770057047700570477005705c7001005c700100667
00000667000005f9000005f9000005c7001005c70010036b0041036b0041
036b0041036b0041036b0041036b0041066900000669000007ea000007ea
000007ea000007ea0000048b0012048b0012048b0012048b0012048b0012
048b0012048b0012048b0012074c0000074c000008cd000008cd000008cd
000008cd000008cd001508cd0015027b002c027b002c027bffd2027bffd2
027b0000027b0000027bffdf027bffdf043000000430000005b1000005b1
000005b1000005b1000005b1001505b100150400004a0400004a0400004a
0400004a0400004a0400004a0701000507010005087d0000087d000007e7
000007e700000427000a0427000a0427000a0427000a0427000a0427000a
0427000a0427000a06ee0000085b0000085b0000085b001505d9004f05d9
004f05d9004f05d9004f05d9004f05d9004f05d9004f05d9004f07170000
071700000898000008980000081600000816000008160015081600150477
005704770057036b0041036b0041048b0012048b0012027bfff9027b002c
0400004a0400004a0427000a0427000a05d9004f05d9004f047700570477
005704770057047700570477005704770057047700570477005705c70010
05c70010066700000667000005f9000005f9000005c7001005c70010048b
0012048b0012048b0012048b0012048b0012048b0012048b0012048b0012
074c0000074c000008cd000008cd000008cd000008cd000008cd001508cd
001505d9004f05d9004f05d9004f05d9004f05d9004f05d9004f05d9004f
05d9004f0717000007170000089800000898000008160000081600000816
001508160015047700570477005704770057047700570477005704770057
0477005705c7001005c7001005c7001005c7001005c7001002aa00e102aa
00be02aa00e102aa001502aa0015048b0012048b0012048b0012048b0012
048b001206c0000006d4000007a3000007c100000639002b02aa000002aa
000002aa0015027b0000027bfff0027bffed027bfff0027bffec027bffeb
031d0029031d00290487000004a5000002aa000002aa000002aa00150427
000a0427000a0427000a0427000a04480065044800650427000a0427000a
05c7001205c70012076d00000777000005f6000002aaff8402aaff8402aa
002605d9004f05d9004f05d9004f05d9004f05d9004f0767000006810000
07960000069c00000668004b02aa00e402aa00e10518004905c7005105c7
005106aa004c05c7001d09b50026080000120639002e0556004a08f00029
0400003004c100660000ffcb0000ffcb0000ffb70000ffb70239001702aa
ffc70400ffec04e300340473004f023900210473004602e300260555001f
0555001f02aa007e02aa007e02aa00d102aa00d102aa008402aa002602aa
000c02aa000302aa000e02aa00af02aa00a902aa00a902aa00a902aa00a9
032e001e032e001e02aa003a0000ff7b0000ff970000fed20000ff230000
ff7b0000ff7b0000feb20000ff970000ffcb0000ffcb0000ffcb04e30029
047300270426000505a0000505c7005a045200430430004a049e0046049e
004603d500460337001b0239002a032f001904e8004603df004605730049
049c00460400004a043000460473004a0473004a0473004a05c700460403
00490400004a0400004a043b004d045400230454002303ee0025045f0046
044f004605b50046044f00460400001305c70011038d0015035d002f03b5
004a045a000f03a2004803e50005049c0046043b004d04cb0004047d000c
036a000504c60005032b001e032b001e0370001e031f001e031f001e03b9
001e03c7001e01e5001e028e001e03d1001e032d001e0495001e0386001e
03d4001e039c001e0324001e02e7001e038e001e0315001e0382001e04c2
00050256001e0256001e02b3001e035a001e0298001e029c001e0212001e
0212001e0205001e0205001e025e001e016b001e02b1001e03ef001e0274
001e024b001e0213001e024a001e024a001e029b001e01b2001e029a001e
027d001e03ef001f0265000a029400050256001e02400005025b001e02db
001e02460005016b001e0209001e029a001e0265000a0256001e02400005
024b001e02db001e0246000505ed00460a98004606130046075b00460541
ffba01e9001e045400100000ff0d0000ff350000fece0000feb70000fec9
0000ffc70000ff4f0000ff9e0000fef002be006902be00690376000a0376
000a03c0ffba039cffba03c0ffba039cffba0563002c04e3003d0545003d
04be002704a7ffdf0543004f04e2003805510016048f00280000fe4b0000
fe4c0000fe4a0400ffef04000051046b001c01e0ffba01e0ffb101e0ffba
01e0ffba06d0002e098400230400000008000000040000000800000002ab
000002000000015500000400000002000000019a000000ab000000000000
05c70051078d0029057300490602003f0695004f0695004e05c7001005c7
005104000080055600230556004a031d004a038d00150442003600000102
0000ff420000fe840000ff3a0000ffcb0448001705c7008705c7005105c7
00870517002903a200480000ff430000ff6b0000ffae028700540000ff3c
0298ffba033d001e0000ff3a0000ff480000ff490000ff7e0000ff4f0000
ff4a0000fe9e0532003905320039022cffb6022cffb60532003c0532003c
022cffba022cffba0532003905320039022cffba022cffba053200390532
0039022cffba022cffba0532003905320039022cffba022cffba05320039
05320039022cffba022cffba0532003905320039022cffba022cffba049e
0034047800300430ffba0430ffba049e0034047800300430ffba0430ffba
02be004f02be004f02be006902be00690376000a0376000a073200400732
004004deffba04deffba0454003403c000460454ffba02e2ffba04540034
03c000460454ffba02e2ffba0454003403c000460454ffba02e2ffba0610
002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba
060e00290708002902e2ffba0456ffba060e00290708002902e2ffba0456
ffba060e00290708002902e2ffba0456ffba02e2002102e200210352ffba
0352ffba02e2002102e200210352ffba0352ffba0454003e0454003e022c
ffba022cffba0454003e0454003e022cffba022cffba0454003e0454003e
022cffba022cffba039c0023039c002301e0ffba01e0ffba0376000a0376
000a0376000a0376000a073200400732004004deffba04deffba0473ffe6
0473004f02aa000f06aa0016047300070473ffde038dfffc0335ffe8031d
000b02aafff2038d00150400002502aa001e0427004a06c30026024d0017
027b001704730017045f003504f000170473002b0473004f02aa004204df
004d047300440239002b06aa004c0473004604730027038d004b031d0051
03a9ff85040000130400002f038d00150400005c0499005c0473004f038d
004f036b0041036b002f038d00380239002a038d002e02e600000473003f
03ab001b02b3001e0213001e0213001f024b001e0205001e0190001e0190
ffa60242001e029a001e016b0012019b001e016b001e016b001201d60000
016b001e016b001e0268001e03ef001e03ef001f029affaa029a001d0296
001e024b001e035b001e01bd001e016bffba01b2001e029a001e02da001e
029a00180279001e0265000a023d001e023d001e028c001e023e001e025a
001e0000fe1e0000fe1e0000ff730000febc02aa00bf0256001e0212001e
024b001e024a000a0212001e0639005305c700100473002005c7005102aa
003204770057047700570477005704770057047700570477005704770057
04770057027bffb0027bffd8027bffc4027bffd8027bffc4027bffeb027b
ffc4027bffeb0427000a0427000a0427000a0427000a0427000a0427000a
0427000a0427000a027bffd8027bffd8027bffda027bffda0427000a0427
000a0427000a0427000a03e400220454001a03ba00290556002b05c70030
05bc000905560029038d004f0400001602aaffc7069900510473004e05c7
0026038d004b05c7001204000011038d002e038d004e038d002e0239002b
0517002303a2002205c7000e0400002f05c7000e0400002f043900470337
003805f6000c047d000c0000fec60000fed40000fec60000fed40000fe5f
0000fe5f0000ff140000ff7b0000feb20758000503d50046038d002e0556
0023023900170556002604e3003405c700260400ffff02aa00000639002b
047300460639002e0473004405560021038d001503ef003e052d002b03de
004604fe00500000ff3b0000ff510000ff080000fef90000fea40000fea4
0239002a0627002c05c7001d0627002c0000fecb0000ff1d0000fef10000
fef30000feec0000feec0000fee80000fee60000feef0000fee80000fdb4
063900500473004e0800001205c700110610002b0000fe730696005004e5
001308b8001206b1001102aa00af02ff00230239008c0239008c04000099
0400009902aa00af00af00af00140000000000000000006c0000006c0000
006c0000006c00000146000001fc000003d8000005d40000080400000a1a
00000a7200000b0e00000bac00000d6a00000df400000e7600000eac0000
0efc00000f5200001128000011fa00001342000014920000156400001724
000018720000193c00001b1a00001c5a00001cda00001d9e00001e500000
1ec000001f7c000020860000232c000024d8000026c600002858000029e8
00002bc800002d6c00002f78000031740000325e00003332000035460000
36480000383c00003a1a00003c3a00003d7c00003fce000041d6000043ac
000044be0000464a000047da00004a8400004cda00004ec40000502a0000
50ce00005122000051b20000524e00005282000052d6000055ce0000579c
000058fa00005b0000005c9e00005e4a000060ee000063540000648c0000
65fa000068760000697400006c8c00006f14000070d6000072d8000074ce
00007672000079b200007a9e00007c9c00007e840000816e000084e40000
86de0000894c00008ab400008af200008c7000008d1e00008d6a00008d9e
00008ddc00008e2200008e5200008e9000008ec600008f0000008f420000
8f7600008fc4000090020000904400009082000090b2000090ea0000911a
0000915800009186000091b6000091fa0000923600009280000092be0000
92f8000093280000935c000093a8000093e20000942000009466000094c0
00009618000096f6000098c000009a7c00009d1000009d6400009e0c0000
9fb80000a23e0000a3ca0000a6000000a6580000a6da0000a7d40000aa3c
0000ac5c0000adb80000ae7e0000af540000b02a0000b2640000b3ae0000
b4ce0000b5c20000b6920000b8060000b9720000bb420000bbd20000bd8a
0000bfdc0000c1ce0000c2e80000c3ba0000c4200000c4d80000c6980000
c7ec0000c8900000c9ae0000ca7a0000cb280000cb6c0000cbc40000cc04
0000ceca0000d0b80000d0ee0000d1240000d22a0000d3260000d3b80000
d4440000d4f80000d5ee0000d6540000d6a40000d7040000d8f60000d998
0000da1e0000db980000dd260000dfa60000dffe0000e08a0000e1860000
e4fc0000e5340000e56e0000e5a60000e5ec0000e61e0000e64e0000e67e
0000e6e00000e7120000e74c0000e77c0000e7ac0000e7f00000e8500000
e88c0000e9620000e9be0000ea600000ea940000eb220000eb700000ebe4
0000ec780000ed100000ed860000ede60000ef3e0000f06a0000f0a40000
f0de0000f1260000f1740000f1e20000f39c0000f5100000f5500000f58c
0000f6be0000f8300000f87c0000f9900000fa580000fb6c0000fcb60000
feae00010078000102c4000104ae000104e4000105200001055200010598
000105dc000106140001065600010696000106ce000108c8000109020001
09460001097c000109b0000109d6000109fc00010a3000010c2800010de2
00010e0a00010e3000010e9000010ec200010efa00010f2a0001108e0001
118e000111dc0001120e0001124600011282000112b2000112f60001133e
0001137a000113c2000114000001144600011480000114c2000114fc0001
1522000115460001157a000116ac000116de000117120001174e00011782
000117d20001182c00011864000118b00001196200011ac400011c3a0001
1da000011ecc0001205600012128000121f80001232800012396000123ae
000124d000012792000127d2000128120001285200012890000128ee0001
294c000129ba000129da00012ade00012b6a00012ba000012c0a00012c54
00012c9e00012cba00012cd600012cf600012d1600012d3600012d560001
2d7c00012da200012dc800012dee00012e1e00012e4600012e6e00012e9a
00012ec600012efa00012f2400012f5000012f8600012fb000012fdc0001
30120001303c000130660001309a000130ca000130fe0001314200013172
000131a6000131e80001321c0001324e00013290000132c4000132f40001
33360001337a000133c00001341c0001343800013454000134700001348c
000134a800013616000138c000013b3000013b4c00013b6600013b820001
3b9e00013bba00013bd600013c3200013c6c00013cd600013dae00013e52
00013f2a00013faa00014032000140a60001413c0001419a000141e00001
423e000142a0000142e000014334000143a0000143fe00014436000145f4
0001474e0001477800014794000147c0000147f8000148440001487a0001
48aa000148da0001490a0001494000014972000149b6000149e400014a30
00014a5e00014aa400014ada00014b1e00014b6200014ba000014bd00001
4bf800014e6600014e9600014eca0001508e000152cc000152fc00015332
00015364000153ca0001540000015440000154660001548a000154ce0001
562e0001566c000156940001587a000158ac000158d8000159160001594a
00015ad800015cee00015d2000015d5000015d8000015db000015de60001
5e2200015e5800015e9200015fb4000160aa000160da0001610a0001613c
00016170000161aa000161f0000162160001623c00016274000162b00001
62e60001631e000164080001644000016484000164ba000164ea00016520
00016560000165aa000165da000166120001664600016682000166c80001
67140001674c0001678c000168020001682e000169fa00016b3200016d62
0001702e0001729c000174d400017552000175be000175ce000176900001
76ca000178fe00017b1000017c3a00017d7200017fbe000181a8000181e6
000181f600018206000182ec000182fc0001830c0001831c0001832c0001
833c0001845c0001846c0001847c000185d0000185e0000185f000018600
000187100001872000018730000187400001893e00018ac400018b060001
8b4200018b7200018bae00018be600018c1400018c4a00018da800018ec0
0001902c000191440001924400019308000194d000019642000197840001
989000019a9200019aa200019b9600019caa00019d8e00019f140001a062
0001a2000001a26e0001a2aa0001a2e40001a3200001a3600001a3b40001
a5400001a5720001a6a00001a6b00001a6c00001a7020001a7120001a8c0
0001aae80001ac720001aca80001ae6e0001afd80001afe80001b11e0001
b12e0001b13e0001b26a0001b27a0001b58c0001b6aa0001b84c0001ba6c
0001bc5e0001bd9a0001bdaa0001bdba0001bdca0001bef60001bf060001
bf160001bf260001c07e0001c1f80001c2080001c35a0001c4ba0001c656
0001c8140001c94c0001cafe0001cc280001cc540001cdfe0001ce340001
ce440001cfb40001d10c0001d1de0001d30e0001d31e0001d6c20001d804
0001d9980001dba80001ddcc0001df380001e0ca0001e20c0001e21c0001
e32a0001e33a0001e34a0001e4300001e4400001e5d20001e5e20001e71a
0001e8660001ea540001ec5a0001ed920001ef5c0001f06e0001f0a00001
f2220001f3ba0001f3ee0001f5bc0001f5f60001f7080001f7180001f728
0001f7780001f7880001f90e0001fabe0001fcf60001fd360001ff520002
00b4000201620002022c0002025c00020448000205960002063600020782
000208360002092e0002098200020a2200020b0200020b3a00020bbc0002
0c1200020d0200020d5600020d9000020dc800020e0000020e3c00020e86
00020ece00020f5c0002118c000212400002134800021406000215220002
15a800021672000217860002189200021924000219c400021a5600021b5e
00021c2000021d4600021e0000021ec400021f8800022158000222660002
2378000224d00002263600022722000227aa000229a600022a8400022abe
00022af000022b2200022b7200022ba800022cb600022cde00022d1e0002
2d5c00022db400022e5200022faa00022fd20002300a000230320002306a
00023092000230c20002333a00023452000235ba0002365a000237e40002
3836000238b200023a2a00023aa200023ae600023be000023c3c00023de8
00023f1800024058000241ca000243340002450e00024650000246a60002
48f200024a2800024a4e00024a7e00024aa600024ad800024d5a00024d8a
00024e9e00024f6400025022000250b600025184000252c0000252d00002
5304000253c80002558400025662000256d0000257fa0002585c00025972
00025a4400025ad000025b4e00025c2a00025d6a00025e6400025f1a0002
6006000260ce000261ac0002627c0002635a000263ee0002661a00026644
0002666e0002667e000266a8000267e20002690000026a1000026a3a0002
6a6400026a8e00026ab800026ae200026cca00026cf400026d1e00026d48
00026d7200026d9c00026dc600026df000026e1a00026e4e00026e780002
6ea200026ecc0002706600027076000271ae000271be000271e800027212
0002723c00027266000274000002767a000277d8000277e80002795a0002
796a00027ac800027cac00027dae00027f34000280fe00028352000284c0
000286b4000286c4000286d400028838000288620002888c000288b60002
88e00002890a000289340002895e00028988000289b2000289dc00028a06
00028a3000028a5a00028a8400028aae00028d6600028f4e000290d80002
9318000293b0000293da000294040002942e0002945800029482000294ac
000294d6000295000002952a000295540002957e000295a8000295d20002
95fc00029626000296500002967a000296a4000297d400029b1a00029b44
00029b6e00029b9800029bc200029bec00029c1600029c4000029c6a0002
9c9400029cbe00029ce800029d1200029d3c00029d6600029d9000029dba
00029de400029e0e00029e3800029e6200029e8c00029eb600029ee00002
9f0a00029f3400029f5e00029f8800029fb20002a04a0002a0da0002a104
0002a48c0002a5960002a70e0002a8940002aa760002ac4a0002ae680002
ae780002b0200002b1b80002b42a0002b67c0002b7f40002b8040002b8b0
0002b95a0002ba960002baa60002bb720002bb820002bd240002bf0c0002
c0780002c0880002c1900002c1a00002c31a0002c32a0002c4580002c468
0002c5a40002c7580002c8500002c8600002c9520002cab00002cb5c0002
cb6c0002ccae0002ce5c0002cf520002cf620002d0060002d0160002d0fe
0002d10e0002d1d80002d1e80002d2fe0002d30e0002d4d40002d4e40002
d6520002d6620002d8d40002d8e40002daf40002db040002dc7e0002dc8e
0002ddc00002ddd00002df8e0002df9e0002e1140002e1240002e2920002
e2a20002e2b20002e2c20002e4820002e4920002e4a20002e4b20002e602
0002e73a0002e8520002e94c0002eaee0002ec800002ede80002ef360002
f0fe0002f10e0002f2600002f3c20002f5a80002f5b80002f7400002f8e4
0002fb1e0002fb2e0002fb3e0002fb4e0002fcb80002fcc80002fd9a0002
fdaa0002fee20002fef20002ffd80002ffe80003012000030130000301ea
000301fa0003032000030484000305f2000307a0000308d0000308e00003
0a5a00030b9c00030dbc00030f8e0003109e000310ae0003132a00031556
0003182000031a7c00031d3c00031f7e0003213c00032296000322c00003
22ea000322fa0003230a000323340003235e0003238800032398000323a8
000323d2000323fc0003240c0003241c00032446000324700003249a0003
24aa000324ba000324ca000324da000324ea000324fa0003252400032534
000325440003256e00032598000325c2000325ec00032616000326400003
266a00032694000326be000326e8000327120003273c0003276600032790
000327ba000327e40003280e00032838000328620003288c000328b60003
28e00003290a000329340003295e00032988000329b2000329dc00032a06
00032a3000032a5a00032a8400032aae00032ad800032b0200032b2c0003
2b5600032b8000032baa00032bd400032bfe00032c2800032c5200032c7c
00032ca600032cd000032cfa00032d2400032d4e00032d7800032da20003
2dcc00032df600032e2000032ec800032f0c00032f8200032fac00032fd6
000330000003302a000330540003307e000330a8000330d2000330fc0003
3126000331500003317a000331a4000331ce000331f8000332220003324c
00033276000332a0000332ca000332f40003331e00033348000333fa0003
342e000334620003349600033600000337a40003393a00033b3400033bb8
00033c3800033ca000033d2200033da200033e0a00033ec800033fd00003
408e00034194000341b4000342820003435e0003444c00034502000345a4
000346ea0003491000034ba600034c0e00034c7600034cde00034d460003
4e0400034ec200034ee400034f0600034f2800034f4a00034f6c00034f8e
00034fa000034fb200034fc400034fd600034fe800035050000350b80003
50da000350ec000350fe0003511000035120000351320003514400035156
000351680003517a0003518c000352580003527a00035346000353680003
54400003546e0003549a000354c00003550400035554000355c400035612
00035680000356dc0003573c00035784000357f6000358460003588c0003
58de0003592a0003597c000359cc00035a2e00035a7400035ac200035b08
00035b5600035ba200035bc800035bee00035c1400035c5200035c820003
5cb200035d1600035d7c00035de000035e4200035eaa00035f0c00035f6c
00035fdc0003603800036092000360b8000360fa00036120000361460003
616c00036192000361b8000361f20003623600036284000362c000036306
0003634a00036390000363d2000364340003646c000364ac000364e00003
65160003654a00036584000365aa000365e400036614000366440003666a
00036690000366b6000366dc000367020003674a00036786000367ce0003
68140003685a00036880000368c8000368f80003692c0003695200036978
0003699e000369c4000369ea00036a2000036a5000036a8000036ab40003
6aee00036b2200036b6400036b9400036bc800036bfc00036c5800036c82
00036d7400036d9e00036eae00036ed800036fce00036ff8000371240003
72180003735e000374ce000375fe000376f40003780c00037b3800037eca
000380ce00038322000385800003886600038a8200038bf400038c040003
8d8a00038fa600039164000393c40003972e000398f600039ab400039c0e
00039c1e00039d0200039e7000039f8e0003a0d40003a1ca0003a2400003
a3680003a4820003a60a0003a68c0003a77c0003a8720003a96a0003a9fc
0003ac0e0003ad9e0003ae240003afa60003b0120003b07c0003b0ea0003
b2ac0003b4740003b5040003b5500003b58e0003b5d00003b6180003b644
0003b68a0003b6c00003b6fc0003b73a0003b7780003b8000003b8880003
b8ca0003b9020003b93c0003b9760003b99e0003b9c60003ba0a0003ba4e
0003ba8c0003baca0003bafa0003bb2a0003bb500003bb760003bbb80003
bbfa0003bc400003bc860003bcde0003bd360003bd920003bdee0003be4a
0003bea60003bef40003bf420003bf6a0003bf920003bfb80003bfde0003
c0220003c0660003c0b20003c0fe0003c1480003c1920003c1e00003c22e
0003c26e0003c30e0003c3340003c35a0003c3a40003c4140003c43c0003
c4640003c4aa0003c4f00003c5460003c59c0003c5ea0003c6a40003c6cc
0003c6f40003c7480003c79c0003c7dc0003c81c0003c8420003c8680003
c8ce0003c9340003c9760003c9b80003c9de0003ca040003ca5a0003cab0
0003cb0c0003cb680003cbbc0003cc100003cc5e0003ccac0003ccf60003
cd400003cd9a0003cdf40003ce480003ce9c0003cede0003cf200003cfbe
0003d05c0003d0a60003d0f00003d1420003d1940003d1fa0003d2600003
d2b80003d3100003d33c0003d3680003d3940003d3c00003d3ec0003d418
0003d4440003d4700003d4960003d4bc0003d4e80003d5140003d5620003
d5b00003d5fc0003d6480003d6980003d6e80003d7620003d7c40003d83c
0003d8860003da180003da4c0003da800003dab60003dada0003db440003
dbae0003dc300003dc980003dce00003dd280003dd740003ddde0003de06
0003de2e0003de540003de7a0003deca0003df1a0003dfae0003e0000003
e05e0003e0bc0003e1220003e1880003e26e0003e37e0003e44c0003e546
0003e5b20003e6180003e6760003e6d80003e75e0003e7e40003e8480003
e8ac0003e9180003e9840003e9da0003ea300003ea620003ea940003eaba
0003eae00003eb4c0003ebb20003ec100003ec720003ed840003ee900003
ef9e0003f0a20003f0c80003f0f00003f1140003f1380003f1600003f188
0003f1ae0003f1d40003f2f60003f4320003f5600003f68c0003f7460003
f8000003f8c00003f9800003fa640003fb480003fc440003fd400003fe24
0003ff080003ffde000400b4000400fe000401480004016e000401940004
01e400040234000402580004027c0004035200040362000403b60004040a
00040468000404c6000405060004054600040590000405da0004062a0004
067a000406d00004072600040778000407b60004083000040872000408b6
00040944000409d200040b8400040b9400040bce00040c0800040c380004
0c6800040c9c00040cd000040d0a00040d4400040d9800040dec00040e4e
00040eb000041060000411e8000412240004125c000412a6000412f00004
13360004137c000413cc000415f2000416180004163e000416920004193c
00041a0e00041aaa00041af800041b3600041b6800041d56000420120004
20e400042248000423820004242e000425c40004281800042a5400042aae
00042af400042bc200042cb400042cd200042d7c00042ea200042f7e0004
2f90000430f0000432760004329c0004335a000433780004339e000433c4
000433ea00043410000434360004345c00043482000434a8000434f40004
35540004357c000435a200043700000438dc000438ec000439bc00043acc
00043b2a00043c4200043dd000043e7600043fbc0004400e000440600004
4094000440a6000440d000044104000441300004416c000441c600044210
0004425c000442cc000443920004440e000444ce00044546000446200004
46b0000446ea000447260004489e0004498e000449d800044a1e00044b7c
00044d1200044d2200044e5a00044f4e0004508200045142000452560004
539e000453ae000454ba000455fc000457280004585600045a4000045b86
00045cee00045e7a00046072000461fe000462c40004638e000465b60004
6804000468ea00046b3800046d1c00046e4200046fcc00046fdc00047110
00047268000473c80004752c00047730000478de00047af800047b080004
7c1200047d2e00047e0800047f400004803400048188000482c2000483e2
0004859a000486fc000488540004896800048a9200048bc200048d620004
8e8e00048f84000490c40004921e0004931000049344000493880004941e
0004942e000494a40004951a000495a8000496020004963c000496a40004
96ee0004973600049784000498de0004991a000499d400049a8c00049ab4
00049b6200049ba600049bd800049d7000049fda0004a0100004a0400004
a0800004a0b00004a0d60004a0fc0004a1400004a1820004a1cc0004a218
0004a26e0004a2b00004a2fc0004a3600004a3980004a3cc0004a5a00004
a6820004a6ba0004a6fa0004a7320004a7780004a7b20004a7ee0004a828
0004a8620004a8a60004a8d60004a90c0004a9420004a9720004a9b20004
a9f80004aa2c0004aa5c0004aa8c0004aac80004aafe0004ab380004ab6e
0004abb60004abfc0004ac300004ac760004acae0004ace00004ad060004
ad2c0004ae600004af8e0004afbe0004affe0004b11c0004b2da0004b482
0004b55c0004b6460004b68a0004b6bc0004b91a0004baea0004bb140004
bbc80004bd3c0004bd640004bddc0004be0e0004be3e0004be660004bf0e
0004bf440004bf740004c1300004c29c0004c3f20004c5440004c63a0004
c7860004c8e80004ca3a0004cb8c0004cd980004cefe0004d07c0004d274
0004d3c20004d4ea0004d6a20004d7fc0004d9260004dac20004dc120004
dda80004df840004e1600004e2880004e36a0004e4180004e56c0004e69c
0004e77c0004e90e0004eb2c0004ed4e0004ef600004f1100004f2d00004
f42a0004f43a0004f61a0004f71c0004f8580004f9420004fa2c0004fb7c
0004fca40004fde40004ff020004fffa000501a800050356000505b80005
06e0000508460005096400050ab200050b6c00050c2a00050da800050e72
00050f86000510b4000512d400051446000515a000051704000518960005
19c800051b7a00051c9600051dba00051edc00051fc0000520d8000520e8
00052232000523b8000523c8000524e2000526f8000527e00005295e0005
2ac400052c3600052dea0005300c0005323a000534b40005368a00053892
00053ac800053d7400053ec60005417c00054228000543ca000545aa0005
46d8000547c8000548be000549d800054baa00054d6800054ec200054f10
00054f9e000550160005508a000551100005519800055222000552ce0005
537e00055432000554e80005558c0005563000055672000556de00055742
0005578e000557b8000558280005589e000559120005596a000559f80005
5a8600055b0600055b9000055c2c00055c5600055cd600055d4c00055ef4
00055f8800056180000563e6000564c0000564f60005653a0005657e0005
65c2000565f80005662a0005666c000566f6000567400005681c00056894
0005691a0005698a000569ec00056a7200056ad200056b3c00056bb00005
6c2000056c7e00056d2400056dbc00056e2800056eb600056f1000056f7e
00057028000570ce00057164000571d400057256000572ba000573660005
7424000574d000057562000575c00005762c000576820005770400057782
0005780800057894000578ee0005795a000579ca00057a3800057aa80005
7b2c00057bbc00057c2200057c9c00057d1800057d9000057e3600057ece
00057f5e00057fbc0005805a000580d6000581680005820c000582b60005
834e000583aa000583fe000584660005850c000585b60005868000058726
00058788000587e000058840000588ce00058954000589e200058a420005
8aa600058b1000058b7800058be000058c5800058ce000058d7400058de0
00058e4800058eac00058f5800059018000590c600059154000591b20005
921e0005928e00059332000593d80005949c0005953e000595a200059632
000596a40005973c000597ba00059834000598a00005992e0005998a0005
99e800059a6e00059aea00059b5200059bb600059c0a00059c7800059ce0
00059d5e00059dd400059e4e00059ece00059f2a00059f9000059ff40005
a0940005a1360005a1f40005a2a40005a3000005a3780005a3d60005a460
0005a4f80005a5860005a5ec0005a64a0005a6d80005a74a0005a7e40005
a8780005a8e80005a9580005a9d00005aa2e0005aa8e0005ab080005ab62
0005abc20005ac1c0005ac780005ace00005ad5e0005ad960005addc0005
ae540005ae9c0005af100005af880005b0000005b07e0005b0b20005b100
0005b1700005b2300005b2a20005b3100005b37a0005b3e80005b44e0005
b4b60005b50c0005b5920005b61c0005b6560005b6be0005b7640005b7ee
0005b87c0005b92a0005b9520005b9cc0005ba480005babc0005bb9e0005
bc480005bcb20005bd260005bd640005bdb20005be5a0005bef80005bf94
0005c0120005c0920005c1380005c1600005c18a0005c1f00005c2940005
c2c00005c2ea0005c33a0005c3900005c4260005c4720005c4ba0005c564
0005c5d80005c6460005c69c0005c6e40005c7300005c7d40005c83e0005
c90e0005c9660005c9a80005ca0e0005ca660005cad20005cbae0005ccd0
0005ce0c0005ce7a0005cee20005d20c0005d2ba0005d31e0005d3800005
d4e60005d5ea0005d6e80005d7a00005d8f40005d9dc0005db060005db16
0005dd2a0005dd3a0005de0c0005df4c0005df5c0005dfc80005e0280005
e0860005e1920005e2a80005e3d00005e4440005e47a0005e5560005e66c
0005e7fc0005e94e0005eae60005eb9c0005eca00005edc40005eeb00005
f0380005f0fe0005f20a0005f2fc0005f5260005f7240005f8560005f986
0005fac40005fc0e0005fd940005fee20006005e000602120006031a0006
03fc0006053e000606420006077e000608b8000609760006098600060996
00060a3600060ad800060b1000060b4400060b8000060bb400060d8c0006
0f3c000610f200061254000613fc000615e600061750000618cc00061ab0
00061cc400061eb40006209c000623480006260e000627ec0006299a0006
2b9200062cee00062e4c00062f9600063076000631660006328e000633b2
0006355e000637040006384e0006398e00063b6000063cc400063d3e0006
3d6c00063d9a00063eba00063fde00064138000641d000064228000642b4
0006433a000644ee0006472c0006499400064be200064cda00064dfc0006
4f60000650d6000652380006537a00065522000656fe0006594c00065bf8
00065e3c0006610e000662b8000664440006660a000667b8000668e20006
6a0200066b7200066d1a00066e1000066f1c000670d20006728800067402
000675c400067704000678ac000679cc00067ae400067af400067b220006
7b4800067d2e00067f38000680b60006826e00068406000685960006871c
000688a400068a1c00068bde00068d7c00068f6600068fdc000690100006
903e0006907a000690ac000690bc000690cc00069108000691360006916c
0006919c000691d20006920e0006925000069284000693e2000693f20006
94240006945400069490000694c6000695020006953800069574000695aa
000695f4000696300006966200069692000696c800069702000697420006
9784000697ba000697f000069826000698580006998e0006999e00069b62
00069cda00069e4200069ff60006a0fa0006a26e0006a4520006a6180006
a7e40006a9c40006aaee0006ac160006ad920006aecc0006af880006b040
0006b1180006b19e0006b2520006b2dc0006b34c0006b45e0006b4c80006
b5760006b66a0006b6d60006b7420006b7f60006b9ce0006baca0006bb4c
0006bb860006bc320006bcba0006bd980006be380006bea20006bf980006
c05a0006c1140006c1560006c1e00006c2ec0006c3840006c3d00006c4b2
0006c5980006c70c0006c8a80006c99c0006caba0006cbb20006cbe00006
cc080006cc400006cc760006cc9e0006cccc0006ccf20006cd220006cd82
0006cdec0006ce1e0006ce700006ce980006cec80006cef00006cf1c0006
cf480006cf720006cfa60006cfd20006d00c0006d0840006d0be0006d132
0006d1640006d18a0006d1be0006d1e40006d2280006d25a0006d2a00006
d2d40006d3060006d33e0006d3700006d3a80006d3ce0006d3f40006d42a
0006d46a0006d4920006d4b80006d4de0006d5040006d52a0006d5540006
d57e0006d6420006d67e0006d6ae0006d6e20006d70e0006d73c0006d762
0006d7880006d7ae0006d7f20006d8480006d86e0006d8940006d8ba0006
d8e00006d9220006d95c0006d9960006d9c60006d9f80006da1e0006da50
0006da800006daa60006dacc0006dafc0006db220006db480006db6e0006
db960006dc060006dc300006dca80006dcd00006dd400006dd680006ddcc
0006ddfa0006de2c0006de620006de9a0006ded80006df0c0006df340006
df5a0006dfa00006dfe00006e0060006e02c0006e05e0006e09c0006e0d6
0006e1020006e1380006e1a60006e1d40006e23a0006e2980006e2e00006
e3120006e34e0006e3740006e39a0006e3c00006e3e60006e40c0006e432
0006e45a0006e4820006e4ae0006e4d40006e4fa0006e5200006e5500006
e5ca0006e5f80006e6a00006e6ce0006e6fe0006e7240006e7540006e784
0006e7b40006e7da0006e8000006e8320006e8660006e89c0006e8d40006
e9060006e9340006e97c0006e9c80006e9ee0006ea160006ea3c0006ea62
0006ea880006eac80006eafe0006eb300006eb600006eb9a0006ebca0006
ec040006ec320006ec5c0006ec900006ecc40006ed040006ed440006ed7a
0006edc80006ee2e0006ee940006eeea0006ef420006ef7c0006efce0006
eff20006f0160006f03e0006f0660006f0940006f0c20006f0f00006f11e
0006f1740006f1c80006f2160006f2640006f2940006f2c40006f2f20006
f3200006f34e0006f37c0006f3ac0006f3da0006f4260006f4760006f4c4
0006f5160006f5680006f5ba0006f60c0006f65e0006f6820006f6a60006
f6cc0006f6f40006f71c0006f7440006f77a0006f7b00006f7fe0006f84c
0006f8a60006f9000006f9700006f9e00006fa340006fa880006faae0006
fad40006fafc0006fb240006fb520006fb820006fbc60006fc0a0006fc56
0006fca40006fd0a0006fd700006fd9c0006fdc80006fdf40006fe200006
fe5a0006fe9e0006fecc0006ff020006ff8e0006ffe2000700340007008a
000700b4000700de000701060007012e000701660007019e000701c60007
01ee0007022c0007026a000702a4000702de00070340000703a20007040a
00070466000704a0000704d0000705040007054a00070590000705c00007
05f00007061e0007065800070692000706c4000707000007074400070782
000707c400070810000708500007088c000708d000070914000709660007
09b800070a0600070a6c00070aea00070b6800070bd600070c4600070c98
00070d0200070d4400070d8600070dc600070e0600070e4600070e860007
0ec800070f0800070f840007100400071080000711020007118400071206
000712880007130a00071364000713be000714160007146e000714d40007
153a00071592000715ea00071654000716be000717240007178a00071818
000718a600071938000719c0000719f800071a3600071a8200071aa80007
1aea00071b2c00071b7e00071bb800071bee00071c2400071c7000071c9c
00071d2200071d8000071e0600071ea000071fa800072000000720260007
2068000720a6000720f600072156000721d20007222e00072296000722da
000723c6000724bc00072608000726440007267a0007272c000727d40007
280a00072890000728c6000728f80007294a000729b600072aa800072bb6
00072d0600072d4400072d8200072e4000072ef000072f1600072f3c0007
2f6e00072ffc0007302c00073060000730bc000731320007317c00073232
0007330000073350000733c20007340600073472000734a2000735000007
355c000735b00007360800073660000736a00007370c000737a000073972
00073b3800073cd800073f04000740ca000740f2000743f2000746220007
47f6000749e800074b2200074d3800074d8800074dd600074e4400074ec2
00074fa20007507a000752920007546c000755dc000756d4000758bc0007
59cc00075af800075c3c00075c9200075ce400075d3200075d7a00075e5c
00075eaa00075f1a00075f8c0007602e000760ac000760ee0007612e0007
616c000761aa0007620200076252000762b8000763020007638600076444
000764a6000764f40007653a000765ce00076648000766ae000766d80007
670200076712000767220007689400076a7400076c9000076e0a00076eca
00076faa000770b40007721c0007722c000773320007741a0007766c0007
77d2000777e2000777f200077802000778c0000779d200077aac00077c38
00077e0000077ee400077f6a00077ff000078118000781280007831e0007
832e0007845600078552000786b800078894000788a4000788b4000788c4
000789c600078adc00078c0400078c1400078d3800078d4800078d580007
8ef200078f02000790d4000792de000794220007959a00079680000797ea
0007994600079a9400079bec00079c9600079d9a00079fe20007a0c40007
a2b60007a44e0007a5fa0007a6c40007a7c60007a8ea0007aaae0007ab96
0007ace00007af260007af360007b0be0007b2120007b4320007b5660007
b5760007b5860007b6920007b8000007b9720007bb3e0007bc600007be70
0007be800007c0560007c0660007c1760007c2120007c2ae0007c4160007
c4260007c4360007c5560007c77a0007c78a0007c8800007c9f40007cb38
0007cc980007cdc60007cf5a0007cf7a0007cf980007cfb60007cfd40007
cff40007d0120007d1360007d1560007d1740007d2160007d3620007d41e
0007d5480007d60a0007d6520007d8480007d8fe0007daec0007dc480007
dde60007dee80007df4e0007e0900007e1080007e2980007e2ce0007e304
0007e3560007e3a80007e3e00007e4200007e4580007e4980007e6ac0007
e7720007e88c0007e9240007ea3a0007eb000007eb8e0007ec880007ece6
0007ee220007eed80007efe00007f0160007f03c0007f0860007f1460007
f2420007f3180007f33e0007f3640007f3c00007f3d00007f3e00007f3f0
0007f4000007f4100007f4200007f4300007f4400007f4500007f4600007
f4700007f4700007f4ea0007f6080007f79c0007f8c80007fa720007fc40
0007fe6e0008000a0008019200080282000804140008069a000807b60008
08a4000808e80008098200080aaa00080afa00080b5a00080ca200080d44
00080e4400080f30000810080008110e000811d000081218000812580008
13180008139c0008151e000815fc0008163c000816a60008171000081748
000818960008198c00081a9a00081ad200081b0a00081b3000081b560008
1b8600081bb600081bda00081bfe00081c2a00081c5600081c9c00081ce2
00081d0e00081d3a00081d8000081dc600081e2200081e7e00081ea20008
1ec600081f1e00081f7600081fbc00082002000820380008206e000820a4
000820da0008213c000821a60008220600082266000822b2000823800008
23ac000823d800082444000824b0000824fe0008254c0008265200082662
000826ac000826f60008273e00082786000827e400082846000828a00008
28f2000829340008299a00082a0a00082a7c00082b3400082bb000082c3c
00082ca200082cc800082cee00082d1200082d3600082d6a00082d9e0008
2dc400082dea00082e5600082ec200082f2e00082f9600082fe80008303a
00083090000830e20008310a000831320008316400083192000831e80008
323e0008329a000832f60008331c000833420008336e0008339a00083402
0008346a0008348e000834b20008356c00083626000837f8000838080008
386c000838d0000839320008399400083b5800083b6800083c7600083c86
00083ce000083d3a00083d9200083dea00083e4e00083eb200083ef60008
3f3a000840fc000842a6000844760008474a0008499e00084ba200084d72
00084f40000851ba000853180008553c00085716000858e0000859fa0008
5d4800085e2a00085f46000860bc0008622e0008641c000865a40008670c
000868a800086b4a00086db200086ec2000871360008733c000874ee0008
76880008791200087aec00087cb000087f90000880f600088310000884da
0008868e0008886a00088a4400088c3400088e2600088fa2000891040008
928200089434000896080008976400089774000898cc00089a6400089a74
00089b7c00089c9e00089de000089f7c0008a0a20008a16e0008a2200008
a2e80008a46c0008a55a0008a65c0008a74c0008a99c0008abc00008adb2
0008af9c0008b0fc0008b1de0008b37e0008b5c00008b6be0008b7d40008
b9700008bb320008bc8e0008bda60008bf2c0008c0280008c1760008c318
0008c4520008c5440008c5f60008c6a80008c79c0008c7f20008c95c0008
c97c0008c99c0008c9bc0008c9da0008c9fa0008cb680008cdce0008d056
0008d1ae0008d2340008d2ce0008d3620008d4020008d4900008d4e60008
d5440008d5a80008d5fe0008d6980008d72c0008d7c60008d8560008d8aa
0008d9060008d96e0008d9c20008da580008daec0008db8c0008dc1a0008
dc720008dcd40008dd3c0008dd940008de680008df400008e0160008e0f8
0008e1c80008e29c0008e3780008e4540008e61c0008e77e0008e85a0008
e9960008eaa40008eab40008ec480008edb00008ee940008ef860008f05c
0008f13c0008f2600008f33e0008f4d20008f6680008f70c0008f7500008
f7900008f7a00008f8960008f9860008fb260008fcf00008feb400090096
000900a60009017e00090268000903480009038a000903ce000904100009
0454000904c600090532000905d0000906160009068e00090900000909de
000909ee00090ade00090ba200090cac00090d8c00090eae0009105e0009
1154000911640009126e000913da00091538000915d00009165e000917c4
0009188800091938000919ea00091a3800091ae400091b3400091b640009
1ba800091bea00091c1800091d2000091e3000091f3e00091fb600092028
000920c6000921b000092224000922da00092384000923d8000924ce0009
2576000925e8000925f80009260800092618000926280009270a0009271c
000927fa000928ee00092af400092cba00092d2600092d6a00092db00009
2df600092e4600092e9600092f0e00092f8600092ffe0009309a00010000
0d5600f2003c008f000600020010002f00560000088b02c40005000200>
<0000005303ea0000000300000000006a00000000000300000001001e006a
0000000300000002000800880000000300000003006c0090000000030000
0004002800a20000000300000005001800cc0000000300000006002c00fc
000000030000000700ce012800000003000000080030000e000000030000
0009008601f6000000030000000d029a027c000100000000000000350516
0001000000000001000f054b00010000000000020004055a000100000000
00030036055e0001000000000004001405670001000000000005000c057c
0001000000000006001605940001000000000007006705aa000100000000
00080018051d000100000000000900430611000100000000000d014d0654
0003000104030002000e07a10003000104030004002e07af000300010405
0002000a07dd0003000104050004002a07e7000300010406000200060811
00030001040600040026081700030001040700020008083d000300010407
0004002808450003000104080002000c086d0003000104080004002c0879
0003000104090000006a00000003000104090001001e006a000300010409
0002000800880003000104090003006c00900003000104090004002800a2
0003000104090005001800cc0003000104090006002c00fc000300010409
000700ce012800030001040900080030000e0003000104090009008601f6
000300010409000d029a027c00030001040a0002000e08a500030001040a
0004002e08b300030001040b0002001208e100030001040b0004003208f3
00030001040c00020008092500030001040c00040028092d00030001040e
00020010095500030001040e000400300965000300010410000200120995
0003000104100004003209a70003000104130002000609d9000300010413
0004002609df0003000104140002000e0a050003000104140004002e0a13
000300010415000200140a41000300010415000400340a55000300010416
0002000e0a890003000104160004002e0a97000300010419000200140ac5
000300010419000400340ad900030001041b0002000a0b0d00030001041b
0004002a0b1700030001041d00020006083d00030001041d000400260845
00030001041f0002000a0b4100030001041f0004002a0b4b000300010424
0002000c0b750003000104240004002c0b8100030001042a000200080bad
00030001042a000400280bb500030001042d0002000a0bdd00030001042d
0004002a0be700030001080a0002000e08a500030001080a0004002e08b3
0003000108160002000e0a890003000108160004002e0a97000300010c0a
0002000e08a5000300010c0a0004002e08b3000300010c0c000200080925
000300010c0c00040028092d00a900200032003000300038002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0054
0069006d006500730020004e0065007700200052006f006d0061006e0042
006f006c0064004d006f006e006f0074007900700065003a00540069006d
006500730020004e0065007700200052006f006d0061006e00200042006f
006c0064003a00560065007200730069006f006e00200035002e00300035
00200028004d006900630072006f0073006f00660074002900540069006d
00650073004e006500770052006f006d0061006e00500053002d0042006f
006c0064004d005400540069006d006500730020004e0065007700200052
006f006d0061006e00200069007300200061002000740072006100640065
006d00610072006b0020006f006600200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e00200069006e002000740068006500200055006e006900740065
0064002000530074006100740065007300200061006e0064002f006f0072
0020006f007400680065007200200063006f0075006e0074007200690065
0073002e004d006f006e006f007400790070006500200054007900700065
002000440072006100770069006e00670020004f00660066006900630065
0020002d0020005300740061006e006c006500790020004d006f00720069
0073006f006e002c00200056006900630074006f00720020004c00610072
00640065006e0074002000310039003300320059006f00750020006d0061
007900200075007300650020007400680069007300200066006f006e0074
0020006100730020007000650072006d0069007400740065006400200062
00790020007400680065002000450055004c004100200066006f00720020
007400680065002000700072006f006400750063007400200069006e0020
007700680069006300680020007400680069007300200066006f006e0074
00200069007300200069006e0063006c007500640065006400200074006f
00200064006900730070006c0061007900200061006e0064002000700072
0069006e007400200063006f006e00740065006e0074002e002000200059
006f00750020006d006100790020006f006e006c00790020002800690029
00200065006d0062006500640020007400680069007300200066006f006e
007400200069006e00200063006f006e00740065006e0074002000610073
0020007000650072006d0069007400740065006400200062007900200074
0068006500200065006d00620065006400640069006e0067002000720065
0073007400720069006300740069006f006e007300200069006e0063006c
007500640065006400200069006e0020007400680069007300200066006f
006e0074003b00200061006e006400200028006900690029002000740065
006d0070006f0072006100720069006c007900200064006f0077006e006c
006f006100640020007400680069007300200066006f006e007400200074
006f002000610020007000720069006e0074006500720020006f00720020
006f00740068006500720020006f00750074007000750074002000640065
007600690063006500200074006f002000680065006c0070002000700072
0069006e007400200063006f006e00740065006e0074002ea92032303038
20546865204d6f6e6f7479706520436f72706f726174696f6e2e20416c6c
205269676874732052657365727665642e54696d6573204e657720526f6d
616e426f6c644d6f6e6f747970653a54696d6573204e657720526f6d616e
20426f6c643a56657273696f6e20352e303520284d6963726f736f667429
54696d65734e6577526f6d616e50532d426f6c644d5454696d6573204e65
7720526f6d616e20697320612074726164656d61726b206f662054686520
4d6f6e6f7479706520436f72706f726174696f6e20696e2074686520556e
697465642053746174657320616e642f6f72206f7468657220636f756e74
726965732e4d6f6e6f7479706520547970652044726177696e67204f6666
696365202d205374616e6c6579204d6f7269736f6e2c20566963746f7220
4c617264656e742031393332596f75206d61792075736520746869732066
6f6e74206173207065726d6974746564206279207468652045554c412066
6f72207468652070726f6475637420696e20776869636820746869732066
6f6e7420697320696e636c7564656420746f20646973706c617920616e64
207072696e7420636f6e74656e742e2020596f75206d6179206f6e6c7920
28692920656d626564207468697320666f6e7420696e20636f6e74656e74
206173207065726d69747465642062792074686520656d62656464696e67
207265737472696374696f6e7320696e636c7564656420696e2074686973
20666f6e743b20616e6420286969292074656d706f726172696c7920646f
776e6c6f6164207468697320666f6e7420746f2061207072696e74657220
6f72206f74686572206f75747075742064657669636520746f2068656c70
207072696e7420636f6e74656e742e004e00650067007200650074006100
540069006d006500730020004e0065007700200052006f006d0061006e00
20004e00650067007200650074006100740075010d006e00e90054006900
6d006500730020004e0065007700200052006f006d0061006e0020007400
75010d006e00e900660065006400540069006d006500730020004e006500
7700200052006f006d0061006e0020006600650064004600650074007400
540069006d006500730020004e0065007700200052006f006d0061006e00
200046006500740074038803bd03c403bf03bd03b100540069006d006500
730020004e0065007700200052006f006d0061006e0020038803bd03c403
bf03bd03b1004e00650067007200690074006100540069006d0065007300
20004e0065007700200052006f006d0061006e0020004e00650067007200
6900740061004c0069006800610076006f00690074007500540069006d00
6500730020004e0065007700200052006f006d0061006e0020004c006900
6800610076006f006900740075004700720061007300540069006d006500
730020004e0065007700200052006f006d0061006e002000470072006100
73004600e9006c006b00f6007600e9007200540069006d00650073002000
4e0065007700200052006f006d0061006e0020004600e9006c006b00f600
7600e9007200470072006100730073006500740074006f00540069006d00
6500730020004e0065007700200052006f006d0061006e00200047007200
6100730073006500740074006f00560065007400540069006d0065007300
20004e0065007700200052006f006d0061006e0020005600650074004800
61006c007600660065007400540069006d006500730020004e0065007700
200052006f006d0061006e002000480061006c0076006600650074005000
6f00670072007500620069006f006e006100540069006d00650073002000
4e0065007700200052006f006d0061006e00200050006f00670072007500
620069006f006e0061004e00650067007200690074006f00540069006d00
6500730020004e0065007700200052006f006d0061006e0020004e006500
67007200690074006f041f043e043b0443043604380440043d044b043900
540069006d006500730020004e0065007700200052006f006d0061006e00
20041f043e043b0443043604380440043d044b043900540075010d006e00
e900540069006d006500730020004e0065007700200052006f006d006100
6e002000540075010d006e00e9004b0061006c0131006e00540069006d00
6500730020004e0065007700200052006f006d0061006e0020004b006100
6c0131006e004b007200650070006b006f00540069006d00650073002000
4e0065007700200052006f006d0061006e0020004b007200650070006b00
6f011100e20323006d00540069006d006500730020004e00650077002000
52006f006d0061006e0020011100e20323006d004c006f00640069006100
540069006d006500730020004e0065007700200052006f006d0061006e00
20004c006f00640069006100b15420b8040cb30c0e3220b8040cb2131732
b8040bb328201f0f41100412008004120002000f0412003f0412005f0412
0003005f0412000100400412b2783340b80412b2723340b80412b26e3340
b80412b26a3340b80412b2543340bc0412004a0033ffc00412b317183240
b80412b30a0c3280b80412b308093240b80411b25a334041090411005600
33ffc0041100530033ffc00411b2503340b80411b24d3340bc0411004700
33ffc00411b344453240b80411b2423340bc0411003e0033ffc00411b23a
331f4124041100200411004004110070041100af041100f004110006000f
0411002f04110090041100ff04110004002f041100400411007f0411008f
041100a0041100e004110006ffc00411b208330f411b0410008f04100002
000f0410001f0410002f0410000300600409000100b004090001000f0408
003f0408004f0408009f04070004040ab2006c1fb9ffc00403b345453240
b80403b32b2e3240b80403b2282932b9ffc00403b21a1c32bd0403029900
27001fffc00401b2161b32b9ffc00400b2424232b9ffc00400b2363832b9
ffc00400b32a2d32df410a040000ef04000002040004010028001fffc004
01b3282e32f0bf0401000103fe000f0101001fffc003fcb310143240b803
fdb30f133240411003f9005003f9000200b003b100c003b10002006f03f5
007f03f50002ffc003afb22d3132b9ffc003afb30a0e3210411003ef0020
03ef008003ef000300a003ef0001002003ef004003ef0002ffc003efb313
163240b803e7b20f1132b9ffc003dfb2303432b9ffc003dfb31018325041
1403dc000103c903d20023001f03e203d2001e001f03c703d2001d001f03
c603c8000d001fffc003a4b30f103280411003a3000103a303790029001f
03a5037a0032001f03a8037e001b001fffc003d9b20e1132b9ffc003d9b2
282a32410a03a7037c0032001f037303710034001f036c036bb2321f20bb
03a40001004003ecb3090b3240b803ecb2101532bd03e9036b0014001f03
e4036bb2171f0fbd036e002f036e0002ffc003b8b3090d3290410c03b800
a003b80002001f03d20001009f03d20001004003d2b2090b32410a03a903
800016001f03cf03810015001f03aa0382b2151fc0bb03f70001004003f6
b3090d3240b803a2b2083340b803a2b30d0e32c0410903a2000100b003f2
00c003f20002ffc003f4b3263832004126038c0030038c0002002003e300
3003e30002001003ee003003ee005003ee006f03ee007f03ee009f03ee00
06000003ed003003ed0002002f03de007003db009003db009f03de0004ff
c00379b20f1032b9ffc00379b2242832b9037d037cb2321f10bb037e0001
ffc0037eb3090e3240b8037cb2121332b9ffc0037cb30c0e323fbd03d700
4f03d70002004003d8b31718326fbb038e000100400390b3181b3240b803
d4b2090c32bd037b037a0032001fffc0037ab20e1132bd03800382001600
1f03810382b2151fb0be03820001000f03830001004003ffb30c11327f41
1403540001006f0354008f035400d0035400ef03540004000f0354002f03
54005f0354000300400350b30e0f320fbb035a000100400349b20e331fbd
0348007f03480002ffc00348b2152232b9ffc00347b2152232b9ffc0040f
b21b1e32beffc0040f002d01000032040e0406b22f1f51bb034b0001034f
034eb2641f40b80351b20e0f32b9ffc0034eb3383a3230bb034e0001ffc0
034eb21f2332b9ffc0034eb2131932b9ffc00346b2091132b9ffc00343b3
0a11320fbb03440001ffc0032bb2080e32b9ffc0032bb2161b32b9ffc003
2ab31417321f4110033a0001000f03330001000003370020033700300337
008003330004ffc00332b310123250416403320001004003320060033200
a0033200b00332000400100332003003320050033200e003320004000f03
36007f033600ff033600030070033600f003360002000f0331003f033100
8f033100bf033100e003310005000f0331006003310002008f0330000100
6003300090033000020050032f00010010032f0040032f0060032f008003
2f00a0032f00c0032f00f0032f000700cf032d00ff032d00020030032d00
80032d00b0032d00df032d0004006f032c007f032c00020012032000fd08
00001f007f0299403a017f007f017f027f037f047f057f107f1108403525
2c32406a252c32402e252c324028252c3237600970098009033009400950
09031009200902b8ffc0b2073a33b8ffc04012063a33da4dea4dfa4d0312
379006900702cf410c011100df011100ef0111000300cf011000df011000
ef0110408703cf3edf3eef3e03cf4ddf4def4d03cfdedfdeefde03cf2ddf
2def2d03404d1b3a32375f016f017f018f01041f012f013f014f01045f03
6f037f038f03041f032f033f034f0304600b700b800b03300b400b500b03
100b200b02900ba00bb00bc00bd00b05b006c006d006e006f00605500660
06700680069006a006061f072f073f07400604f0414302db000100a002db
00b002db0002008002db009002db0002001002db000100c002db00d002db
0002009002db0001006002db007002db0002004002db005002db00020023
02db003002db000202db002300a002da0001008002da009002da00020040
02da0001002302da003002da000202da0023000002d90001007002d90090
02d9000202d9401c2230244024021024202402002401f02401d024e02402
b024c02402c0413a02d8000100a002d800b002d80002008002d8009002d8
0002002302d8003002d8000202d8002300c002d7000100a002d700b002d7
0002008002d7009002d7000200a002d700b002d70002008002d7009002d7
0002006002d7007002d70002004002d7005002d70002002302d7003002d7
000202d7b223370f4117029b0001005f029b009f029b00df029b0003002f
029b003f029b006f029b0003001f029b0001029b029b0040029ab3272c32
80b8029ab2263340b8029ab2223340b8029ab21e3340b8029ab21c3340b8
029ab3191a325f410f029a009f029a00df029a0003000f029a001f029a00
3f029a0003ffc00299b2443340b80299b23d3340b80299b23a33df413702
990001005f029900af02990002004f0299009f02990002002f0299003f02
99000200af02990001000f0299003f0299000200b0029900e00299000200
70029900a002990002004f0299005f02990002001f0299002f0299003f02
990003029a029a02990299000f027a002f027a400b020016160000001211
0812b802bab269121fb802b4b228101fb802b3b228101fb802b2b228101f
411302030023000d01ee0023000d01ae0023000d019f0023000d01940023
000d01570023000d010f400b230df9230dc5230da7230d410a024a002400
0d01f00024000d01e90024000d016a400e240de8240dc6240da3240da224
0dbb01e30022000d0121401a220de5220ddd220db7220daa220d93220d5c
220d51220d4c220d410a02280020000d021d0020000d015e0020000d011c
4017200dfc200de1200dcb200dc8200da1200d59200d3a200d410a01f200
34000d019c0034000d01970034000d0135b7340d1f340d1d340dba020200
0f015bb20f0009bb0202015b000d030ab22a3e1fb80309b22a3e1fb80221
b24d251fb8021cb24d411fb8021bb24d521fb8021ab24d721fb80213b24d
931f4109020f01b10401001f020e01b10801001f020cb22a811fb8020bb2
2a811fb80208b22a5e1fb80205b22a391fb801feb22a231fb801fbb2661d
1fb801fab2661e1fb801f6b266341fb801f5b266341fbc01f30066020100
1f01f1b2669e1f410901ea00280801001f01e7002602ab001f01b8b24d3f
1fb801b7b24d931f410901b4003e0125001f01b200400401001f01acb22a
721fb801a8b22a281fb801a7b22a241fb801a6b22a241fb801a3b22a1f1f
b801a1b2662e1fb8019eb266931fb8019db266e41fb8019ab2286c1f4109
019900280401001f019800260401001f0173b24d1b1fb80171b24d241fb8
0170b24d2f1fb8016fb24d351fb8016bb23ecd1fb80169b23ee41f410901
6701b1019a001f0166002a02ab001f0161b2662a1fb8015fb2669e1f4109
015d0028019a001f015c00350401001f0147b24d391fb80146b23ecd1f41
0d0145003e0125001f014401430101001f014201b102ab001f0140b22a30
1fb8013eb22a261fb8013db2661d1fb8013cb2662b1fb80138b228811fb8
0137b2289e1fbc01360028019a001f0129b24d721fbc0124002a0201001f
0123b22aab1fb8011fb266291fb8011eb266451fb8011bb228811f410901
13003e0125001f0112003e0401001f0111b22a291fb80110b22a201fbe01
0b0066019a001f010a0026019ab61ffd4d721ffb3eb80156b21ffa40b808
01b21ff728b80801b61fec4d621feb4db80401b21fea40b802abb61fdf4d
721fde3eb802ab400b1fdc2ae41fdb66221fca2ab80401401b1fc92a2e1f
c326791fb828bb1fb34d1e1fb166291fb066621faf66b80401b21fae26b8
02abb21fa828b80201400b1fa0664c1f982a2b1f9726b8019ab61f926629
1f8740b802ab401b1f852a791f8226811f754d931f744d891f732a1d1f70
285e1f6a28b8040140171f692a521f682a201f6766291f6566671f612a93
1f6035b80801b61f5e2acd1f5335b80801b21f4b66b80156b21f493eb808
01b61f4866521f4626b80201b21f3f66b80156400b1f3b66341f322a931f
2e35bb0401001f002d0143b3cd1f5537bc022f0007018000070172402e07
bd077e076207540742072f072707250721071e071408120810080e080c08
0a0808080608040802080008000214b8ffe0402b00000100140610000001
000604000001000410000001001002000001000200000001000002010802
004a00b013034b024b5342b0372b4bb807ff52b0382b4bb008505b58b101
018e59014bb0c063004b6220b0f65323b8010a515ab005234201b0124b00
4b544218b0382bb00288b801005458b801ffb101018e851bb0124358b900
01012c858d1bb900010146858d59590016763f183f123e113946443e1139
46443e113946443e113946443e11394660443e113946604445442b2b2b2b
2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0
aa1d59b0324b5358b0ff1d594bb02953205c58b9026c026a4544b9026b02
6a45445958b90168026c455258b9026c01684459594bb03b53205c58b900
3e026b4544b9004d026b45445958b9025c003e455258b9003e025c445959
4bb03b53205c58b901b1003e4544b13e3e45445958b9024f01b1455258b9
01b1024f4459594bb05a53205c58b90143003e4544b13e3e45445958b903
8b0143455258b90143038b4459594bb09e53205c58b9002a026c4544b900
40026c45445958b9056c002a455258b9002a056c4459594bb01853205c58
b126264544b1662645445958b13226455258b126324459594bb05153205c
58b126264544b1282645445958b1ad26455258b126ad4459594bb8010153
205c58b126264544b1352645445958b902280026455258b9002602284459
592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b3
3d766e58456523456023456560234560b08b766818b080622020b16e7645
65234520b003266062636820b003266165b076236544b06e234420b13d58
4565234520b003266062636820b003266165b058236544b03d2344b10058
455458b158406544b23d403d4523614459b34e8138714565234560234565
60234560b089766818b080622020b138814565234520b003266062636820
b003266165b081236544b038234420b14e714565234520b0032660626368
20b003266165b071236544b04e2344b10071455458b171406544b24e404e
45236144594b5242014b5058b108004259435c58b108004259b3020b0a12
4358601b2159421610703eb0124358b93b21187e1bba040001a8000b2b59
b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e23
42b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b011
2342007418456944456944737373737474757575752b2b2b73732b2b2b2b
2b2b18456944737373742b45447373737373747474454473747474747474
757575454473754544737374744544737373737374747474007575757575
7575757575752b2b74747474747400732b4358b14d4d451869441bb8ffc0
b34d1b3a322b5973002b2b7575752b2b2b2b2b0073732b435c58b8ffc0b2
071633b8ffc0400b061633d54de54df54d03c0410c011100d0011100e001
11000300c0011000d0011000e00110401e03c03ed03ee03e03c04dd04de0
4d03c0ded0dee0de03c02dd02de02d03372b74747474747473002b2b5901
73737473747374737473747374752b737573002b2b2b01732b2b2b2b752b
2b2b732b2b2b002b2b742b732b7373742b73732b2b2b2b2b2b732b732b2b
2b742b2b2b73737373732b73732b2b2b73002b2b2b2b7374732b732b2b2b
2b752b2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b
2b2b752b2b732b2b2b2b2b2b2b2b2b2b73747573742b7374752b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b00000000>
[15741 16161 13769 16145 16073 14161 16181 15745 16185 16133 16009 15565 16237
16089 16033 16333 16061 15853 16253 15313 15937 15965 16285 16225 16257 15369
16145 15977 16373 14341 16353 16285 15809 16169 16261 16005 15921 14587 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> TimesNewRomanPS-BoldMT AddT42Char 
2 9004 36 <00020010000005b00568002100240130409322100b123f66107610772387
108623aa0db71007960db30d020124230200222323210a0e0b1d0a172118
1d170b09010902081d091611151d1601240a00221673230f102023002110
2102212302212d1110141111102302232102280e0f140e0e0f02760e010e
0a7a11012111100f04162321110e02040117230f2224280000010101e410
40100f031716160a0a09080f160116ba01820023012e4023200a19302670
268026a026d026e0260625102620264026502680269026b026078f6d182b
4e71105df4191a4dfded5d00183f3c103c103c3f3c1a10fd5d3cfd3c1139
1112173901111217395d12395d39870e2e2b087d10c4870e2e182b087d10
5dc42b113939113939180010ed0110c00010ed0110c05d0010ed0110c000
10ed0110c007103c3c073c3c3130005d015d012b01210706151417161715
2135363637013301161716171521353332373635342726272703030354fe
21391c2e1b6afe3d495e4501e51301e9462d223efd701b4f201606021c6a
cad0018284422b391b100825250b639b043afba89e291f05252516101e12
130942f301d3fe2d>TimesNewRomanPS-BoldMT AddT42Char 
3 1584 55 <0001004a0000050c054c002000acb90022ffc0b3181a3422b8ffc0403b10
1234202240225022c02204302240220201dd0707fc021d0118201d102222
09201d0f22231fdd1a1afc1e1d1f071a28002002100f080070010101b801
2a4022080f091f0902093e19101801201850189018031820101f01201f50
1f7f1f901f041fba012a001802aeb3216e58182b10f6f45d713c105d713c
fd5d3cf45d3c003f3c3f3cfd3c0110edec0010fd2b2b0110edec0010fd31
3001715d2b2b011123262627262323111416163333152135333237363736
351123220706072311050c24204e44265f6517433a2dfd3a2d3b241a0f0b
62893e571726054cfe917f6f2112fbea6834272525150e22186604163a51
96016f00>TimesNewRomanPS-BoldMT AddT42Char 
3 5466 68 <0002005cfff303de03c30031003c024a4015061010390420103932403c44
348b3593079b35033eb8ffc040614b35b639017e07a62dac3cb72dc62dd8
21d72dd835e62d09350745074a134a1749355817660895009b35a501b601
b6080c330701803e99049a2d9c3104003e503e6316603e72179615af01a5
3abf01e03e0a0816503e743b03480802151215023bb8ffc040c41739ef3b
013233080908072b2c282b2c252b2c293c33ab33bb330304333d334d337d
338d339f33ad33bd33ce33dd33ed330b703301333b140821086508750804
02083b084c087a0889089f08a608c808d908090b081b0870080314120803
180d261f2b2b2c2929662f3b48023297005d2f2f021840292b340f181f18
5f186f189f18af18bf1807df18ec18fc18031818400e103418021f07020b
0f2c1f2c2f2c3f2c042c4429430f251f250225ea00002f093f097f09bf09
0420097f0902000910090209b801bb4010403e803e02403e603e023ea815
01151bb8ffc0402850283fff1b011b2b0037103702373205402325346f05
f0050230054005500560050405193d385518b80131852b4e10f45d712b4d
ed71f4712bc15d105d71f45d5d723c10fd5df6e45d003f3f12392b2f5d71
2b103c10f4ed10ed10fdf4e410ed1117395d717212395d71721139390111
12393910c908103c0e3c3c005d2b0172b10602435458b40c181d1802005d
59313043794032383a1c230a1003040f251d2621250b2639260e1e111e00
0c20091e0122233a03371e00101c0d1e010a220d1e0138043b1e00002b2b
2b012b103c2b2b2b2b2b2b2b818181810172715d0072715d01712b00712b
2b2b25062322263534362535342626232207061514171615140623222635
343636333216171615111416163332371706062322262711060706151417
1633320249ab88506ab80135174028412a1a1c26493b3f5572cc6e859b17
0e0a140d1a1b1e326b44505a0a793b2721192d328a97694f6bab8e5e6a37
291d1218151f2b2831454c3348834671422a97fe9540211025184a434b95
0139475136372e231b00>TimesNewRomanPS-BoldMT AddT42Char 
3 7556 72 <0002004fffe4035d03c3001500200135405806124b145d146f1468156518
791407250aa702c602c911d102d103d80dd815f303f80d0a7f1501224013
1534560366036f2277037f228303860eea0de815092a08ff16010809092b
00081008200803085d05201600014616b80128b41b26130705b8011eb30c
0b0916b8ffc0400b32193f1640192234166900b8ffc0b632193f0f000100
b8ffc0b30b0e3400b8ffc040181135001a2f223f225f22ef22042220290f
011f0102013210b8ffc0b332193f10b8ffc0b31e123f10b8ffc0b3263034
10b8ffc0400c0c0e34d01001101921388e182b4e10f45d2b2b2b2b4dfd5d
e44e105df62b2b712b4ded2b2b3c003fed3fedf4fd3c103c10f45de40110
c97131304379401e111e1d251817191702061c121f1e001a14161e011e11
1b1e0117151b1e01002b2b012b2b2a2b81015d2b00715d01710121161716
33323637170606232227263534123332160734262726232207061515035d
fdff095a45613c6238224cb879d06b56fdaa8ed1ee2325152334213b01f5
ba6c534357169b81a081bfea0115e9a2a1781f1233599b23>TimesNewRomanPS-BoldMT AddT42Char 
3 9688 76 <0002002a00000223056c000b001c00db40161e8011173f0f110012001c1f
111012101c0617241f12b801eeb4220d241f11b801eeb42318241f1cbb01
ee00230006ffc04011343634af0601064000010c1c0612110a09b8ffc040
1c3436340009100902094003290c0c0f0d1f0d020d2a18174011173f17b8
ffc0b23a3517b8ffc0b320233417b8ffc0b313173417b8ffc0402f2d3034
b017018f17010017101702177b401e501e021f1e601ea01eb01e042f1e3f
1e8f1eb01ec01ee01e061d4ec0182b105d7172f65d5d712b2b2b2b2b3cfd
5d3c10f4ed5d2b003f3c3f3c3fed5d2b2b2b2b015d3130012b0132161514
0623222635343613111416171521353637363511342627350126415a5b40
405a5acc2e43fe073e1e142e42056c5b40405a5a40405bfe3bfd1b633704
242402221763022263370425>TimesNewRomanPS-BoldMT AddT42Char 
3 11002 79 <0001002b00000224054c001000c0401c128011173f601201b012010f0500
0600101f0510061010060b241f06b801eeb42201241f05b801eeb4230c24
1f10b801ee40162300100006050a000f011f0102012a0c0b4011173f0bb8
ffc0b23a350bb8ffc0b32d34340bb8ffc0b32023340bb8ffc04023131734
b00b018f0b01000b100b020b7b1f12a012b012032f123f128f12c012e012
0512b8ffc0b331343412b8ffc0b62d2e34114ec0182b102b2b5d71f65d5d
712b2b2b2b2b3cfd5d3c003f3c3f3c2b2b2b015d3130015d712b01111416
1715213536373635113426273501b32e43fe073e1e142e42054cfb766337
0424240222176303c86237042500>TimesNewRomanPS-BoldMT AddT42Char 
3 12048 81 <000100460000043703c3002b0204b90006ffe8b50b390906012db8ffc040
384b35502d0105050506250603d902d603d51a0315063505460203d601df
1b02120f0e0021002b1f0e1021102baf0fbf0f08011b1c14241f0fb802db
40112226241f2123220a241f0e23231c241f20b802da40152327241f2b23
232120200f0f0e0a1966050304071bb8015fb3d0010101b8ffb540561835
017900002b060a1f0901092a1515144021413f14403d350f14012014cf14
021440454734144043351440393a341440353634144030313414402b2d34
1440272834144022243414401e1f34144010113410140114b801bb400f1f
2db02d022f2d702d022d403e352db8ffc0b3393a342db8ffc0b33536342d
b8ffc0b33031342db8ffc0b32c2e342db8ffc0b32728342db8ffc0b31e1f
342db8ffc0400f1315342d1c0f001f0002002a272726b8ffc0400e21413f
f026012f26c026d0260326b8ffc0b3373a3426b8ffc0b32f313426b8ffc0
40091d243426192c4e81182b4e10f42b2b2b5d712b3c4d10fd5d3c102b2b
2b2b2b2b2b2b5d71f45d2b2b2b2b2b2b2b2b2b2b5d712b2b3c10fd5d3c00
3f3c10f42b71ed3f3c3ced3f3c103c103c2b2b2b2b2b03100e3c3c015d43
5c58b90020ffc0b3120b3f20b8ffc04009140c3f0f40140c3f20b8ffc040
13160d3f0f40170e3f0f40190f3f0f401b103f0fb8ffc0b221143f2b2b2b
2b2b2b2b2b59313000725d0171015d722b00712b01153636333216171615
111416171521353637363511342626232207111416171521353637363511
3426273501c348844c5b781410273efe27351710122b1a564a2735fe273b
1911273e03a7794e47654b39a2fe946c350724240725196301a0733c217b
fe0b69380724240620166c02106a34082500>TimesNewRomanPS-BoldMT AddT42Char 
3 14162 85 <0001004b0000036e03c300290127400a0b260b390b140c103f0bb8ffc0b3
2224340bb8ffe7b31b1f342bb8ffc0b33134342bb8ff80b21f352bb8ffc0
b31d1e342bb8ffc0b30f10342bb8ffc04027141634102b01960b902b020b
190d11340f1d001e00291f1d101e10290601151617170022a21f1eb801ee
b42217c61f1db801eeb42323241f29b801ee401d230a320f401e3c3f0f40
1c373f0f67050304070029061e1d0a0f5d000aba015f0004015fb79007d0
07e0070307b801ba400b00290f171f1702172a2322b8ffc0b24b3522b8ff
c0b330343422b8ffc0b31b203422b8ffc04014121634c022017022010022
10220222da2a4e55182b10f65d5d712b2b2b2b3cfd5df4f45deded10e400
3f3c3f3c3f3c3ced2b2bed2b2b2b070e103c3c3c015d3130002b015d712b
2b2b2b2b2b2b002b2b011536363332161514062322262726232207060706
15151714171616171521353636351134272626273501c95d8c413843412e
354e070a0d1d1a29152001070c2f38fe073d2b080a263003a7d4915f453f
434a44040616223f6175d73839101b1903242405397a020550161c1a0525
>TimesNewRomanPS-BoldMT AddT42Char 
3 14582 86 <00010051ffe402d403c3003202aa405c0b3015103f04100d2914101d2904
06141614c625c626d910ea10f910072910252a3810362a870b95239524a9
0ba323b80bb4230b050c050d0829150c470b4b0c06400b400c0212321f00
9b021f010140140c3f01400b123f9f010101b801454013009b122f400b12
342ff32b181f199b1b1f1a1ab8ffc0b60b123f901a011ab8016b401e199b
16f3121205262b07121e26120b120f011f01020140121534015b1221b8ff
e0b40914065521b8ffe0400a09140255002110210221b8ffc0400b0b0f34
002110210221220eb8ffc0403a32193f1f0e010e1a0f34012f344f345f34
6f347f34af340634120820091406550820091402550f081f080208400b0f
340f081f080208221a2928b8ffc0b632193f0f280128b8ffc040090c0e34
2819333871182b4e10f42b712b4de4ed5d2b712b2b435c58b508201b103f
08b8ffc0401732193f084014213f083c15233f083c16253f08400b123f2b
2b2b2b2b2b594e105d71f6722b4ded5d2b712b2b435c58b52120140c3f21
b8ffe040091b103f215e32193f21b8ffc0b314213f21b8ffc0b315233f21
b8ffc0b316253f21b8ffc0b20b123f2b2b2b2b2b2b2b59e42b71435c5840
19014028183f01401c113f0140101b3f01400e173f01400d163f2b2b2b2b
2b59003fed435c58b51e1e1e0f3f1eb8ffe2b30c143f1eb8ffe2b30d163f
1eb8ffe2b20e173f2b2b2b2b593fed435c58b90005ffb540121e0f3f051e
0c143f051e0d163f05140e173f2b2b2b2b5910ecf4ed5d2b0110edf4ed00
10ec2b435c58400f2f400a113f2f40090f3f2f40140c3f2b2b2b59f4ed5d
2b2b0110edf4ed435c58b5252d1c113f0bb8ffd0b31c113f0bb8ffe04009
190f3f252d170e3f0bb8ffd34009170e3f252d160d3f25b8fff1b3171f3f
25b8ffe4b718203f0c1c19213f002b2b2b2b2b2b2b2b2b59007131300071
5d015d5d002b011323262623220615141716041615140606232227262322
07230333161633323635342627262726353436333217163332363702940f
223d8341293a142001265d4e8e5643701e0b21162110222d9d46303d3c68
992d42958d4c471b1112161803c1fec18e6837241b1929c78b564e96502a
0b32015084843b2a3046476a3852636caf250f0f2300>TimesNewRomanPS-BoldMT AddT42Char 
3 15414 87 <00010026fff3029604fd00190098400e8f0b8f0c028f0b8f0c020b0c0019
b801b6401901041414031583020106200b300b400b030b7209650e0b0203
b8010e401d050bb60c1a1b010404000f051f0502052a1316157914141340
0c143f13b8ffc040101d22342f13c013d0130313191a4e55182b4e10f45d
2b2b3c4d10f43c10fd5d3c3c103c4e10f64ded10f43c003ffde45d3f3cfd
3c3c103c10f43c0110c93130017100710111331523111416163332371706
23222627263511233536363701b8dede0f2610413a1e51b6597b110a7a7e
b14204fdfeaa63fdbf512f1d6316c0633d229601f92359c47900>TimesNewRomanPS-BoldMT AddT42Char 
4 2120 92 <00010011fe4603ed03a7002f0163b50f0d1f0d020cb8ffe040ae13153e04
0114014a004a0d481a591a5a1b582e6a1a6a1b682e891bb81bc81b0e2813
28143800381a4600460d67066707670c982fa800a81ad7190d0000010d2f
0d0c2f0e060c071f061519161f151005010501041f05140e131f142a1527
28242b0e2f2f461a19141a1a190c0d0d180d163f0d5e000114000d0e0001
01212f1a190e0d0c000715272f0024190e0d0c0105051a24ea2b901e0f24
ea1e151414060605061a000b6031e031f0310331b8ffc0400d1428343117
171a0f152f150215b8010340170529292027342744270327c9212b0005d0
050205193031b80103b321c155182b2b4ef45d4df4fd5de410fd5d4e4565
44e62b72003f3c3f3c103c103c4d10ed3feded1112173911123901111217
39123987082e2b2b0e7d10c4870e2e182b0e7d10c4001112390111123918
0010ed0110c00010ed0110c05d0010ed0110c00010ed0110c00708103c08
3c3130015d5d2b005d050126262735211506061514171313363534262735
21150606070102070623222635343633321617161716333237363701f2fe
d244412e01f1312832a06d3b313e01392e3a44fef5653145685367473432
3d010108080f181b28362602b59d480e25250222182670fe92011b973b25
2c022525053db1fd4bfefc3c545f433a4c4043260b0b1d2a9600>TimesNewRomanPS-BoldMT AddT42Char 
2 0 0 <0002011c0000051c0500000300070042b40201c30607b803084013000504
c303000a0704c3010019080605c30203bc014100090125015600182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
011c0400fc2003c0fc400500fb002004c000>TimesNewRomanPS-BoldMT AddT42Char 
TimesNewRomanPS-BoldMT /CharStrings get begin
/space 3 def
/A 36 def
/T 55 def
/a 68 def
/e 72 def
/i 76 def
/l 79 def
/n 81 def
/r 85 def
/s 86 def
/t 87 def
/y 92 def
end
TimesNewRomanPS-BoldMT /Encoding get
dup 32 /space put
dup 65 /A put
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
pop
end
%ADOEndSubsetFont
reset_gvm
/VCULPO+TimesNewRomanPS-BoldMT /TimesNewRomanPS-BoldMT findfont ct_VMDictPut
/VCULPO+TimesNewRomanPS-BoldMT*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A 18{/.notdef}rp /T 12{/.notdef}rp /a 
3{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
3{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
VCULPO+TimesNewRomanPS-BoldMT nf
VCULPO+TimesNewRomanPS-BoldMT*1 [0 -36 -36 0 0 0 ]msf
76.38 370.772 mo
(Transient Analysis)
[-21.3015 -15.966 -18.0036 -20.0196 -14.0079 -10.0116 -15.9876 -20.0196 -11.9913 -6.95877 -25.9956 -20.0196 
-18.0036 -10.0116 -18.0036 -14.0079 -10.0116 0 ]ysh
gsave
162.48 583.051 mo
94.98 583.051 li
94.98 -136.949 li
162.48 -136.949 li
cp
eclp
94.95 583.051 mo
162.51 583.051 li
162.51 -136.949 li
94.95 -136.949 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
gsave
229.98 583.051 mo
162.48 583.051 li
162.48 -136.949 li
229.98 -136.949 li
cp
eclp
162.45 583.051 mo
230.01 583.051 li
230.01 -136.949 li
162.45 -136.949 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
410.88 415.111 mo
180.66 415.111 li
180.66 414.151 li
410.88 414.151 li
cp
181.68 417.631 mo
175.68 414.631 li
181.68 411.631 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
grestore
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /TimesNewRomanPSMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3213555865000000cc000000606376
7420fe30def00000012c000007da6670676dc3a61d010000090800000631
676c79661f83ed1d000094f00009226a68656164db396bb800000f3c0000
00366868656112ef167800000f7400000024686d7478b2cb2f8b00000f98
000035526c6f636140ad4ee2000044ec0000355c6d617870142a06ad0000
7a48000000206e616d65a4c6655c00007a6800000b3e7072657039e6c80d
000085a800000f4567646972000000000000000000000000000303350190
00050008059a053300000125059a0533000003a000660212010502020603
050405020304e0002affc00078410000000900000000544d432000400020
fffc058cfe460133072101bb400001ffffff00000394054c000000200004
058e0000054c001f054c001c0394001b0000ffe10000ffe40000ffe8fe4a
fffc056b0023fe6affe00313000000ad000000ad0000000000250096009f
002400f0013100c200c0004a00a6004100500094004700cf00af000e0079
01cb00040023004400a80025011f0002004600170105009900d9005c0072
00e500e00028004b00de011200240045007000160039ffe90016004b0088
ffb900d9000a004300ae00ba016c0153002f00430048022c012b0025008f
ffc000170028ffcdffd80025009d00e50124ffb10048009d00e600110027
007f00910012006a00cafffc00000024006200a7017c01e900210060008b
0434048aff6b003b00b500d5014bff6b004d007905d809b5006c009100a3
011701c0ffdfffe700be04010065007f00820088009900b200c0022e0343
05a000200026003d004e00610065007b00d9011301310340ff27ff42ff99
004e00a700f2022b02c603070011002b0049005f008d00a100af00d600e4
00f5010b0135019d01ab01ab01d101ee05d80000004b0075007a0080009d
00a600a700ac00b9013101310217021700020017002900550080008f00a5
00b200b300d0014b015901c001c103a50530fe3fff14ff15ffe7ffff002a
00580099009f00c100e400f40130015901ab01ab03220374041e04740532
fd81004d0064009c00d000d100d600de00e500f500f8012a012a01e1027e
027fff57ffa8ffe500000008001f00380051005a006f0076007700a200c0
00c200c400f101fb0209027e02cf04c5057a05f0ff92001200260042004b
004f005100530064008b00ae00b200b800b800d600f50111012001310138
014e01520167018f019601b801d901d902060221027102ea03b003cb03dc
04360505ff3a00120016001e001f002300570068006c007e0088009200a5
00a800c500c901150126012d013001d601d901f6023b0244024402a302cf
02de0385038f04fc0586fee0feebfefbff8a0007004400470058007500aa
00e400ef011601200129016a017301e3027e029002b4030e031003230335
0341035403590388039403c803ce047204ab04da0549056105ab0761fe6e
fed1ff4bff84000000010006001e0027002c0034003700620066006a006b
006c007000700072007c0081008a008e0091009200a000ab00b800bf00c9
00d500dd00ec00f40100012101300169016a016d017c0185018e018e0199
01ac01c101c501c901e101f601f601f60222022202280236023f02430246
026702850285029402d002d602e8031c0363037f03800380039e03b603d9
0400040404ff053205320548058b05a706cb07280748076208ccfcedfd2a
fd59fddefe00fe1afe5bfe96fec1fee7ff56ff7900010025002d002e007c
00870091009900a100a500a500aa00af00b600c600cc00d700dd00ec00f2
01020105011701180123012a012c0131013f014701490149014d01510151
015501550157015a015a0161016201680168017f0180018201830184018d
0195019501950198019901a501a901b601b601b701ba01ba01d501df01e6
01ea01f2020002000203021702250227022f0239024302430247024f0252
02520267026f026f027002720276027e02a702b302b902d603130325032d
03610371039903ae03c203d403f90402042c042f043c04560467048304cf
04d104d804fb051f05450568059e05c2061b06340655066a069806af06e8
06fc070607500762077c07d407ff082500ad00c700aa00b5000000000000
000000000000002f06cf01730514047802df009c00180370058701550025
00060254036c038e03d2056601f0032001da018a0369036bffa3034602f8
036f015602bf0122031f053a0366008c00ff01ab02e102f402e704150154
02e90128049101b7026f034302060000000005d30415048305e8000002d7
003a027d01c002c503830383ffbd003a059e01df059e02d1002004e00213
00df01c001870297000000ce0269028b0058043405fb0069015a01a90578
0182013e0288012a03d4049e00e5032302f301f00196007a00cd014a0424
025e023901ab00cf00fd011e00ed017100700195004001bb01dd01b80001
01a803a7014c020c018d01b0020d0137010000cd032101d4030a00590000
000001260215015002f0025503bc06d00335010100d000d2007a01030130
007c000000000000000000fe006e006600940227002b0045004d00d30132
00180097004100f4febcffe9001605d8058b009100a1032c00520030005d
02cb003a009200e500e500580086003200ba0099008800300298007cff80
01640028004d0065000200b8016a002f010b001100170100007f00040016
022200a6005f000000f8000a00ca0043004b01ee0077012000f401c00028
045f0000008c044500c20060007b008b008b0064005d00c2009c009206b5
05d3004f011700000420fe9e00cc00dc005e004600e30032001a003c0091
005a00a1042c0041002000490071009c009cfe4800400040008600cb0102
007d003a003e006a0050044800290096ff6a0097006900e0004c001b00c9
0069ff970043ffbd0052ff83ff8b005fffa1ff5c00670053ffa8002a0076
ffb20036008705590256052b043400de00c901c4004800db018b00b30048
00da01160125011800ea00ea00ae0000003e05bb008a04d70053003fff8c
ffd500150028002200990062004a00e4006d00ee00e5004803c00033fe4e
02b1ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a50705
00ab0080001e05a50025008b04660230006900290016012f0080005c059f
000040425554403f3e3d3c3b3a393837363534333231302f2e2d2c2b2a29
2827262524232221201f1e1d1c1b1a1918171614131211100f0e0d0c0b0a
090807060504030201002c4523466020b02660b004262348482d2c452346
236120b02661b004262348482d2c45234660b0206120b04660b004262348
482d2c4523462361b0206020b02661b02061b004262348482d2c45234660
b0406120b06660b004262348482d2c4523462361b0406020b02661b04061
b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a5158
2320b08d44235920b0ed51582320b04d44235920b09051582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b017
2370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b003
25456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d
2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20
b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb017
2344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb017
2344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb017
2344b0177ae41b21b0177ae45959182d2cb0022546608a46b040618c482d
2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a23
444565234520b00325606a20b009234223688a6a606120b01a8ab0005279
21b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a52
79b31940201945208a54582321b03f1b235961442d2cb110114323430b2d
2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb1
0e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c
0120b003252349b04060b0206320b000525823b002253823b00225653800
8a63381b212121212159012d2c4bb06451584569b00943608a103a1b2121
10592d2c01b005251023208af500b0016023edec2d2c01b005251023208a
f500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c00
3c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b00643
0b2d2c3eb02a2a2d2c352d2c76b802b023701020b802b04520b0005058b0
0161593a2f182d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb40001
00000015b00826b00826b00826b008260f10161345683ab001162d2cb400
0100000015b00826b00826b00826b008260f1016134568653ab001162d2c
4b53234b515a5820458a60441b2121592d2c4b545820458a60441b212159
2d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2c014b5323
4b515ab00225b00425b006254923451869525a58b00225b00225b0052546
2345696048592121212d2cb0134358031b02592d2cb0134358021b03592d
2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b01060482046b010604859
0a21211b2121592d2cb012435c580cb00425b00425060c6423646164b807
085158b00425b00425012046b8fff060482046b8fff06048590a21211b21
21592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b
1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54
b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46
2320468a608a61b8ff8062232010238ab9035803588a70456020b0005058
b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1
400188535a58b910000020885458b202010243604259b12401885158b920
000040885458b2020202436042b12401885458b2022002436042004b014b
5258b2020802436042591bb940000080885458b202040243604259b94000
008063b80100885458b202080243604259b94000010063b80200885458b2
02100243604259b94000020063b80400885458b202400243604259595959
592d2cb0024354584b53234b515a58381b2121591b21212121592d000000
0001000000050ccd571894305f0f3cf50819080000000000a2e31dc20000
0000c5b1f690fb74fd8c1000080e00000009000100010000000000010000
0721fe4500571000fb74fadf100000010000000000000000000000000000
0d530639011c00000000020000000200000002aa00e40344008504000025
0400006c06aa00480639004b0171005102aa005402aa002e040000910483
00250200006e02aa005302000091023900030400004a040000f00400002c
040000530400002004000062040000580400004c0400007c040000510239
00b00239008e048300250483002504830025038d005c075e006105c70010
055600220556004a05c7002304e3002a0473002105c7004805c7002302aa
0033031d002a05c7002204e30029071d002205c7ffe505c7004804730022
05c70048055600230473008004e3003e05c7000b05c70012078d001b05c7
000f05c7001304e3001a02aa00a80239000302aa004b03c100250400ffef
02aa0076038d00490400fffb038d004604000044038d004c02aa004f0400
003d0400000d0239003c0239ff63040000110239003d063900110400000c
040000450400fff90400004402aa000d031d006402390014040000020400
001105c7000d0400001b0400000c038d002903d7011b019a00a103d700b1
0454001405c7001005c7000e0556004a04e3002a05c7ffe505c7004805c7
000b038d0049038d0049038d0049038d0049038d0049038d0049038d0046
038d004c038d004c038d004c038d004c0239003c0239003c0239000d0239
00020400000c040000450400004504000045040000450400004504000002
0400000204000002040000020400006503330062040000810400003d0400
009c02cd007003a0fff204000023061400450614004507d7001e02aa00ec
02aa003904640019071dffe805c7004905b4003504640008046400180464
001804000002049c008603f4004005b4002b0696002e0464003e02310000
0235fffa027b001d062500470556004904000027038d005902aa00e40483
002404640053040000020464001e04e5001a0400004004000040080000e6
05c7000e05c7000e05c70048071d004b05c700430400ffee0800ffed038d
0043038d004302aa00b902aa00c10464001703f4002f0400000c05c70013
0156feab0400ffe902aa007702aa007304730019047300170400008b0200
009102aa00c1038d00430800004105c7000e04e3002a05c7001004e3002a
04e3002a02aa003302aa003202aa003202aa003205c7004805c7004805c7
004805c7000b05c7000b05c7000b0239003c02aa003c02aa001602aa0017
02aa003702aa00e902aa009602aa00bb02aa004e02aa001d02aa003c04e3
00160239001e0473007e031d006404e3001a038d0029019a00a105c70023
0400004405c700130400000c047300240400fff904830025048300a50266
0088026600140266002c06000086060000860600002a0400002105c70048
0400003d02aa003304730080031d00640556004a038d00460556004a038d
0046040000260400ffef02aa00ec05c70010038d004905c70010038d0049
05c70023052c004405c7002304e3002a038d004c04e3002a038d004c04e3
00290239003d04e300290340003c04e3002902c0003d05c7ffe50400000c
05c7ffe50400000c05c70048040000450556002302aa000d0556002302aa
000d04730080031d006404e3003e0239001404e3003e036b001305c7000b
0400000205c7000b0400000204e3001a038d002904e3001a038d002904a0
002505c7004c05d900470431005703c50046035c0047045000460337000c
049e00450400ffef049500e40285000207c0002c0800004f040000990800
004f040000990800004f040000980400009807d5016a05c700c004830026
04cd00990483002604d5022204d5010505abffe905ab027e05ab027e05ab
ffe905ab027e05abffe905ab027e05abffe905abffe905abffe905abffe9
05abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905ab
ffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e
05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d5
00920800000007eb013007eb012007eb013007eb012004d500b204d50080
04d5002a082b0198086b01b807550010060000f40600006f0440003a0540
003704c0003f04150040040000250600005505ab002f046b003b04d50003
01c00089035500a206ab003403d5006404d5009202d6008302d6008304d5
00b202d6007005c70010038d00490556004a038d00460556004a038d0046
04e3002a038d004c04e3002a038d004c04e3002a038d004c05c700480400
003d05c700480400003d05c700480400003d05c700230400000d05c70023
0400000d02aa00160239ffde02aa00170239ffdf02aa00330239fffe02aa
00330239003c031d002a0239ff6305c70022040000110400001104e30029
0239003d05c7ffe50400000c059d002603f5000c05c700480400004505c7
0048040000450556002302aa000d04730080031d006404e3003b02390010
05c7000b0400000205c7000b0400000205c7000b0400000205c7000b0400
0002078d001b05c7000d05c700130400000c0239001605c7000f038d0049
071dffe80556004905c7004904000027023900b2078d001b05c7000d078d
001b05c7000d078d001b05c7000d05c700130400000c02aa00b802aaffdb
0400003d04cd005a060000860600002a060000310600002502aa00c302aa
00bb02aa00ec02aaffea05c70010058dff5c0677ff5c034aff5c05c7ffb6
0687ff5c05f2ffb30227ffb105c70010055600220525003204e3002a04e3
001a05c7002302aa003305c7002205cd001c071d002205c7ffe50525004f
05c7004805c700250473002204a8002004e3003e05c7001305c7000f05e7
001805f2003c02aa003205c7001304310057035c0047042f000b02270025
03f6fffa0412006e0389000003500046042f000b03d50051022700250408
001503e10019044a0074039effd3039100460400004503fe0059032b0046
03f6fffa038d00180502001c0544004b0227000003f6fffa0400004503f6
fffa0544004b04e3002a0604003704a000250548004b0473008002aa0033
02aa0032031d002a06fa000d06fa002705ee00360556002505aa001a05c7
002505c70010049800240556002204a000250575001a04e3002a072b0012
0402002b05c7002505c7002505560025056d0012071d002205c7002305c7
004805c70025047300220556004a04e3003e05aa001a0652004c05c7000f
05c700250533fffa081200390812003905a6003606fa0025049800240548
003a083900260556ffee038d00490412004e03c700300348001f0412001a
038d004c05870017032900180448002e0448002e03e3002e03fe000c0510
002e0448002e040000450448002e0400fff9038d0046037f000c0400000c
052f00570400001b0448002e0406001e0629002e0629002e0423000c0560
002d03a6002e036f001b05fa002d03aeffff038d004c03dd00110348001f
036f0046031d00640239003c023900020239ff6305d1000c05c9002d0400
000d03e3002e0400000c0448002e039a002502cf001f0800004107a20010
040a000d000001010000001c0000003200000012000001020000008f0000
008f0000008f00000090000001020000001c000001020000012102d90056
0000008f025400e0000002af0000ff6b023900b003da005f03a4003302af
0021035a004303c5004e023b0043024a004e03d0005803ce004302220043
039e0043037600330374000f040f006403e2004e023200430270002103cd
005f03a2004303a200430386005803dc004303ae003d03ca006903c00043
04e200430400002104750043045d00430444004301ac006b02f9006b0636
0096023bff9d039e0043039e00430374ff5b0374ff5b03a2003304e20043
04e2004304e2004304e2004303da005f03da005f03da005f03a4003302af
0021035a004303c5004e023b00430279000c03ce004302220043039e0043
037600330374000f03e2004e0270002103cd005f03a200430386005803ae
003d03ca006903c0004304e2004304000021023b004303a4003303760033
038600580404000f0000ffdc0000ff250000ffdc0000fe51028d00ab028d
00a002da0043034d007901a8ffba00000046000000460000004600000046
000000480000004600000046000000460435017c0435012e043500b70435
00810435012c043500be043500af043500810435009a043500db04350085
028d00c1043500b3060001000600010002420036060001000435009e0435
0098043500cb060001000600010006000100060001000600010000000046
060001000600010006000100060001000600010006000100060001000600
0100051bffba06000100060001000600010005b5003a05b5003a01f4ffba
01f4ffba060001000600010006000100060001000481003604350036043d
ffba043dffba03e9004a03e9004a067f0014077600140327ffba041effba
067f0014077600140327ffba041effba051b003204b500240300fff70600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000000
003000000046000000460000004000000046060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0400001b0800000006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
028d007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a8
005601d60010037500320375003201a8002d01d60013051b003204b50024
01f4ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4
ffba024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9
004a0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba
04a7ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a
00360435ffba0327ffba064f0027064f00270224ffba021affba04a70046
04a700460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d
0047040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba
043500450435004501f4ffba01f4ffba024200360300fff7039affba0327
ffba0375003203750032051b003204b50024051b003204b5002401f4ffba
01f4ffba045a004004ce0040045a002604ce0030045a005304ce0041045a
005304ce0041060001000600010000000046000000460600010006000100
060001000000004600000046060001000600010000000048000000460600
010006000100060001000000004600000046000000460000004600000040
000000300600010000000046000000460600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000600010006000100060001000600010006000100028d00ca028d00c7
028d00c60600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000100ffba0800ffba1000ffba05c70048043b0045
0635000b045600020000fdcc0000fc140000fd130000fe420000fce00000
fdd40000fe620000fe2b0000fdb70000fc980000fd880000fc080000fcfe
0000feff0000ff030000fe9e041a00a206000088060000140000fe700000
fdd40000fdf60000fd770000fe620000fdbb0000fbd80000fbd80000fb74
0000fcfe0000fc8c0000fc460000fd270000fcb40000fca80000fcae0000
fc440000fe140000fe700000fd910000fc710000fdc30000fe470000fe62
0000fcc30000fde10000fd870000fd4b0000fd970000fd4b0000fc8a0000
fc620000fc090000fbd70239003c05c70010038d004905c70010038d0049
05c70010038d004905c70010038d004905c70010038d004905c70010038d
004905c70010038d004905c70010038d004905c70010038d004905c70010
038d004905c70010038d004905c70010038d004904e3002a038d004c04e3
002a038d004c04e3002a038d004c04e3002a038d004c04e3002a038d004c
04e3002a038d004c04e3002a038d004c04e3002a038d004c02aa00330239
003c02aa00330239003c05c700480400004505c700480400004505c70048
0400004505c700480400004505c700480400004505c700480400004505c7
00480400004505c70048043b004505c70048043b004505c70048043b0045
05c70048043b004505c70048043b004505c7000b0400000205c7000b0400
00020635000b045600020635000b045600020635000b045600020635000b
045600020635000b0456000205c700130400000c05c700130400000c05c7
00130400000c05c70010038d004902aa00330239000605c7004804000045
05c7000b0400000205c7000b0400000205c7000b0400000205c7000b0400
000205c7000b040000020000ff090000ff090000ff090000ff0904a00023
0348001f072b0012058700170556002503e3002e0556002503e3002e05c7
00230448002e05c700130400000205c700130400000205c7000f0400001b
0533fffa0406001e053300250400000d05c7002b038d004c05c700480400
004505b5003a01f4ffba0224ffba021affba04a7004601f4009e01f40010
01f4001b01f4001001f4006b01f4fff90227ffce0000000f01a8fff502aa
00a402aa00a40000000e01a80056000000560000ffcf01a8000f01d6ffbf
01a8fff501d6ffcd01a8001d01d6fff501a8009301d60013037500320375
00320375003203750032051b003204b5002405b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba02b3003202b3003202b3005f02b3
005f02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f
02b3005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5
ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba
045a002a039a00360435ffba0327ffba064f0027064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba064f0027064f
00270224ffba021affba04a7004604a7004604a7004604a70046093e0032
093e00320740ffba0740ffba067f0014077600140327ffba041effba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
04cf002d04cf002d0327ffba0327ffba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d
004701a8ffba01a8ffba043500450435004501f4ffba01f4ffba04350045
043500450435004504350045043500450435004501f4ffba01f4ffba0435
0045043500450481003604350036043dffba043dffba024200360300fff7
031a001a031a001a031a001a037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
03750032037500320375003203750032051bffba04b5ffba051b003204b5
002401f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba
01f4ffba051b003204b50024067f0045067f0045067f0045067f004501a8
00280000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e
08fc003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000
ff9f018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff58
0000ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5
ffba06c5ffba045a002a039a00360435ffba0327ffba034d007902b40023
0242003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4
006d067f001407760014022200430000fee702bc000004440043045afff5
04cefff5045a005304ce0041045a005304ce0041045a005304ce0041045a
005304ce0041045a005304ce0041045a005304ce004104350071043500ad
045a000f04ce000f0400fffb061400000498002404000096049800240400
00000556004a0556004a038d004605c70023068500000498004404000044
03c5004604e3002f040200550473ff6d05c7004805c700120629000d0207
fffe02aa002305c70022040000110239002d03e100190688002305c7ff7a
0400000c05c700480766004a05880045053300000400fff9047300240473
006e031d004804a8002002c000040239001404e300000239001404e3003e
05f2003c05c7000b063f00440400000c04e3001a038d00290450002b0450
003f038d0046038d00500400002c0400002a038c0034036000140400fff9
019a00a1023f00a101fe000a02aa00e40aaa002309540023078d00440800
0029071c00290472003d08e4ffe50800ffe50639000c038d004c05c70010
038d00490000ff0905c70010038d0049071dffe80556004905c700480400
000005c700480400003d05c700220400001105c700480400004505c70048
040000450450002b038d00210239ff630aaa002309540023078d004405c7
00480400003d07990023047b002205c7ffe50400000c05c70010038d0049
05c70010038d004904e3002a038d004c04e3002a038d004c02aaffd30239
ffa102aa00330239fffe05c700480400004505c700480400004505560023
02aa000d0556002302aa000d05c7000b0400000205c7000b040000020473
0080031d006404e3003e023900140481004b0329005405c700230400000d
0533002504d400480400004504e3001a038d002905c70010038d004904e3
002a038d004c05c70048040000450000feec05c700480400004505c70048
0400004505c700480400004505c700130400000c038d0004042f0044042f
fff704000096038d0043038d00460400004404000044038d003a0504004c
035c0047035c004004b40040038b004502aaff30040000440400004403a0
004504000011038d00000400000d0400001b0400001b0239002d02270025
02390036023900280239003d0239003d049f003d06390009063900090639
00110400ff300400000c03fa000c04000045050a00450544004b046d0045
02aafff302aafff302aafff302aa000c02aa000d02aa001702aafff303e7
003603e70036031d006402aaff3002aaff30037dff9402aaffe302390014
02390014040000020464006603c200020400001105c7000d0400000c03f1
0004038d002903f70029038d0021038d003c038d005d038d0046038d005d
038d004605c7004803c70030038b004503a000450448002e0239ff7f0400
fff40370003604000044038d005d038d0046066b004406c2004406d30044
0485001403ae001405310014064d004f0487003d047a003d041d001403d9
003c0292001e02920026013effd201bd001e01bd000501bd00050259001e
036d00040260000401c0008902ec008902aa00b902aa00c102aa00b802aa
00f702aa00f701fc001e01fc001e04830027048300250483005304830053
02aa012102aa00ec02aa007602aa012102aa001d02aa007602aa00ec0239
00b6023900b602aa00f702aa00f702aa00a602aa00a602aa00a602aa001d
02aaffef030e002d025800040154001e01b3001e0250000401fc001e0310
00960310009603100096031000960310009602aa006202aa006202aa003c
02aa0017038d004304570096045700960457009604570096045700430457
0043045700430457004304570043031000430457002f0457002f0457002f
0457002f0457002f0310002f045700250457002504570025045700250457
00250310002f0457001a0457001a0457001a0457001a0457001a0310001a
045700420457004204570042045700420457004203100042045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457002f0457002f0457002f0457002f0457002f0310002f0457
002f0457002f0457002f0457002f0457002f0310002f0457002604570026
045700260457002604570026031000260457004204570042045700420457
004204570042031000420457009604570096045700960457009604570042
045700420457004204570042045700420310004204570026045700260457
002604570026045700260310002604570023045700230457002304570023
04570023031000230457002f0457002f0457002f0457002f0457002f0310
002f0457004b0457004b0457004b0457004b0457004b0310004b04570096
045700960457009604570096045700420457004204570042045700420457
0042031000420457001a0457001a0457001a0457001a0457001a0310001a
0457002404570024045700240457002404570024031000240457002f0457
002f0457002f0457002f0457002f0310002f0457004e0457004e0457004e
0457004e0457004e0310004e045700960457009604570096045700960000
fee60000febf0000fdee0000fee00000ff940000fee60000ff440000fee3
0000fee50000ffce0000ff660000fee30000fee00000fee00000ff880000
ff880000ff88000000000000ff5b0000ff5d0000ff440000ff5f0000fe87
0000ffec0000ffa40000ff510000ff510000ff510000fec10000fe8a0000
00000000fee60000ff440000ff860000ff650000ff580000ffce0000fe87
0000febb0000fee50000fee60000fee00000fee00000fec10000febf0000
fdee0000fec10000fec10000febf0000fdee0000fe160000feb50000ffa4
0000fe870000ff440000feba0000ff230000ff9a0000fdee0000feb70000
00000000fec20000ff880000fe980000ff820000fe870000fde40000ff66
0000ff440000fec20000fec20000fec20000ff030000ff520000fd1f0000
ffb70000ffcb0000ff530000ff070000ff150000ff770000fef90000fecf
0000ff190000fede0000fed40000fe2a0000ff350000ff5b0000fed90000
fedc02aa00ec02aa007602aa00da0412005103f6000005c70013071f0000
05c700130436004505440000047b000a05c70048040000450556006e035c
001d0473002103930017049b0014039c001405da000a046e000006a00023
0639001104ed0046042b0045054a001e038d001d04560046045600460540
004504a60014059800480412004e03cd001e03160014047b000a0412004e
038d00460239ff6305c70048033d0046033d002804e3002a05c70025038d
004c0448002e0961004805110023055e00140458001e07be0027056b002d
05c7000004b800000843002306ac002d072b00120587001709ab0023077b
002d040200090329000005e700120502001c05c70048040000450682003a
04b600390682003a04b6003908c30048070a0045061a002a0487004509b4
0048065600460000fe3709610048051100230556004a038d004602ac001e
0000fea60000febc0000ff860000ff860000fc2b0000fc4c05c700250448
002e0498002403c3002e047300220400fff9050d0025041f001f0402002b
032900180556002503e3001f064900360496000c06ce002304fc002e0842
00250650002e0556004b038d00460556004a038d004604e3003e037f000c
0660003604d3000c0533fffa0406001e0707000a045f000a0707000a045f
000a02aa0033072b00120587001705560025041f002e056d001203fe000c
05c700230448002e05c700230448002e0533fffa0406001e071d00220510
002e044800dc05c70010038d004905c70010038d0049071dffe805560049
04e3002a038d004c05c7002b038d004c072b0012058700170402002b0329
00180402002b038d002105c700250448002e05c700250448002e05c70048
0400004505c70048040000450548003b036f001b05aa001a0400000c05aa
001a0400000c05aa001a0400000c0533fffa0406001e06fa00250560002d
0498004404000044066e0044062a0044066b006605a5005404970066039f
0054074100120604000c07990023064d002e05c7004803a000450591003e
04d0000c0000ff430000fec90000ff770000ffb00000ff470000ff560000
ff740000fed70000feac000000000000ff520000ff56000000000000feac
0000fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000
ff7f0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae
0000ff8c000001020000ff090000ff090000fee20000fee20000ff8f0000
ff210000ff0905c70010038d0049055600220400fffb055600220400fffb
055600220400fffb0556004a038d004605c700230400004405c700230400
004405c700230400004405c700230400004405c700230400004404e3002a
038d004c04e3002a038d004c04e3002a038d004c04e3002a038d004c04e3
002a038d004c0473002102aa004f05c700480400003d05c700230400000d
05c700230400000d05c700230400000d05c700230400000d05c700230400
000d02aa001b0239ffea02aa00330239000205c700220400001105c70022
0400001105c700220400001104e300290239003d04e300290239ffe904e3
00290239ffe704e300290239000f071d002206390011071d002206390011
071d00220639001105c7ffe50400000c05c7ffe50400000c05c7ffe50400
000c05c7ffe50400000c05c700480400004505c700480400004505c70048
0400004505c7004804000045047300220400fff9047300220400fff90556
002302aa000d0556002302aa000d0556002302aa000d0556002302aa000d
04730080031d006404730080031d006404730080031d006404730080031d
006004730080031d006404e3003e0239001404e3003e0239001404e3003e
0239fff504e3003e0239001405c7000b0400000205c7000b0400000205c7
000b0400000205c7000b0400000205c7000b0400000205c7001204000011
05c7001204000011078d001b05c7000d078d001b05c7000d05c7000f0400
001b05c7000f0400001b05c700130400000c04e3001a038d002904e3001a
038d002904e3001a038d00290400000d0239ffff05c7000d0400000c038d
004902390016043100570431005704310057043100570431005704310057
043100570431005705c7001005c700100654000006540000065400000654
00000654000006540000035c0047035c0047035c0047035c0047035c0047
035c004705fc000005fc0000073c0000073c0000073c0000073c0000042f
000b042f000b042f000b042f000b042f000b042f000b042f000b042f000b
06e0000006e0000008200000082000000820000008200000082000000820
000002270025022700250227ffaf0227ffaf0227ffff0227ffff0227ffd3
0227ffd303c3000003c30000050300000503000005030000050300000503
000005030000040000450400004504000045040000450400004504000045
065400000654000007f8000007f80000073000000730000003f6fffa03f6
fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa06e00000
082a0000082a0000082a00000544004b0544004b0544004b0544004b0544
004b0544004b0544004b0544004b067f0000067f000007fb000007fb0000
076f0000076f0000076f0000076f00000431005704310057035c0047035c
0047042f000b042f000b0227002502270025040000450400004503f6fffa
03f6fffa0544004b0544004b043100570431005704310057043100570431
005704310057043100570431005705c7001005c700100654000006540000
06540000065400000654000006540000042f000b042f000b042f000b042f
000b042f000b042f000b042f000b042f000b06e0000006e0000008200000
08200000082000000820000008200000082000000544004b0544004b0544
004b0544004b0544004b0544004b0544004b0544004b067f0000067f0000
07fb000007fb0000076f0000076f0000076f0000076f0000043100570431
0057043100570431005704310057043100570431005705c7001005c70010
05c7001005c7001005c7001002aa00db02aa00d802aa00db02aa001602aa
0016042f000b042f000b042f000b042f000b042f000b05fc000006130000
06e1000006f7000005c7002302aa002702aa002702aa00160227fff10227
ffd10227fff30227fff30227ffd00227ffd002aa003302aa001603c40000
03da000002aa002702aa002702aa001603f6fffa03f6fffa03f6fffa03f6
fffa03fe005903fe005903f6fffa03f6fffa05c7001305c7001307090000
07330000058c000002aaffea02aaffea02aa00760544004b0544004b0544
004b0544004b0544004b06cd0000062f000006e400000632000005f2003c
02aa00ec02aa00db04ef00460556004a0556004a0639001105c7ffe508d0
0023078d001b05c7002204e3003e080000290400003004c100660000ffcb
0000ffcb0000ffb70000ffb70239002d0239ff630400000f047300220400
00440239003d0400000c0289001404ff001e04ed001e02aa009202aa0092
02aa00d102aa00d102aa009702aa007602aa004e02aa004e02aa00150239
00b002aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a
0000ff7b0000ffa00000fee00000ff230000ff7b0000ff7b0000feb20000
ffa00000ffcb0000ffcb0000ffcb047300240400fff90405000505290005
0556004903b8002d03d300450432002d0432002d038e002d032900180239
003c025f00190451002d038f00230510002e0448002e0400004503d3002d
04550045044d00450455002105c7003e037e0045040000450400004503a6
002e03aeffff03aeffff037f000c044c002d040a002d053d002d0409002d
0400001105c7000d038d002903290018032e0045044f000f0348001f0400
00110448002e03a6002e043a000f03fe000c03600000044e00000318001e
0318001e0370001e02f6001e02f6001e0376001e0386001e0199001e01f9
001e03aa001e02f8001e0452001e03b3001e0387001e0358001e02b0001e
02a7001e0347001e02e6001e03a0001e046e00000230001e0230001e0283
001e031f001e027a001e027d001e020d001e020d001e01ef001e01ef001e
0268001e014f001e0286001e03e9001e0241001e024e001e020c001e024e
001e024e001e027d001e0188001e029f001e0272001e03e9001e025a0005
028d00050242001e021f0005022b001e02ad001e02420005014f001e01d6
001e029f001e025a00050242001e021f0005025e001e02ad001e02420005
05ed00460a66004606130046075b00460541ffba01e9003c045a00110000
ff0d0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e
0000feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039a
ffba0327ffba0506005f0486004304f1004e04a2003304a0000f053b0064
04ec0043052c0021048300250000fe4b0000fe4c0000fe4c0400ffee038d
00430355000701a8ffba01a8ffba01a8ffba01a8ffba0658001509c50047
0400000008000000040000000800000002ab000002000000015500000400
000002000000019a000000ab0000000000000556004a071d00220510002e
0616000206310044062e004405c700100556004a0400008104e3002904e3
003e031d0064038d00290445005d000001020000ff420000fea40000ff3a
0000ffcb03fe000a055600470556004a0556004704a000250348001f0000
ff430000ff6b0000ffae027000580000ff39021affba0250001e0000ff3a
0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a05b5
003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba02b3003202b3003202b3005f
02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba045a
002a039a00360435ffba0327ffba045a002a039a00360435ffba0327ffba
045a002a039a00360435ffba0327ffba064f0027064f00270224ffba021a
ffba064f0027064f00270224ffba021affba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba02b4002302b400230327ffba0327ffba02b4002302b40023
0327ffba0327ffba043500450435004501f4ffba01f4ffba043500450435
004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d0047
040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a0692
003e0692003e043fffba043fffba0400ffa80400004402aa001406390011
0400000c0400ffae02aaffbc02aaffbc031d001e0239ffbd038d00290400
003d0296001e03c50041062100140239002c022700250400fff9044c002d
046400190400fffb0400004402aa004f04c6003d040000110239003d0639
00110400000c0400fff902aa000d031d00640365ff30040000110400001b
038d0029038d0049042f004404000044038d004c035c0047035c0040038d
004c0239003c038d00430384000a04000002038d002102830005020c001e
020c001e024d001e01ef001e01ab001e01abffa60221001e0292001e014f
00150175001e0151001e0151001a018b0000014f001e014f001e022a001e
0395001e03e9001e029fffa4029f001e0293001e024e001e0291001e01b3
001e01b9ff920188001e029f001f0289001e029a001e0253001e025a0005
0231001e0231001e026e001e0220001e0228001e0000fe930000fe930000
ff730000febc023900b00230001e020d001e024e001e02520005020d001e
05c7004805c700100473003c0556004a02aa005304310057043100570431
005704310057043100570431005704310057043100570227ffcd0227ffd1
0227ffd10227ffd10227ffcd0227fff10227ffcd0227fff103f6fffa03f6
fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa0227ffd1
0227ffd10227fff10227fff103f6fffa03f6fffa03f6fffa03f6fffa045a
005304ce004a032e00130556002205c7000b05cd001c04e3002a038d004c
031d002a0239ff63059e004a040000440556002302aa000d05c700130400
000c038d0043038d0046038d00430239003d04a000230348001f05c7000f
0400001b05c7000f0400001b0402005503290042056d001203fe000c0000
fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff350000ff7b
0000feb2070e000503550045038d004304e300290239002d04e3000a0473
002205560023038d00490239000e05c700230400000d05c7002204000011
04e3001a038d002903c60041054600230409002e049e00450000ff3b0000
ff510000ff080000fef90000fea40000fea40239003c059d002605c7ffe5
059d00260000fee00000ff590000feeb0000ff0f0000fee60000ff090000
feed0000fef50000ff0e0000feed0000fdcc05c7004804000044078d001b
05c7000d05b500230000fe9205c9004804c6001107fc001b0697000d0239
00b002f300260171005101710051040000990400009902aa00e400e400e4
003c00000000000000000076000000760000007600000076000001300000
0228000003f60000062e0000083a00000a6e00000af200000b7600000bf8
00000dd000000ea000000f3e00000f9800000ff000001062000011940000
1278000014480000162600001738000018c400001a3e00001b3400001d48
00001ece00001f5e0000202c0000214a000021ec0000231c0000248c0000
276e000029f600002d1a00002e9400003006000031d80000338800003582
000037bc000038de00003a3200003da800003ebe0000411a000043540000
44700000466a000047f200004a9200004d8c00004ee2000050ea0000536c
0000574200005b3a00005da000005eea00005f9200006014000060be0000
61a6000061e200006238000066320000687600006ad400006da600007186
0000740a000078a200007bd200007e88000080ca00008534000087100000
8bda00008f42000091ae0000947a000096d40000990400009dc80000a01e
0000a2c20000a5f00000aa520000aeec0000b1aa0000b3a60000b49a0000
b5080000b5fa0000b6b80000b7080000b73a0000b7860000b7bc0000b7f8
0000b82e0000b8780000b8ae0000b8ee0000b9360000b9760000b9a40000
b9da0000ba060000ba3a0000ba760000bab80000baee0000bb280000bb58
0000bb900000bbc80000bc040000bc3c0000bc6e0000bcac0000bce80000
bd260000bd600000bd960000bddc0000be200000bf7c0000c0540000c24a
0000c4b40000c71c0000c7780000c8140000c9b00000ccc80000ceca0000
d1360000d18e0000d2240000d3880000d5a40000d7480000d89c0000d99e
0000dada0000dc360000de6c0000dfee0000e1160000e1f00000e2da0000
e4040000e4ea0000e6800000e76e0000e9020000ec6c0000ee8e0000efea
0000f0920000f0ea0000f1b00000f3320000f49a0000f5480000f5e00000
f67c0000f77e0000f7ba0000f7f80000f82e0000fa6e0000fe020000fe3a
0000fe720000ff780000ff9e0001004a000100ec000101d0000102e20001
032c0001035e000103ba0001052000010584000105e40001084800010a70
00010d0a00010d5a00010d7c00010e9000011168000111b0000112040001
124200011282000112b2000112e60001133a00011380000113b2000113e6
0001141e0001145000011480000114c6000114f600011664000116e00001
17a2000117de0001185a000118b4000119ce00011aa400011b4200011bc0
00011c2a00011da200011fa800011fe6000120240001205c000120a60001
212a00012270000124b4000124e400012526000126a200012896000128dc
000129fe00012ab600012bd400012cfa00012ef800013088000132760001
343a00013474000134b0000134e0000135260001357a000135b6000135f6
00013632000136660001390a000139480001398c000139ca00013a0c0001
3a3200013a5800013a9000013d3e00013e6800013e9000013eb600013eee
00013f2c00013f5c00013f90000140be0001426200014296000142cc0001
43020001434000014382000143be000143f0000144360001446c000144a2
000144e0000145140001455800014594000145ba000145de000146220001
486e000148b0000148e20001491a0001494c0001497c000149b2000149f2
00014a3200014ad400014c9c00014e2400014f34000150d60001523a0001
53240001543000015596000156080001563c0001578800015aaa00015b56
00015c1a00015cc800015d8600015ea200015fba00016116000161720001
62ae0001639400016472000164d000016554000165da0001661c00016658
000166a8000166f8000167480001679a000167fa0001685a000168bc0001
6922000169ac00016a1400016a7a00016af000016b6600016bf400016c6a
00016cde00016d6a00016de000016e5a00016ee800016f6000016fd60001
7064000170e80001716c0001722a000172b200017342000173fc0001748a
00017514000175d200017662000176ee000177ac00017886000179660001
7a8800017acc00017b0800017b4600017b8a00017bce00017ff60001878a
00018eb800018ef400018f3200018f7800018fc0000190060001904c0001
9134000191bc0001928a0001943600019598000197d0000198be000199e8
00019ae200019bfa00019c9800019d1c00019dca00019e9800019ef20001
9fa00001a0220001a08e0001a0c20001a24c0001a3a60001a41e0001a46c
0001a4ec0001a5500001a5d60001a6120001a6440001a67a0001a6b80001
a6fa0001a7280001a76c0001a79a0001a7d40001a8020001a83a0001a868
0001a8b40001a8fc0001a93c0001a96c0001a9920001a9c80001a9f80001
aa2e0001ac1c0001aed00001af000001af4a0001af7c0001afc20001aff2
0001b02c0001b0520001b0760001b0b40001b2560001b28c0001b2bc0001
b4de0001b5040001b5540001b57e0001b5ae0001b6f80001b89c0001b8d2
0001b9080001b93c0001b9800001b9a60001b9d60001ba060001ba380001
bb900001bd7c0001bdac0001bde00001be120001be460001be760001bea6
0001becc0001bef20001bf220001bf560001bf860001bfb60001c0a40001
c0e40001c1240001c1540001c1840001c1b40001c1e40001c22e0001c25e
0001c28e0001c2be0001c2ee0001c3220001c3560001c38c0001c3c60001
c43c0001c4760001c64e0001c71c0001c9260001cba60001cdf40001cffa
0001d0740001d10e0001d11e0001d2320001d25e0001d3e00001d5460001
d6080001d6420001d7b60001d7f00001d82c0001d83c0001d84c0001d964
0001d9740001d9840001d9940001d9a40001d9b40001db1e0001db2e0001
db3e0001dcc20001dcd20001ddd80001dde80001def00001df000001df10
0001df200001e08e0001e2480001e27c0001e2ae0001e2de0001e30e0001
e33e0001e36c0001e3a20001e53e0001e6340001e7d40001e8fa0001ea2c
0001eb2a0001ecd80001ee1a0001ef800001f0860001f2800001f2900001
f3ea0001f5380001f6580001f7dc0001f9680001fafa0001fb320001fb68
0001fba00001fbd00001fc000001fc340001fda60001fdd60001fefc0001
ff0c0001ff1c0001ff500001ff60000200c6000202a20002043000020460
000206400002079e000207ae000208d0000208e00002098200020ab00002
0ac000020d6800020f040002107c0002125c000213d6000214c8000214d8
000214e8000214f800021508000215180002152800021538000216a20002
1850000218600002199400021ae400021ccc00021ed8000220140002218c
00022284000222be000224200002245000022460000225cc000227680002
284e000229c4000229d400022c9c00022dfc00022fdc0002323200023444
000235a8000237f00002399c000239ac00023b0e00023b1e00023b2e0002
3c3800023c4800023e6000023e7000023ffc00024174000243560002456e
000246f0000248e800024a2a00024a6400024c1e00024dcc00024e120002
50220002505000025192000251a2000251b2000251ee000251fe000253dc
000255f20002583a0002586a00025ad600025c7600025d1400025df20002
5e3800025ff6000261800002621e00026380000264480002656c000265c2
0002665c000267480002677c000268220002687800026970000269c60002
6a0600026a4800026a8400026ab600026b0000026b4800026bd000026dc0
00026e9600026fa40002707a000271a00002723400027302000274240002
75b00002764a00027704000277b8000278ea000279ce00027b1c00027bca
00027ca400027d9400027f4c0002806200028188000283400002850a0002
864a000286f40002891200028a3400028b5000028c7600028d9c00028df6
00028ea600028fde0002901000029056000290a4000290e8000291580002
92d60002930400029332000293600002938e000293bc000293ea00029692
000296ca0002971800029756000297a2000298020002990c000299400002
9a4200029a7a00029ab400029afa00029b3e00029b8200029bb000029d4a
00029ef200029f3800029f8e00029fc60002a24e0002a2820002a2b00002
a2de0002a30a0002a33c0002a5860002a5b00002a6cc0002a77e0002a82a
0002a8ac0002a9680002aa800002ab8e0002abc20002ac480002ada40002
ae260002ae700002af7a0002afc20002b0c60002b1420002b19a0002b21c
0002b3080002b41e0002b50c0002b5b60002b6b60002b7960002b8860002
b96e0002ba1e0002baa00002bcfe0002bd280002bd520002be0a0002be34
0002bf760002c07c0002c1660002c1900002c1ba0002c1e40002c20e0002
c2380002c3b80002c3e20002c40c0002c4360002c4600002c48a0002c4b4
0002c4de0002c5080002c53c0002c5660002c5900002c5ba0002c7340002
c7440002c85e0002c86e0002c8980002c8c20002c8ec0002c9160002cabe
0002ccce0002cdfc0002ce0c0002cf880002cf980002d0de0002d2aa0002
d3b00002d5300002d6d80002d9040002da660002dc500002dd940002dec2
0002dfb00002dfda0002e0040002e02e0002e0580002e0820002e0ac0002
e0d60002e1000002e12a0002e1540002e17e0002e1a80002e1d20002e1fc
0002e2260002e4620002e5de0002e7220002e90a0002ea520002ea7c0002
eaa60002ead00002eafa0002eb240002eb4e0002eb780002eba20002ebcc
0002ebf60002ec200002ec4a0002ec740002ec9e0002ecc80002ecf20002
ed1c0002ed460002ef820002f2c80002f2f20002f31c0002f3460002f370
0002f39a0002f3c40002f3ee0002f4180002f4420002f46c0002f4960002
f4c00002f4ea0002f5140002f53e0002f5680002f5920002f5bc0002f5e6
0002f6100002f63a0002f6640002f68e0002f6b80002f6e20002f70c0002
f7360002f7600002f7fa0002f8100002f83a0002fb1a0002fb2a0002fc44
0002fd660002fea40002ffe60003018c0003019c000302de0003042e0003
061e000307f20003090a0003091a0003099c00030a2a00030b2a00030b3a
00030bda00030bea00030d0000030e5400030f8400030f94000310620003
1072000311e8000311f80003130c0003131c00031450000315e6000316a2
000316b2000317b00003190a00031996000319a600031ad000031c5c0003
1d1800031d2800031dc000031dd000031e9c00031eac00031f8400031f94
0003209c000320ac0003227200032282000323da000323ea000326540003
26640003285e0003286e000329d8000329e800032ad800032ae800032c80
00032c9000032dae00032dbe00032efe00032f0e00032f1e00032f2e0003
30a6000330b6000330c6000330d60003322800033378000334460003352a
000336aa0003382e0003392e00033a4200033b8600033b9600033c840003
3d5e00033efa00033f0a000340280003412e000343260003433600034346
00034356000344a0000344b0000345680003457800034686000346960003
478200034792000348b0000348c00003495e0003496e0003497e00034a6c
00034be000034d0c00034e0600034e1600034e2600034e3600034fd40003
518e0003525c0003526c000354cc000357160003599c00035c0400035e8a
00036100000362d00003648a000364b4000364de000364ee000364fe0003
6528000365520003657c0003658c0003659c000365c6000365f000036600
000366100003663a000366640003668e0003669e000366ae000366be0003
66ce000366de000366ee000367180003672800036738000367620003678c
000367b6000367e00003680a000368340003685e00036888000368b20003
68dc00036906000369300003695a00036984000369ae000369d800036a02
00036a2c00036a5600036a8000036aaa00036ad400036afe00036b280003
6b5200036b7c00036ba600036bd000036bfa00036c2400036c4e00036c78
00036ca200036ccc00036cf600036d2000036d4a00036d7400036d9e0003
6dc800036df200036e1c00036e4600036e7000036e9a00036ec400036eee
00036f1800036f4200036f6c00036f9600036fc000036fea000370140003
70b4000370f80003716e00037198000371c2000371ec0003721600037240
0003726a00037294000372be000372e8000373120003733c000373660003
7390000373ba000373e40003740e00037438000374620003748c000374b6
000374e00003750a000375340003755e00037592000375c6000375fa0003
77a8000379b800037ba800037db600037e4800037ea200037f0c00037fa6
00038036000380a60003817a000382680003833c0003842c000384c60003
859a00038634000386e200038788000387da0003893800038986000389d4
00038a2c00038a8400038ad600038b2800038be400038ca000038d360003
8dcc00038e6200038efe00038f9a00039036000390480003905a0003906c
0003907e00039090000390ea0003914a000391e6000391f80003920a0003
921a0003922a0003923c0003924e00039260000392720003928400039296
00039332000393c800039464000394fa000396160003963c000396620003
9688000396b2000396ee0003975c000397a40003981a0003985a000398c6
00039902000399660003999e00039a0200039a4200039a9800039ad80003
9b4400039b8e00039be600039c1e00039c7000039ca800039cfc00039d2a
00039d5000039d7a00039db400039de400039e1400039e6a00039ecc0003
9f3000039f980003a0000003a0600003a0b20003a10a0003a1640003a1bc
0003a1ec0003a22a0003a2500003a2840003a2ae0003a2d40003a2fa0003
a3200003a35c0003a3b40003a4100003a4720003a4c40003a5220003a55a
0003a5aa0003a5e60003a6360003a6660003a69e0003a6ce0003a7020003
a7280003a74e0003a77e0003a7ae0003a7d40003a7fa0003a8240003a850
0003a8760003a8b20003a8e20003a9120003a9420003a9720003a9980003
a9d40003aa040003aa440003aa6e0003aa9a0003aacc0003aaf60003ab22
0003ab500003ab860003abc40003ac0c0003ac4a0003ac7a0003acca0003
ad040003ad460003ad760003adcc0003adf60003aec20003aeec0003afac
0003afd60003b08c0003b0b60003b17a0003b26e0003b39c0003b5040003
b6340003b7100003b8340003baf00003bde40003bf940003c1c60003c3e8
0003c6d80003c8840003ca800003ca900003cbf40003ce620003cfe80003
d3dc0003d6f20003d8a00003da940003dbfc0003dc0c0003dd720003dee6
0003dff60003e1680003e2420003e2b80003e36e0003e4140003e5840003
e5bc0003e6360003e6f80003e7b20003e81a0003e9200003ea560003eb34
0003ec920003ed0c0003ed860003ee4e0003ef080003efbc0003f0180003
f0720003f0ba0003f12a0003f1a60003f1f00003f22a0003f2700003f2b4
0003f3060003f3580003f3da0003f45c0003f49e0003f4de0003f5140003
f54a0003f5780003f5a60003f5da0003f60e0003f6500003f6920003f6ce
0003f70a0003f7440003f77e0003f7b00003f7e20003f8140003f8460003
f8800003f8ba0003f8fc0003f93e0003f9800003f9c20003fa100003fa5e
0003faa00003fae20003fb220003fb620003fb9c0003fbd60003fc220003
fc6e0003fcac0003fcec0003fd320003fd780003fdb40003fe0a0003fe46
0003fe820003fec20003ff020003ff3e0003ff7a0003ffba0003fffa0004
003e00040082000400d600040164000401a6000401e800040250000402b8
000402ea0004031c000403540004038c00040422000404b8000405020004
054c00040588000405c40004061a00040670000406ba000407040004075c
000407b4000407f4000408340004086c000408a4000408ee000409380004
0976000409b4000409f600040a3800040a8c00040ae000040b2600040b6c
00040bb200040bf800040c4e00040ca400040cfa00040d5000040d9c0004
0de800040e3400040e8000040ef400040f6800040fdc000410500004108e
000410cc0004110a0004114800041186000411c4000412080004124c0004
1298000412e40004134400041390000413ce0004141c0004152c0004157c
000415cc000416040004163c00041692000416e80004175c000417c00004
1802000418440004189a000418e80004193400041980000419c000041a00
00041a4800041a9000041afc00041b5600041b8e00041bc600041c060004
1c4600041d1600041e1200041ed200041fc0000420160004206c000420be
0004211200042176000421da0004223000042286000422fc000423720004
23b4000423f6000424380004247a000424bc000424fe00042554000425aa
000425fc00042650000426d80004275a000427fa0004289c000428da0004
29180004295600042992000429d000042a0e00042a4c00042a8800042b6c
00042c5800042d6e00042e8a00042f540004301e00043118000432120004
33100004340e0004352c0004364a00043770000438960004399800043a9a
00043b2c00043bbe00043bfc00043c3a00043c9400043cee00043d260004
3d5e00043e6e00043e7e00043ec600043f0e00043f6600043fbe00043ff0
0004402200044064000440a6000440e00004411a0004415e000441a20004
421a000442940004432400044368000443a80004442a000444ac00044604
0004461400044662000446b0000446ec000447280004476e000447b40004
480200044850000448a0000448f00004494c000449a800044b1e00044c86
00044cbe00044cf800044d4400044d9000044de200044e3400044e860004
4edc00044f1800044f5400044faa00044ffe00045136000451d600045224
000452640004529e000454340004569c00045760000458f600045a540004
5b2200045cc800045f1c000461540004619a000461cc000462760004639a
000463be000464580004656400046674000467840004689200046a180004
6a4a00046aec00046b1400046b7600046bd800046c3a00046c9c00046cda
00046d1800046d5200046d8c00046db800046e0400046e3e00046e780004
6fd40004712800047138000471f60004732c0004738a000474a200047630
000476d60004781c0004785a00047898000478d000047928000479540004
7996000479fa00047a4200047aa400047b0400047b7600047bf200047c6e
00047cf000047d7c00047e0800047e9200047f1200047f4c00047f880004
80ec000481b6000481e6000482160004838400048520000485300004864c
0004875e0004888a0004899e00048ae600048c6600048c7600048d9a0004
8ee40004900600049178000492c20004944e000495960004971c000498ea
00049a5000049b0000049bcc00049e720004a0a80004a15a0004a3820004
a5580004a6a80004a7a80004a7b80004a8dc0004aa0a0004ab480004acca
0004aede0004b08e0004b27e0004b28e0004b39c0004b5000004b5ea0004
b75e0004b8640004b9ba0004bae60004bc060004bd740004bebe0004c016
0004c1520004c2ac0004c3f40004c5980004c7220004c8820004ca080004
cbd60004ccc80004cd060004cd5c0004ce040004ce140004ce660004cebe
0004cf1c0004cf400004cf780004cfc80004cff80004d0320004d0800004
d1ac0004d1d60004d2540004d30c0004d3340004d3b40004d3ee0004d42a
0004d5d20004d8c40004d9020004d9380004d9760004d9c40004d9ea0004
da100004da580004da9c0004dae20004db2a0004dc180004dc3c0004dc68
0004dca00004dcdc0004dd180004de7e0004dfbc0004dffe0004e03a0004
e0740004e0c20004e1060004e13a0004e1840004e1cc0004e2120004e246
0004e27e0004e2b60004e2ee0004e34e0004e3940004e3dc0004e4100004
e44a0004e4900004e4d40004e5120004e5480004e5600004e5a80004e5dc
0004e62c0004e65e0004e6940004e8040004ea160004eb700004eca60004
ecdc0004ed300004ee660004f0460004f1980004f2780004f39c0004f3d0
0004f4020004f5e40004f7900004f7ba0004f8300004f9740004f99c0004
fa140004fa480004fa7c0004faa40004fb180004fb500004fb8a0004fd32
0004fe760004ffd40005011a00050252000503ca00050518000506700005
07b00005097800050aea00050c5000050e3400050f54000510720005120a
000513460005148400051654000518500005198600051ae800051c960005
1d9000051da000051e7000051f8e000520780005217600052328000524f6
000526c4000528ca00052a0400052b3e00052c9000052ca000052e7a0005
2f9600053116000531ea000532be000533c8000534a8000535ba0005368c
000537500005392200053af800053d3e00053e5a00053fb2000540ae0005
42120005432a0005444e0005457c0005467c000547a2000548d800054aa0
00054bf600054d1000054e960005502e000551620005531a000554140005
552000055622000556fe00055840000558500005597c00055b1800055b28
00055c6200055e4e00055f08000560a2000561da0005631e000564f20005
6774000569cc00056bfe00056dfc00056fe60005722800057492000575ac
000577ba0005782c000579a000057b2600057c3600057d4200057e620005
7fb40005814c0005832a000584940005851000058610000586a20005872e
000587ba0005886000058906000589fc00058af200058b0200058b120005
8bfc00058cea00058d2000058d7800058dce00058e3000058e5e00058e9a
00058ed800058f5800058fb400059052000590f000059174000591f80005
9290000592be0005935a0005940c00059620000596c8000598f000059aca
00059c0600059c3c00059c8000059cc400059d0800059d3e00059d700005
9db200059e0a00059e4e00059f5400059fcc0005a0520005a0c20005a124
0005a1aa0005a20a0005a2740005a2e80005a3580005a3b60005a45c0005
a4f40005a5600005a5ee0005a6480005a6b60005a7600005a8060005a89c
0005a90c0005a98e0005a9f20005aa9e0005ab5c0005ac080005ac9a0005
acf80005ad640005adba0005ae3c0005aeba0005af400005afcc0005b026
0005b0920005b1020005b1700005b1e00005b2640005b2f40005b35a0005
b3d40005b4500005b4c80005b56e0005b6060005b6960005b6f40005b792
0005b80e0005b8a00005b9440005b9ee0005ba860005bae20005bb360005
bb9e0005bc440005bcee0005bdb80005be5e0005bec00005bf180005bf78
0005c0060005c08c0005c11a0005c17a0005c1de0005c2480005c2b00005
c3180005c3900005c4180005c4ac0005c5180005c5800005c5e40005c690
0005c7500005c7fe0005c88c0005c8ea0005c9560005c9c60005ca6a0005
cb100005cbd40005cc760005ccda0005cd6a0005cddc0005ce740005cef2
0005cf6c0005cfd80005d0660005d0c20005d1200005d1a60005d2220005
d28a0005d2ee0005d3420005d3b00005d4180005d4960005d50c0005d586
0005d6060005d6620005d6c80005d72c0005d7cc0005d86e0005d92c0005
d9dc0005da380005dab00005db0e0005db980005dc300005dcbe0005dd24
0005dd820005de100005de820005df1c0005dfb00005e0200005e0900005
e1080005e1660005e1c60005e2400005e29a0005e2fa0005e3540005e3b0
0005e4180005e4760005e4a60005e4ee0005e5620005e5b60005e62e0005
e71c0005e7ac0005e8100005e8440005e8920005e90e0005e9d80005ea68
0005eae20005eb680005ebe20005ec580005ec920005ecd00005ed500005
edd00005ee060005eeb20005ef6c0005eff60005f07e0005f10e0005f13a
0005f1c40005f2500005f2bc0005f3de0005f45c0005f4ee0005f56a0005
f5ca0005f6180005f6b80005f7140005f7700005f7d80005f8440005f8d0
0005f8fe0005f92a0005f97e0005fa0c0005fa360005fa5e0005faae0005
fafe0005fbb80005fc040005fc420005fcf20005fd660005fdd20005fe40
0005fe7c0005febc0005ff520005ffde000600d00006012c0006016e0006
01c20006023e000602b2000603d2000605280006062e00060698000606f2
00060a2000060ac200060b3200060b8a00060cd000060e0400060ed60006
0fc0000611040006120a000613360006149000061660000617540006180c
0006194a00061b3000061b8800061bc400061c1000061d2600061e4a0006
1f8e00061fe000062012000621360006229200062496000625c0000626e2
000627a8000628ae000629be00062abe00062bee00062c8c00062dcc0006
2f0200063122000633580006348200063588000636dc0006382c000639d0
00063b3a00063cb400063e8600063fa6000640c600064200000642c20006
446a000645a6000646d8000646e8000646f8000647a40006485400064884
000648d0000649000006494400064b2600064cc400064e6e00064fd60006
517600065330000654a0000656140006581c000659fa00065bb200065d96
00066006000662b2000664ac0006667a00066846000669d600066b340006
6c7200066d7e00066e860006700a00067174000672f4000674aa00067604
0006775e000679a400067b7000067be400067c1800067c5200067d6e0006
7e9600067fd600068050000680980006810e000681840006836200068576
000687580006899400068aca00068bd200068d6e00068f06000690500006
91b4000693b8000695a40006977a0006995a00069b0e00069ce200069e16
00069f7a0006a1040006a28a0006a3ea0006a5680006a70a0006a89c0006
a9a00006aa8e0006abfa0006ad360006aeb20006b0180006b1680006b304
0006b4680006b59c0006b5ac0006b5e00006b6060006b7e60006b9840006
bab80006bc0e0006bd8e0006bef00006c04a0006c1c40006c3440006c4ac
0006c6780006c8620006c8e60006c91a0006c93e0006c98e0006c9ce0006
c9de0006c9ee0006ca300006ca580006ca9a0006cad00006cb080006cb44
0006cb860006cbbc0006cd240006cd340006cd680006cd9c0006cdd40006
ce120006ce4e0006ce8a0006cec60006cf020006cf400006cf8a0006cfc2
0006cffa0006d03e0006d08c0006d0e00006d1240006d1660006d19e0006
d1d60006d20e0006d3140006d3240006d4e80006d6de0006d8c20006da60
0006dbd60006dd4a0006ded80006e0620006e1fc0006e3700006e4be0006
e5d20006e7340006e8620006e9180006e9ca0006eaa20006eb200006ebce
0006ec460006ecb60006edc80006ee2a0006eed80006efbc0006f0200006
f0860006f1340006f30c0006f4080006f4880006f4c20006f56e0006f5e6
0006f6b00006f7380006f79c0006f8920006f94e0006fa080006fa4a0006
fac40006fbd00006fc680006fcb40006fd9a0006fe7a0006ffde0007016e
000702820007039600070490000704b8000704e2000705160007054a0007
057000070596000705be000705e40007065c000706b6000706ea00070730
0007075a00070786000707ac000707d8000707fe000708280007084e0007
08760007089e0007090a000709320007098e000709b4000709dc00070a0a
00070a3000070a6400070a9600070aca00070b0200070b3a00070b6e0007
0ba200070bd000070bfa00070c2000070c5800070c9000070cbe00070cf2
00070d1800070d3e00070d6400070d8a00070db400070e1200070e460007
0e8400070eb800070ee200070f0800070f3600070f5c00070f8600070fd4
0007102e0007105a00071080000710ac000710d20007110a0007113e0007
1172000711a6000711cc000711f20007122c000712600007128a000712b0
000712d6000712fc00071322000713480007137000071426000714500007
14f00007151800071586000715ae0007160c000716400007167c000716bc
000716f20007172e0007176000071788000717ae000717fa0007183c0007
18540007187a000718ae000718e0000719080007193000071966000719ca
000719f200071a4c00071a9400071ada00071b0e00071b5000071b760007
1b9c00071bc200071be800071c0e00071c3400071c5c00071c8600071cac
00071cd200071cf800071d1e00071d4600071e0c00071e3600071ea00007
1ed400071f0800071f4000071f7400071fa800071fdc000720060007202c
0007206000072096000720ce0007210e0007214a0007218e000721e20007
222c00072252000722780007229e000722c4000722ea000723340007236c
000723a4000723f20007242e0007246a000724aa000724e8000725260007
2564000725a2000725e0000726220007265600072694000726ce00072708
0007274800072788000727bc000727f00007283e0007287a000728bc0007
28fe000729360007296e000729b6000729fe00072a5600072aae00072b14
00072b7a00072bb000072be600072c2000072c5a00072c9200072cca0007
2d1000072d5600072db600072e1600072e6e00072ec600072f2000072f7a
00072fc20007300a000730440007307e000730bc000730fa000731300007
3166000731a4000731e20007322a00073272000732ba0007330200073350
0007339e000733e000073422000734560007348a000734c4000734fe0007
353800073572000735d2000736320007366c000736a60007370400073762
00073798000737d8000738100007384800073882000738bc000738f60007
393a000739a200073a0e00073a7a00073ac400073af800073b2c00073b66
00073ba000073be400073c2800073c6000073c9800073cde00073d200007
3d5800073d9000073de000073e3000073e8000073ed000073f0600073f4a
00073f8400073fc4000740080007404000074078000740ae000740f20007
41360007416c000741b6000742020007423e0007428c000742de0007432c
0007437a000743c80007441600074466000744ba000745000007454e0007
459a000745e6000746380007468a000746d0000747160007475e000747a6
000747f20007483e00074886000748ce000749240007497a000749ec0007
4a5e00074ac800074b3200074b9e00074c0a00074c6400074cbe00074d02
00074d4600074d9200074dde00074e3200074e8600074ece00074f160007
4f6e00074fc20007500c00075056000750c00007512a00075194000751fe
0007523200075266000752ae000752d40007532a0007535e000753a20007
53d60007540a000754480007548e000754b40007552c0007557c000755f4
000756820007578e000757e2000758080007585000075888000758d00007
5924000759a0000759f000075a7600075a9c00075b4c00075bfe00075d18
00075d4a00075d7c00075e0000075e6e00075ea000075f0a00075f3e0007
5f7200075fbc00076026000760d400076182000762ac000762ea00076326
0007639c000764020007643e00076474000764aa00076510000765440007
6578000765d60007664a000766a80007676e000768340007687c000768da
000769000007694e00076982000769c600076a1400076a7000076ac20007
6b1c00076b4200076b9a00076c1000076e040007705c0007722800077456
00077640000776660007799600077be800077d8a00077f9c000780da0007
82f0000783460007839a000784160007847c0007852c000785dc000787c4
0007898400078aee00078bb000078ce000078dac00078eac00078fc20007
90080007904e00079096000790da000791fc0007923a000792ac00079338
000793c40007942c0007945e0007948e000794be000794ee0007953a0007
956c000795d40007961600079660000796e600079764000797aa000797ec
00079864000798ae00079914000799420007996e0007997e0007998e0007
9aa000079c1e00079db800079ede00079f9c0007a0420007a1140007a1fa
0007a2d60007a37e0007a40a0007a5620007a6420007a6520007a6620007
a6720007a7200007a7d60007a8860007a98a0007aae60007abb80007ac38
0007acbc0007ad740007ad840007ae980007af3a0007b0040007b0b40007
b1ba0007b3140007b3240007b3340007b3440007b41e0007b5080007b5ec
0007b5fc0007b60c0007b61c0007b62c0007b78a0007b79a0007b8e00007
bab00007bc0c0007bd820007be7c0007bf860007c0920007c1b60007c2c0
0007c3440007c3d00007c51e0007c5b40007c74a0007c8560007c94c0007
ca280007cb580007cc4e0007cdc40007ce660007cf880007d1bc0007d2a6
0007d3940007d47a0007d5f40007d6fc0007d8180007d9260007da1e0007
daf60007dbd20007dd1c0007ddc00007df3c0007e0840007e17a0007e270
0007e3520007e3d80007e4680007e5940007e6140007e6d60007e78e0007
e8ce0007ea260007ead60007ebd00007ec780007edd40007eeca0007efd2
0007f09e0007f18c0007f2460007f39c0007f48c0007f52a0007f6840007
f7740007f8740007f8d20007f9d80007fa6e0007fb300007fbd80007fc18
0007fdb60007fe620007ff1a00080042000801d0000802dc000803260008
04b60008053e0008055000080580000805b0000805e80008062000080656
00080692000806c8000807040008086c00080900000809e200080a660008
0b4e00080bea00080c5c00080d2400080d6600080e9600080f4600081030
000810680008108e000810c8000811c2000812e0000813e2000814200008
1446000814a4000814b4000814c4000814d4000814e4000814f400081504
000815140008152400081534000815440008155400081554000816280008
1766000819ac00081adc00081c4c00081de800081fb00008213400082144
0008220c0008232e0008251e0008260c000826d400082716000827ce0008
28940008292c0008298c00082a8e00082b6200082c5600082d5600082dfa
00082e9200082ee800082f3000082f720008301200083072000831640008
31f200083228000832a20008331a0008336a000834760008356c00083616
000836400008366a00083694000836be000836fe0008373e000837760008
37ae000837f80008384200083882000838c20008390c0008395600083996
000839d600083a3000083a8a00083ac400083afe00083b4200083b860008
3bca00083c0e00083c6200083cb600083d0200083d4e00083d8c00083dd0
00083e2000083e7000083eca00083f2800083f5200083f7c000840160008
40b0000840f4000841380008424e0008425e000842a6000842ee00084340
00084392000843fc000844500008449c000844fa00084584000845e80008
462c00084676000846de0008472800084768000847b0000847ec00084828
000848640008489e000848e00008492200084962000849a2000849ec0008
4a3600084a8c00084ae400084b3200084b8000084bc200084c1000084c52
00084c9c00084cde00084d2200084d7e00084dda00084e2600084e720008
4ebc00084f0600084f4400084f82000850000008507e000850b8000850f2
0008518c00085226000852fa000853ce0008542a00085486000854fa0008
556e000856cc000856dc000857c6000857d60008580c000858420008587c
000858b6000858f20008592e00085974000859ba00085b2a00085cce0008
5e220008602e000861aa0008635a0008649a000865980008675e00086892
000869e000086b7a00086ca400086dc400086fc200087066000871080008
728200087380000874dc00087606000877440008783600087a3600087bb4
00087c5e00087df400087f16000880a40008818800088332000884340008
855c0008870c000887dc0008891c00088a3c00088b6600088c8400088dae
00088ee000089016000890fa0008922e0008930e000894160008951e0008
96220008972a000898400008997c00089a5800089b0e00089bd000089d14
00089dfa00089ef000089f6400089fea0008a0b00008a17e0008a2040008
a2ae0008a3420008a4ce0008a61a0008a71a0008a81a0008a9240008aa1c
0008ab500008ad440008adee0008aea80008afa60008b0e00008b19e0008
b2540008b37a0008b4160008b4fa0008b6060008b7040008b78a0008b82a
0008b8ca0008b9c80008ba120008badc0008bbbc0008bcc80008bdc60008
bfb00008c0b40008c2180008c3b20008c5580008c66c0008c6e20008c742
0008c7a20008c8020008c8620008c8c20008c9220008c9820008c9e20008
ca400008ca9e0008cafc0008cb5a0008cbb80008cc160008cc740008ccd2
0008cd320008cd920008cdf20008ce520008ceb20008cf120008cf720008
cfd20008d05e0008d0ea0008d17a0008d20a0008d29a0008d32a0008d3bc
0008d44e0008d6620008d8140008d8fc0008da7e0008dba40008dbb40008
dd5e0008dede0008df980008e07c0008e1800008e27a0008e3ac0008e496
0008e62c0008e7ae0008e87c0008e8b60008e8f00008e9000008e9e80008
ead60008ec820008ee000008efb80008f1700008f1800008f2580008f33c
0008f4140008f4560008f49a0008f4dc0008f5200008f5920008f5fe0008
f6940008f6da0008f7520008f9ea0008fab20008fac20008fba80008fc66
0008fd680008fe8c0008ffd2000901be000902c2000902d2000903f60009
0572000906da0009075c000907e60009096800090a2800090ad800090bb4
00090c0200090cb200090d0200090d3200090d7600090db800090de60009
0f0a0009102200091144000911b00009121c000912cc000913a20009141a
000914d2000915c00009161600091708000917f400091866000918760009
188600091896000918a6000919d6000919e800091ad200091ba400091d72
00091ed600091f4000091f8a00091fca0009200a0009205a000920aa0009
21220009219a000922120009226a000100000d5600f2003c009d00070002
0010002f00560000062504eb0005000200>
<0000003a02be0000000300000000006a00000000000300000001001e006a
0000000300000002000e0088000000030000000300720096000000030000
0004001e006a0000000300000005001800d8000000030000000600220108
000000030000000700ce012a00000003000000080030000e000000030000
0009008601f8000000030000000d029a027e000100000000000000350518
0001000000000001000f054d00010000000000020007055c000100000000
0003003905630001000000000004000f054d0001000000000005000c0584
00010000000000060011059c0001000000000007006705ad000100000000
00080018051f000100000000000900430614000100000000000d014d0657
0003000104030002000c07a40003000104050002001007b0000300010406
0002000c07c00003000104070002001007cc0003000104080002001007dc
0003000104090000006a00000003000104090001001e006a000300010409
0002000e00880003000104090003007200960003000104090004001e006a
0003000104090005001800d8000300010409000600220108000300010409
000700ce012a00030001040900080030000e0003000104090009008601f8
000300010409000d029a027e00030001040a0002000c07a400030001040b
0002001007ec00030001040c0002000c07a400030001040e0002000c07fc
0003000104100002000e0808000300010413000200120816000300010414
0002000c07a40003000104150002001008280003000104160002000c07a4
0003000104190002000e083800030001041b00020010084600030001041d
0002000c07a400030001041f0002000c07a40003000104240002000e0856
00030001042a0002000e086400030001042d0002000e087200030001080a
0002000c07a40003000108160002000c07a4000300010c0a0002000c07a4
000300010c0c0002000c07a400a900200032003000300038002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0054
0069006d006500730020004e0065007700200052006f006d0061006e0052
006500670075006c00610072004d006f006e006f0074007900700065003a
00540069006d006500730020004e0065007700200052006f006d0061006e
00200052006500670075006c00610072003a00560065007200730069006f
006e00200035002e0030003500200028004d006900630072006f0073006f
00660074002900540069006d00650073004e006500770052006f006d0061
006e00500053004d005400540069006d006500730020004e006500770020
0052006f006d0061006e0020006900730020006100200074007200610064
0065006d00610072006b0020006f006600200054006800650020004d006f
006e006f007400790070006500200043006f00720070006f007200610074
0069006f006e00200069006e002000740068006500200055006e00690074
00650064002000530074006100740065007300200061006e0064002f006f
00720020006f007400680065007200200063006f0075006e007400720069
00650073002e004d006f006e006f00740079007000650020005400790070
0065002000440072006100770069006e00670020004f0066006600690063
00650020002d0020005300740061006e006c006500790020004d006f0072
00690073006f006e002c00200056006900630074006f00720020004c0061
007200640065006e0074002000310039003300320059006f00750020006d
0061007900200075007300650020007400680069007300200066006f006e
00740020006100730020007000650072006d006900740074006500640020
006200790020007400680065002000450055004c004100200066006f0072
0020007400680065002000700072006f006400750063007400200069006e
0020007700680069006300680020007400680069007300200066006f006e
007400200069007300200069006e0063006c007500640065006400200074
006f00200064006900730070006c0061007900200061006e006400200070
00720069006e007400200063006f006e00740065006e0074002e00200020
0059006f00750020006d006100790020006f006e006c0079002000280069
002900200065006d0062006500640020007400680069007300200066006f
006e007400200069006e00200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
00740068006500200065006d00620065006400640069006e006700200072
00650073007400720069006300740069006f006e007300200069006e0063
006c007500640065006400200069006e0020007400680069007300200066
006f006e0074003b00200061006e00640020002800690069002900200074
0065006d0070006f0072006100720069006c007900200064006f0077006e
006c006f006100640020007400680069007300200066006f006e00740020
0074006f002000610020007000720069006e0074006500720020006f0072
0020006f00740068006500720020006f0075007400700075007400200064
0065007600690063006500200074006f002000680065006c007000200070
00720069006e007400200063006f006e00740065006e0074002ea9203230
303820546865204d6f6e6f7479706520436f72706f726174696f6e2e2041
6c6c205269676874732052657365727665642e54696d6573204e65772052
6f6d616e526567756c61724d6f6e6f747970653a54696d6573204e657720
526f6d616e20526567756c61723a56657273696f6e20352e303520284d69
63726f736f66742954696d65734e6577526f6d616e50534d5454696d6573
204e657720526f6d616e20697320612074726164656d61726b206f662054
6865204d6f6e6f7479706520436f72706f726174696f6e20696e20746865
20556e697465642053746174657320616e642f6f72206f7468657220636f
756e74726965732e4d6f6e6f7479706520547970652044726177696e6720
4f6666696365202d205374616e6c6579204d6f7269736f6e2c2056696374
6f72204c617264656e742031393332596f75206d61792075736520746869
7320666f6e74206173207065726d6974746564206279207468652045554c
4120666f72207468652070726f6475637420696e20776869636820746869
7320666f6e7420697320696e636c7564656420746f20646973706c617920
616e64207072696e7420636f6e74656e742e2020596f75206d6179206f6e
6c792028692920656d626564207468697320666f6e7420696e20636f6e74
656e74206173207065726d69747465642062792074686520656d62656464
696e67207265737472696374696f6e7320696e636c7564656420696e2074
68697320666f6e743b20616e6420286969292074656d706f726172696c79
20646f776e6c6f6164207468697320666f6e7420746f2061207072696e74
6572206f72206f74686572206f75747075742064657669636520746f2068
656c70207072696e7420636f6e74656e742e004e006f0072006d0061006c
006f00620079010d0065006a006e00e9006e006f0072006d0061006c0053
00740061006e0064006100720064039a03b103bd03bf03bd03b903ba03ac
004e006f0072006d00610061006c0069004e006f0072006d00e1006c004e
006f0072006d0061006c0065005300740061006e00640061006100720064
004e006f0072006d0061006c006e0079041e0431044b0447043d044b0439
004e006f0072006d00e1006c006e0065004e0061007600610064006e006f
0074006801b001a10300006e00670041007200720075006e007400610000
b9005403ecb3032a1f3f411503e4006003e9009f03e500df03e500040010
03e4001003e5003f03e5007003e400ff03e40005ffc003e1b345453240b8
03e1b32b2e3240b803e1b2282932b9ffc003e1b21a1c32bd03e102ac0027
001fffc003dfb2161b32b9ffc003deb2424232b9ffc003deb2363832b9ff
c003deb32a2d32df410a03de00ef03de000203de03df0028001fffc003df
b3282e32f0410d03df0001037e000f0101001f00a003dd00b003dd000200
4003dab32426329fbf03cc000103ca03c90064001fffc003c9b20d113241
0a03c703b70012001f03b603b50064001fffc003b5b30e1132004173038d
000100c0038d00d0038d00e0038d00f0038d0004006f03a7007f03a7008f
03a700af03a70004000f03a7001f03a7002f03a7004f03a7000403ab03ab
00ef03a50001000f03a5002f03a5006f03a5008f03a50004005403aa0001
006b03aa000103a8036a0022001f038c03940015001f038b03930015001f
03a40393001a001f03a20394001e001f03a10393001e001f039f0394001e
001f039b0394001a001f039a0393001e001f039903940016001f03980394
0016001f03970393001b001f03960394001b001f03950393001b001f0376
0375001a001f03740375001a001f03a00373b21e1f10411e039300200393
00300393000300200394003003940040039400030000039400010383036c
001e001f03b1036c0032001f036d036c0032001fffc0037db2212332b9ff
c0037db3171932a0410a037d00b0037d00c0037d00d0037d0004ffc0037c
b2212332b9ffc0037cb3171932a0412d037c00b0037c00c0037c00d0037c
000400300373004003730002000003730010037300200373000300e00373
00f00373000200b0037300c0037300d003730003008403730090037300a0
037300030377036a0029001f0389036ab2281f40b80367b33940323fbb03
66000100400366b3191d328fbb0366000100400366b3090a3240b80366b3
090e3240b80366b3090f323fbb0365000100400365b3090c3240b80365b3
1a1d3240b80365b3090e326b410e0363007b036300020014036300240363
003403630044036300040363b2242f1fba034e006d0800400e1f7f027f03
7f047f050430440112bf033200500800001f0012032d003c080040291f5f
3c01376009700980090310092009300940095009056f037f038f03031f03
2f033f034f035f0305b8ffc0b2073a33b8ffc04047063a33900ba00bb00b
c00bd00b05b006c006d006e006f006052006300640065006600670068006
9006a006099006900702600b700b800b03100b200b300b400b500b051f07
01a041850362000100000362001003620070036200900362000400f0035f
00010020035e0020035f0030035f0040035e00040000035e0000035f0010
035f00d0035e00e0035f00050010030f0020030f0030030f00d0030f00e0
030f00050000030f0010030f0050030f0060030f0070030f00d0030f0006
0000030f0010030f0020030f0030030f00e0030f00f0030f0006030f0027
0000030e0030030e000200e0030e00f0030e0002030e004a00e0030d00f0
030d0002030d002700d002fc0001001002fc002002fc005002fc000300d0
02fc00e002fc0002000002fc001002fc002002fc003002fc005002fc0060
02fc000600e002fc00f002fc0002002002fc003002fc004002fc000302fc
406127c02901b02901a02901902901403c3f413240223f41321212125f23
5f255f285fa5046f236f256f286fa5044f234f254f284fa5043f233f253f
283fa5042f232f252f282fa5041f231f251f281fa5048f4caf4cbf4ccf4c
045f4c6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8ffc0b5b2
191a32370f413b02af0001005f02af009f02af00df02af0003001f02af00
2f02af003f02af006f02af000402af02af001f02ad002f02ad003f02ad00
4f02ad005f02ad000500df02ad0001000f02ad001f02ad003f02ad005f02
ad009f02ad0005005f02ad00df02ad0002000f02ad001f02ad003f02ad00
03004002acb23a334f414a02ac005f02ac009f02ac0003002f02ac003f02
ac0002000f02ac003f02ac00af02ac000300b002ac00e002ac0002004f02
ac005f02ac00a002ac0003001f02ac002f02ac003f02ac0003000f035a00
01000f035a001f035a003f035a005f035a0070035a000500cf035700df03
570002000f0357001f03570070035700af03570004035a035a0357035702
ad02ad02ac02ac032c400d31151f001616000000121108104110020c004a
000d01a8004a000d0198004a000d0189004a000d013f004a000d0124400e
4a0df64a0dbe4a0d864a0d274a0dbe02280041000d01940041000d012140
0b410db4410d4f410d29410d411002170021000d02150021000d02060021
000d01eb0021000d014e0021000d012c4014210df9210df3210df1210d9d
210d71210d3d210d4110021c001f000d0214001f000d020b001f000d0196
001f000d014a001f000d0126400b1f0dc61f0d571f0d371f0d410d019e01
41000d00420141000d001e0141000d001b0141000d01f2b40f440f0009bb
01f20044000d0201b23c291fb80200b23c291fb801ffb23c411fb801feb2
3c471fb801fdb23c9e1fb801fab23c931fbc01f9010f0101001f01f6b224
e41f411501f401490401001f01f301490401001f01f1014900ab001f01f0
01490067001f01a6003c0125001f01a4b23c811f411501a3010f019a001f
01a200220801001f01a100500401001f019f0149019a001f019d01490067
001f019cb22c621fb8019bb22c791fbc019a002c0101001f0197b22ce41f
b80193b22c891fb80192b22c6c1fb8018fb2259e1fb8016ab23c2a1f4111
016700240201001f0163002502ab001f014c010f019a001f01480149006c
001f0147b22c891fb80145b22c9e1fb80144b22c791fb80143b223311fb8
0127b23c811fbc012300500101001f011fb223e41f4115011d0023019a00
1f011c00230801001f011b00250801001f010e010f0401001f010d002204
01001f0108b223811fb80106b425e41ff73cbb0125001f00f5010fb29e1f
e3bc01490156001f00e20149b2ab1fd1b901490401b21fcf2cb80125b61f
ce23bb1fc524b80156b21fc02cb80801b21fbf2cb80201b51fb124e41fb0
b901490201b61faf2c671fad23b80801b21fa523b80201400b1f9f3c2d1f
9b235a1f9925b80201b21f812cbc0401001f006d010f0156400b1f592c3e
1f4c3cab1f4625b80101b21f403cb80125400a1f3a23721f393cab1f38b8
0149b3ab1f3124b80401b21f3025b802abb61f2a24e41f2623b80156b21f
5537ba023500070175402c0774076207560751073b0733072d0720071d07
1c071408120810080e080c080a080808060804080208000814b8ffe0402b
000001001406100000010006040000010004100000010010020000010002
00000001000002010802004a00b013034b024b534201b0124b004b5442b0
372b4bb807ff52b0382b4bb008505b58b101018e59b0382bb00288b80100
5458b801ffb101018e851bb0124358b90001012f858d1bb90001017c858d
5959014bb0c063004b6220b0f65323b8010a515ab0052342180016763f18
3f123e113946443e113946443e113946443e113946443e11394660443e11
394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b18
1db0964b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58b9027102
6f4544b90270026f45445958b9017a0271455258b90271017a4459594bb0
4753205c58b9002202704544b9003c027045445958b901b30022455258b9
002201b34459594bb04c53205c58b9014900224544b1222245445958b901
c20149455258b9014901c24459594bb06753205c58b9002402714544b900
50027145445958b9021e0024455258b90024021e4459594bb8020153205c
58b9010f00224544b1222245445958b90c00010f455258b9010f0c004459
594bb01c53205c58b125254544b12c2545445958b13725455258b1253744
59594bb0ab53205c58b125254544b1232545445958b901590025455258b9
002501594459594bb8010153205c58b125254544b1282545445958b90208
0025455258b9002502084459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361dc6463456523456023456560
234560b08b766818b080622020b164dc4565234520b003266062636820b0
03266165b0dc236544b064234420b161634565234520b003266062636820
b003266165b063236544b0612344b10063455458b163406544b261406145
23614459b3a67f434b456523456023456560234560b089766818b0806220
20b1437f4565234520b003266062636820b003266165b07f236544b04323
4420b1a64b4565234520b003266062636820b003266165b04b236544b0a6
2344b1004b455458b14b406544b2a640a645236144594b5242014b5058b1
08004259435c58b108004259b3020b0a124358601b2159421610703eb012
4358b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b9
2d412d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b
211bba01a80400000b2b59b0102342b0112342002b001845694445694445
6944456944737373747373737475752b7373747475184569447373742b4b
b021534bb046515a58b03cb03c45b040604459012b2b2b2b757575757575
757543584010bf3ccf3c026f3c7f3c8f3c9f3caf3c0575755943584012bf
22cf22025f226f227f228f229f22af2206757559435c58b6403c9f22ef22
0375592b2b01747474744544737374747575454473454473744544737475
737373737300757575737575752b2b757575752b752b435841220063032d
00010003032d0013032d0023032d0033032d0053032d000500c3032d00d3
032d00e3032d00f3032d00040083032d0093032d00a3032d00b3032d0004
032d032d4518694474747575592b4358b900180332b330353238b80332b3
61663238b80332b3535a3238b80332b3454e3238b80332b33c413218b803
32b23f330a410f0332000100ba033200ca033200da033200ea033200fa03
320005033203324518694474752b2b2b2b2b2b597300732b012b7575002b
2b2b74002b2b2b732b74012b002b2b017373737474732b2b00732b2b002b
2b2b017374732b012b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b0001737500
7373004569440073730173742b2b2b2b2b732b00732b752b2b732b2b2b2b
2b2b2b2b2b73742b2b00000000>
[15785 11565 15133 15893 15981 14937 16337 15645 16353 14921 16353 16373 16237
16209 16373 15753 16373 16249 16273 16177 15933 15953 16221 16017 15885 15209
16261 15725 15813 16357 16209 16073 16169 16181 15929 16321 16273 11223 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 10378 69 <0002fffbffe403b9058e0016002401d2b10202435458b11e05b8fff44010
1010025505140c00180a0d0d0255180cb8ffe6b4131302550cb8fffcb40d
0d02550cb8fffcb40f0f02550cb8fff4400d101002550c0c181700040209
13b803e240111440090d02551415001b25090b21590207003fed3fed3fdd
2bed11121739012f2b2b2b2bdd2bc010c62f2bcd31301bb1060243545840
2618170003020913141500215902071b25090b1e0505262500180c0d0d06
55180210100655180cb8fff8b40d0d06550cb8ffeeb7101006550c0c2625
1112392f2b2bdd2b2bc01112392fcd003fed3fed3fddcd1112173931301b
4079102601a406b606b507ea1f040526430d5d3620267503760486038704
a603ab08074707013a0814270d41131e144418170c00041b160010210121
5902071b25090b1e311f0590050260058005af050305eb0c16000018240c
0c100d500d700d900d04800d900db00d03000d100d200d300db00dc00dd0
0d070db8ffc0b73c350d6025c24b182b4e10f42b5d71723c4d10fd3c103c
10fd5d72ed003fed3fed723f111739f5edfc01f53130437940281920030b
072620031e20011a0a181c0019180b0c1c081e20011f04212001190b1b1c
001d061b2000002b2b2b012b103c103c2b2b2b81810071015d2b005d0172
595901363332161514070623222627113426262322072725331111161633
323635342623220706013b859a8dd2a28bab50a5560f20181c2a0e01132d
336d395b9d9d6435352802f6b9f1d1f495803a3a03b59c481a102370fd28
fddc3233c8bfb0bd1b14>TimesNewRomanPSMT AddT42Char 
4 4350 76 <0002003c00000207058e000b00220249b10202435458b90024ffc0401d0d
0d0255120d080d0d02550d21181010025521180f0f02552113180309b8ff
eeb41313025509b8ffe0b40d0d025509b8ffd6b40f0f025509b8ffceb610
100255090d18b8fff4b41313025518b8ffe2b40d0d025518b8ffe0b40f0f
025518b8ffd6b5101002551820b803e240174f216f217f210321226f0001
0060060106400f0f025506b8ffc0b71313025506220613002f3fd62b2b5d
cd5d10dd5ded012f2b2b2b2bcd2f2b2b2b2bcd10c4c62b2b102bc4313001
2b1bb10602435458400d20121010065521121010065506b8ffc0b44b4b06
5506b8ffc0b44141065506b8ffc04019373706554006010006a006026006
0106000020212207130309b8fff6401c10100655090924230d0210100655
0d020f0f06550d0c0d0d06550d18b8fff0b41010065518b8fff6b40f0f06
5518b8fff0b70d0d0655181824231112392f2b2b2bcd2b2b2b1112392f2b
cd002f3fddcd3fcd5d71722b2b2b3130012b2b1b40199024016024702490
24a024f024052024502402402450240224b8ffc0b332323424b8ffc0b338
3a3424b8ffc0b32d303424b8ffc0b323253424b8ffc0402e191a3418291e
134a220d291e124a2321271941201e21440c190c1390060106390000220c
0713120a900901093903b8ffc0b2433503b8ffc0400f3f35036b0c0c0d19
0d2418402b3918b8ffc0401a363a34901801501801601870189018a018f0
180518b223b2a3182b10f65d71722b2bed3c103c10f42b2bed72003f3c3f
3c3fed7211123910f5edfc01f52b2b3130012b2b2b2b2b015d715d017259
590132161514062322263534361311141616331521353236363511342726
26232207272501292a3b3b2a2a3c3b7e193141fe43432e1b09071e1a1c28
0e0114058e3b2a2a3c3c2a2a3bfe21fd2056391c24241a3c550161952c20
190f2470>TimesNewRomanPSMT AddT42Char 
4 11824 86 <00010064ffe402d503af00310434b1020243545840273340131302553340
0b0b02550201181010025501180f0f0255010f1b1a08270c0b0b02552721
0fb8ffe0b4101002550fb8fff440320f0f02550f310708270f2104122b05
017905016c050105252f0101012a0719771e01631e011e25201a01601a70
1a021a120b003fc45d5ded5d5d2f3fc45ded5d5d5d1217393f012f2b2bcd
2f2bcdd4cd10d42b2bcd31302b2b1bb106024354584032210f2708042a16
1e122e05022a3107601a701a021a19124b05016b057b050205252a07441e
01641e741e021e25120b01210fb8fff2401a0d0d06550f0f33321a080e0d
0d06550827120d0d0655272733321112392f2bcd2bc41112392f2bcdc400
3fed5d5d3fed5d5d10c4c45d3f10c4123911123912173931301b4029092c
192c0212122e400b392c280b391814590c5a269b109424050a070a280a29
603370338033060f33b8012040870d5d36cb0dcb0ec424c425d723d624d9
2ce604e623e624e92c0b123f2c5d2c6e2d7d2c8f018f028f038015801a80
1b801c892d8f2e0d0f010f020a03090c061c0a2cc822c923081c03161412
1c161d19291b2c9909990a9b20932393240b122b0d282c4a2c4f335f3378
29782c860ea823af33e803e61c0c2908311e00bd021e011f012f010201b8
012bb200bd2eb8011a40112a181e19bd1b1e1a1f1a01101a201a021ab801
2bb219bd16b8011a4022121224230d0b040f2724230d0b04051e01c7002e
2f2a31000005252a071a7e191918b803464014162f1e25120b02cc120101
12cf21df21ef210321b80314400b700f01600f700f900f030fb801364019
271a192e1f0801082c9f270160277027802703202730270227ba01200032
0120b14b182b4e10f45d71724ded72f43c10fd5d71fd5d4358b2ff21015d
59392f435c58b2ff01015d59ed003fede4f43c10ed3fed3c103c10e410ed
1112173901111217394358400a242323240d0b140d0d0b870e2e2b0e7d10
c459180010ecf4ed5d720110edf4ed0010ecf4ed5d0110edf4edb1060243
5458b42e20090d34002b5931304379401c28291f20101106071f11211c01
0629081c0020101e1c000728051c01002b2b012b2b81818181015d435840
09fb07f610f611fb28045d5901720071005d435840199f019f029f039f0b
9a0d9015901a901b901c992297239f2d0c5d595d2b017100722b2b435840
0b2f232f248b2c9b249b2c055d59435c584011282019390928193901400a
3902400a391bb8ffc0b20a391ab8ffc040190a392e400a392c400a392c40
09390c101e123f0e201e123f0eb8fff0b21b390eb8fff0b2193924b8ffe8
b2133923b8ffe8b213390cb8ffe8b613392c1813391bb8ffc0b212391ab8
ffc0400f123901401239024012392c20123924b8fff0400f0f392c180f39
03100d392e400d3923b8fff040120d390c100d392c200d392c1811392c18
1139002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b012b2b59005d59590111232626232206151417161717161514062322
272623220723113316163332363534262427263534363332171633323637
02902126775c4656201f5f92cbbd75546c2115170d21211c9e62455761fe
de2d2d9b7b364d331110120c03affec8936a4a2d3828292e4763a27d991e
0a1a01478c8e5139455e903a39577198170f0e18>TimesNewRomanPSMT AddT42Char 
4 13044 87 <00010014fff1023c04c1001b01fdb1020243545840251d40121302551d40
101002550b0c18121202550c15130105131812120255130e1313025513b8
fff8b40f0f025513b8fff4b40d0d025513b8fff0400c10100255130b082c
0f161404b8011bb2000106003fcdfdd0cd2fedc4012f2b2b2b2b2bddc010
c62f2bcd31302b2b1bb106024354584019170c10100655160c1010065515
0c10100655160c101006551bb8ffe8b4101006551ab8ffe8b41010065519
b8ffe8401410100655700b010b0f1b01156914014914011404b8011b401c
0106082c0f0b1b0105021010065505080f0f0655050c0d0d06550513b8ff
eeb41010065513b8fff0b40f0f065513b8fffab70d0d065513131d1c1112
392f2b2b2bdd2b2b2bd0cd003fed3ffdd05d5dc010cd10c45d3130012b2b
2b2b2b002b2b1bb9000dffe840410c395f015f02023f1d99119919bf15bf
16b819e819079f1d01891a014f0c4f0d5f0c5f0df5180506181518271803
161518191a030118191a03141ba00103153004b8011b401c010330020201
060c35082c0f0b16cf15df15ef15031565141bcc000bb801ec402c200c01
0c2e2f1db01d021d000101040405241450130180130100131013b013c013
d013e0130613601cab89182b10f65d71723cfd3c103c103c105df45ded10
ed10f45d3c003ffde43f3c10ed10edfd3c10e40111173900111739123931
3000715d0171725d00722b59590111331523111416333236373306062322
2626351123353636373637014ad6d63328213e11272380442e582a913773
2d172904c1fed346fdae593e29286263335f63026821166948266500>TimesNewRomanPSMT AddT42Char 
2 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/b 69 def
/i 76 def
/s 86 def
/t 87 def
end
TimesNewRomanPSMT /Encoding get
dup 98 /b put
dup 105 /i put
dup 115 /s put
dup 116 /t put
pop
end
%ADOEndSubsetFont
reset_gvm
/VCULPP+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/VCULPP+TimesNewRomanPSMT*1 
[98{/.notdef}rp /b 6{/.notdef}rp /i 9{/.notdef}rp /s /t 139{/.notdef}rp]
VCULPP+TimesNewRomanPSMT nf
VCULPP+TimesNewRomanPSMT*1 [0 -16.02 -16.02 0 0 0 ]msf
186.66 395.912 mo
(bits)
[-8.00839 -4.45193 -4.45197 0 ]ysh
196.62 409.651 mo
195.6 409.651 li
195.6 63.2713 li
196.62 63.2713 li
cp
195.6 409.651 mo
cp
199.14 408.631 mo
196.14 414.631 li
193.14 408.631 li
cp
193.14 64.2313 mo
196.14 58.2313 li
199.14 64.2313 li
f
gsave
162.48 269.611 mo
181.62 269.611 li
181.62 260.611 li
162.48 260.611 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TimesNewRomanPSMT gcheck setglobal} if
4 0 71 <00020044ffe40405058e001f002d024bb1020243545840262f4010100255
2906180d0d025506080f0f0255060c101002550600201d160a0d0d025516
0b20b8fff4401112120255200c1313025520180d0d025520b8fff8400c0f
0f0255201810100255201cba03e2001dffc0b6091002551d1f12b803e240
101340090e0255131400252509072c2c03002fed3fed3fdd2bed2fdd2bed
012f2b2b2b2b2bc0dd2bc410c02f2b2b2bcd31302b1bb106024354584052
1213140000200b0303252509071c701d01401d601d021d1f0b2c2c030b16
0c0d0d0655160410100655160b20141010065520040f0f065520020d0d06
5520202f2e290c0d0d06552906180d0d065506062f2e1112392f2bcd2b11
12392f2b2b2bc0cd2b2b003fed3fdd5d5dcd3fed1217393fddcd31301bb9
002fffc0b34747342fb8ffc040422b2e34602f7c047c058a04802faf2fc0
2f07402f802f02002f162a152b55055508542b960707480701202f370a47
0a560a9804a72aa02f07c02ff02b022020002021baffe0000bffe040453c
204f205e20660a6c207a209f009f20aa07b907c62a0b260813270c41121e
1344151d2716411c1e1d441f0020210b042c1500252509071f2c012c2c1f
030b1f000b210c20b8016740121560168016af16031f1690160216eb2950
06b8ffc0b3282e3406b8ffc0b7473506432e437f182b4e10f42b2b4dedfd
725d3cfd3c3c3c3c3c003f3ced723fed3f11173910f5edfc01f50010f5ed
fc01f531304379401a262b0408272526082920002b042920002807252001
2a052c2000002b2b012b2b2b8181005d3838383801715d00710172715d2b
2b5959250606232226353412333217353426262322072725331114161633
323717052335112e0223220706151416333202c743804a96e0f8c3794f0f
20181a2b0d01112d0f21161b2d0bfef02e063c632f58455bb06c5b67463d
fbc5c501474da99d481a102370fbdda1471c112371c901d84470394f68c8
cad7>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/d 71 def
end
TimesNewRomanPSMT /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/VCULPP+TimesNewRomanPSMT*1 
[98{/.notdef}rp /b /.notdef /d 4{/.notdef}rp /i 9{/.notdef}rp /s 
/t 139{/.notdef}rp]
VCULPP+TimesNewRomanPSMT nf
VCULPP+TimesNewRomanPSMT*1 [0 -18 -18 0 0 0 ]msf
177.72 269.612 mo
(d)sh
grestore
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TimesNewRomanPSMT gcheck setglobal} if
2 4080 18 <00010003ffe4023e058e0003005240090005cb1f6736000101b80327400d
02031402020303000002010b00b8011f40142003300360037003a003e003
0603bb01ad02cb04b8016fb1df182b10f6edf45ded003f3c3f3c87052e2b
7d10c431302b01012301023efe155001eb058efa5605aa00>TimesNewRomanPSMT AddT42Char 
2 4728 21 <0001002c000003ab0568001e0168408207180b3917181c3d3418401c3d34
19401c3d340f1e161629073c074907a9070640205b045a085b175a186b08
741174129c0b9d0e9911ac0bac0ec905c917c818d917d918e020f904f917
1515011d0419051b15191619171d180709170b180b1d3419471989178f20
0718190202171a190c19060d031902050618171615140713040db8016840
090940140c3f80090109b80333400c10051a8f19019f19af190219ba0333
0003018db301020c1eb8018d400d0006e24f135f136f137f130413b80107
4013400001001a002040208020036020a020022019bb01f90003000d0140
40145f026f027f028f02bf02cf02df02ef020802191fba018e010100182b
4e10f45d4de43ced4e105d71f65d4df45ded10ed003f3cedfd5d713c3ffd
71b10602435458b78f0901bf09cf0902005d71592be41112173911123901
111239390210b10602435458b47d198d1902005d590e3c8710057dc40ec4
31300171725d005d012b2b2b002b01032135000035342623220607233636
33321615140706070207213236363703ab5ffce0016101209e6e649f2625
19cf9ba5dd304aa6f93e01626c57461a0105fefb2501420198a981a67571
b9c6d4906767a2b5fef03810312d>TimesNewRomanPSMT AddT42Char 
3 9360 68 <00020049ffed038903af0032003d0349b1020243545840203f400d0d0255
3f4013130255151b072e25080b0b0255250c0d0d025525000c33b8fff040
0b1212025533161313025533b8ffdeb41010025533b8fff440150f0f0255
330c0d0d02553339070c0d0d0255072d2eb8ffc04020091202552e33001e
04292c30340c40090b02550c401d1d02550c40111202550cb8ffd4401e09
1202550c0c047f180118401112025518401d1d02551810251e073c2c0400
2fed3fedc42b2b5d12392f2b2b2b2bcd2ffd11123939d42bcd012f2bcd2f
2b2b2b2b2bc0c0dd2b2bc410d4cd31302b2b1b406f0b1c8a330212533601
12201f39803fa809b60a03122b127d007d3386008b0b8b35061d12163a10
3f803f04091c4c054c06452045224c3a403f891d080a0e0720002249014b
0a490b49354b37433a493d570b670b8509840a840b0f54168316021f3f5f
3f0260083300343c2e292d34bb011b000c000cffc0b609390c280b390cb8
ffc0401a3a35100c500c02400c500c600c03200c500c600c760c040c3c18
b8ffd840290b394f185f186f18032f187f1802187e1f100110251e07303c
403c023c2c04702d802d022d35292c30b803464011040b2ec02d012d6025
00330d0c0c343433b8fffcb41010065533bb016700240025ffc0401a0e39
00251f2580259025044025f0250280250125101010065525bb0243000700
15ffc0b21f3915b80167401e1b2f393107400e3920075007800703100701
f0070150070107433e436e182b4e10f45d7172722b4dedf4ed2b10fd2b5d
71722b3cfd2b3c103c103c103c10f65d3c003ff4fde45d10ed713fed72fd
5d712b11395d71722b2b2b2fb10602435458b2030c01005d59ed11123911
123939313043794047353b1c23051337383638020609080a080206212220
220206350b392000111d131c0012130f1f0d1c0122233b05391c00380834
200135340b121c101c010e22101c013a063c1c002b2b2b3c103c2b012b10
3c2b103c2b2b2a2a2a818181017201710071017172005d4358b23f12015d
59015d2b0072435c58b431400e392eb8ffe0b210392eb8ffe0b60e393720
0e3920b8ffe8b20c3920b8ffe0400b0b3918200b3917200b391cb8fff040
1a0b390a280b3937280b390a280a3937280a390a28093937280939002b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b59005d5925060706232226353437363637
353426232207061517140623222635343633321716171615111416163332
3736371506232226271106070606151416333202478d24363d5f7b1e29cb
ec57533f2526022f26252fb09f7a4e3b1c120a170f100c153c7066313a01
972c4f4456384c846d1119826a433144785624896622222c3a2e32342d56
90291f422b85fec9833b14070d3c38964493015d3c192c6039485f00>TimesNewRomanPSMT AddT42Char 
4 7228 80 <000100110000063003af005703d3b1020243545840175940121202555940
0d0d02551711080d0d025511554c30b8fff4b40f0f025530b8ffeab41010
025530b8fff4400f13130255302b080d0d02552b313746b8fff4b40f0f02
5546b8ffeab41010025546b8fff440211313025546414741080d0d025541
040f0f025541060c0c0255414c14121202554cb8fff4b40f0f02554cb8ff
f6b40d0d02554cb8ffeab4101002554cb8fffa40190c0c02554c0a131302
554c2b040f0f02552b060c0c02552b37b8fff0400b0f0f025537100d0d02
5537b8ffd4400b10100255371c1212025537b8ffea401f0c0c025537020d
0d02553702131302553711040f0f025511060c0c02551120b8ffe8400b0f
0f025520300d0d025520b8ffc2400b10100255202a1212025520b8ffda40
0b0c0c025520020d0d025520b8fffc400b131302552016192f324548b803
e24020475455400c0c02552f55014f556f557f5503555606473118252c0b
073c2c0507003fed3fed2f2f2f3fdd5d5d2bcd10fdc0c0c0c0c0012f2b2b
2b2b2b2b2bcd2b2b2f2b2b2b2b2b2b2bcd2b2b2f2b2b2b2b2b2bcd2b2b2b
c410c42b2b2b10c4102bc42b2b2b10c6102bc431302b2b1bb10602435458
403c252c0b3c2c050b070507545556071831471102101006551120041010
0655202b060f0f06552b02101006552b3741060f0f065541021010065541
4c20b8ffeab70d0d065520205837b8fff8b41010065537b8fff8b40f0f06
5537b8fff2b70d0d06553737584cb8ffeeb40f0f06554cb8fff0b4101006
554cb8fff8b70d0d06554c4c59581112392f2b2b2b11392f2b2b2b11392f
2b10cd2b2b10cd2b2b102bcd2b002f2f2f3fddcd3f3f10ed10ed313001b0
0d4b5458bf0046ffe80045ffe8002fffe80030ffe8b51a18191818183838
3838383838591b401c3407d059ef16038059011159600d5d362b0d019059
01200820291e18b802fcb42237291e31b802fc400b224c291e474a221129
1e17b8030eb4232b291e30b8030db42341291e46b8030d403e2355274d41
541e55440829374d4039292808000725475657073c2c05252c0c0a0b0706
0405074746313018170a5917171a101124213020017020b0200220b80135
400f37292e2b24383037017037b0370237b8013540164d5741244c4c1f4d
504d02804d904d02004d104d024db8ffc0b61416344d605859b8025ab321
a67f18b80164852b2b4ef42b5d71723c4d10fd3c10f471723cfde410f471
723cfd3c4e456544e6003f3c3c3c3c3c3f3c3c3f3c3c4ded10ed3f3c1112
17390111123900f5edfc01f52b2b2b2b2b2b31304379401422240c0f0d25
2326240c211c010e0f220e251c012b01103c2b2b2b81810172005d2b0171
5d5959013637363633321617363633321617161511141716163315213533
323736373635113427262322060707171114161633152135323637363511
342726232207060711141616331521353236363511342726262322072725
33015064122d6833567c15678e4b497121160d0a363dfe3c133b21170a04
1b2756356b4c0202153a46fe314c390b05212c4f3635532d19314bfe3b3f
321a09071e1a1c270f01142b02ec640f262a645f784b4b553a7cfe765620
161f24241710231150018a702e4035480b2bfe4b5e2e1f24242424115201
8a7031401d2c37fe155a361b24241b3b55015e972c21190f2470>TimesNewRomanPSMT AddT42Char 
5 1122 91 <0001001b000003e70394003803f2b10202435458400c260a183426042d00
1c1f2c2fb803e2b42d13100238b803e2b6002d1e11060006003f3f2f2f10
fdd0d0c010fdd0d0c011121739012f31301b408712450a018f0d8f0e8f11
87268734d60bd617da27da33090f2e260a250b240c720a750be632071c3a
2e0f5a36042e3f053f103f1138263f283934303a490b4f104f11461e4926
4c284b34403a56195625503a75077f0b7f107f117f167f1795079f109f11
a718bb261e0e050f100f110f2c1f101f111f2c290a29172f3a0a103a5509
5a36503a04b10602435458402413100279380138001c1f2c762f012f2e26
34180a04002e110600061e2e1d1d392e2e3a391112392f11392f002f2f3f
3f1112173910dd5dd0d0c010dd5dd0d0c031301b40a22618181917161627
3434350a0b0c0c33180a0907071926343534333525128f162f110111350c
0d0d160c1d7d19501e011e2f256f237f2302238f23012319252e2e39332d
f229292733500001007d35013505050725190707243525143535250c1627
2730330c1433330c35342618090c17332725190b382f26180a030c340735
0f1c011c1f1f2c2f2f2e131002381e00121111010100062e042d012d2d1e
1e1d0a0cb80145b56f1601162e25b8010eb320190119b8ffc0400c103540
19b019e019f0190419b8ffc0b30f123419bb0236003300070167b2352e27
b80108b300330133bb02c10039003a024db321cd89182b2bf65dedf4ed10
fd2b5d2b71edf45ded003f3c103c105d3c3f3c103c103c10fd3c3c3c10fd
3c3c103c5d011112391117390011121739870e2e2b870e7dc4870e2e182b
870e7dc4011812397d2f18ec10e45d1112392fe41112392f1112395d2f5d
10e45d10e41112392f107cec5d10e40708103c0e3c870e103c7dc4c4870e
103cc408c4070e103c083c0e3c59313001725d5d2b005d01710071435c58
b9000bfff0b20a390bb8fff8b7093917201e123f0bb8ffe8b31e123f15b8
ffe840091c113f0d401b103f18b8ffe8b31c113f18b8ffe84013170e3f05
40120b3f0718120b3f3640120b3f3ab8ffc0b7120b3f29280f390bb8fff0
b60f3925200f390ab8ffd8b20f3907b8ffe0b20f3932b8ffe0b60d392520
0d3907b8ffe0400f12392620123926201139252011390bb8ffd8b20b390a
b8ffe0b212390ab8ffe0b211390ab8ffe0401b0d39101812391118123917
40123910100f3911100f392c40153913b8fff0b2153916b8fff0b2153912
b8ffc0b215391ab8fff04013153936081539283014392930143911081639
09b8ffe0401b163929401139294015393240153932201139172011390b20
113912b8ffc0b11139012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b002b2b
2b2b59591321152206151417161717373635342623352115060706070713
161617152135323736353427270706151416171521353637363737272626
231b01af2921230b16414b4822260136312431557de4544839fe502d1913
408693442d2dfed5241b265ac0ae4a513d0394251c17183210226868631a
151d252503182272a7feb87931032424140e17175dc4c45b111827022424
05141d77fffc6c37>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/slash 18 def
/two 21 def
/a 68 def
/m 80 def
/x 91 def
end
TimesNewRomanPSMT /Encoding get
dup 47 /slash put
dup 50 /two put
dup 97 /a put
dup 109 /m put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/VCULPP+TimesNewRomanPSMT*1 
[47{/.notdef}rp /slash 2{/.notdef}rp /two 46{/.notdef}rp /a /b /.notdef 
/d 4{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s /t 
3{/.notdef}rp /x 135{/.notdef}rp]
VCULPP+TimesNewRomanPSMT nf
VCULPP+TimesNewRomanPSMT*1 [0 -12 -12 0 0 0 ]msf
182.16 260.612 mo
(max)
[-9.2424 -5.34241 0 ]ysh
VCULPP+TimesNewRomanPSMT*1 [0 -18 -18 0 0 0 ]msf
222.9 367.112 mo
(d)sh
VCULPP+TimesNewRomanPSMT*1 [0 -12 -12 0 0 0 ]msf
227.34 358.112 mo
(max)
[-9.2424 -5.34241 0 ]ysh
VCULPP+TimesNewRomanPSMT*1 [0 -18 -18 0 0 0 ]msf
222.9 337.532 mo
(/2)
[-4.98239 0 ]ysh
gsave
297.48 583.051 mo
229.98 583.051 li
229.98 -136.949 li
297.48 -136.949 li
cp
eclp
229.95 583.051 mo
297.51 583.051 li
297.51 -136.949 li
229.95 -136.949 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
410.88 415.111 mo
180.66 415.111 li
180.66 414.151 li
410.88 414.151 li
cp
181.68 417.631 mo
175.68 414.631 li
181.68 411.631 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
410.88 415.771 mo
252.72 415.771 li
252.12 415.771 251.58 415.231 251.58 414.631 cv
250.92 36.9313 li
253.14 36.9313 li
253.86 414.631 li
252.72 413.491 li
410.88 413.491 li
f
grestore
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TimesNewRomanPSMT gcheck setglobal} if
2 2802 11 <00010054fe4a027c058e0013003a40239611a71102860c8911020a980911
009801130100000a09a80e22500601068014545e182b10f65dedfd3c3c10
3c003fed3fed3130005d015d01152627260235100037150606021514171e
02027c9765909c0132f67b9e4e211a4a7dfe6f254c6691018ad4013601ff
6e2a44ecfe96c5d6af8aa79a>TimesNewRomanPSMT AddT42Char 
2 2934 12 <0001002efe4a0256058e00130039402429042a08480503009801110a9809
13000101090aa80e222006300640060306801558a4182b10f65dedfd3c3c
103c003fed3fed3130015d13351617161215100007353636123534272e02
2e98658f9cfecff77b9f4d21194b7c05642a4b6692fe77d5fecafe016e25
45eb016bc5d5b08aa69a>TimesNewRomanPSMT AddT42Char 
2 10094 36 <00020010000005b0056b001c001f0218b102024354584012011f1e021e1d
001c1e1c001d1f011e1c0214be03e2001703e2000703e2000a03e2401708
021c1e030f081c161d001f70018001020101080f0208002f3f12392f5dcd
d0cd2f2f1112173910ededeeec012f2f2f2f2f2f2f107d87c4c41087c4c4
31301b401b080e0f0f0d100a1e091f502106150f13101a111a1b1b1c181d
0621b8ffc0b2253521b8ffc0b330583421b8ffc0b32b2e3421b8ffc0b229
3521b8ffc0b320263421b8ffc0b31a1e3421b8ffc0b2173521b8ffc0b215
3521b8ffc040971013340d0f0b100a1e390f4a0f4610491e4f21590f5710
5514581e6a0f6710681e76108004870e8a0f87108712891e881f9b0f9b10
99119b1eb90fb910bd1ab91ecb0fca10c81dca1edb0fd810eb0fe810e81e
f90ff810f91df91e2c090f4b1b021f1e01011f1e02001d1e1e1c090e0a1b
09161c171b160802071b081511141b15781e0f1020101e1c1c2211101411
70110111100f0e0eb802c94011021e1402021e1f1da50000700180010201
b801b5400c08100f03151616080809081cb801fa40090f11011102a50e40
11b80230b34f1e011eb802ec400e20400e500ef00e030ea7206b8a182b10
f65d191afd5ded181a10ed105ded003f3c103c103c3f3c10f45d3c10fd3c
870e2e2b057d10c4875d0e2e182b87057dc42b180010ed0110c00010ed01
10c00010ed0110c00010ed0110c087107dc43c073c3c073c313001715d2b
2b2b2b2b2b2b2b2b01725d59012107061514161715213536373637013301
16161715213536363534270b0203a9fdf35c223b62fe555519333e01dd23
01d8395d53fde95139286ee6ec01c6d64f271f2f0725250f183093045cfb
988851052525042e212c5f010d0224fddc00>TimesNewRomanPSMT AddT42Char 
2 10742 37 <00030022000004e6054c001e002b0038027d40305a005a1e8900881e8933
991a9d27ac1aac27e91aea27e72f0c38007a2779339a329933a524aa33d8
1ad827d8280a043ab802e7b30f67363ab8ffc0b31c22343ab8ffc040e315
17343340212c343340191e34324023283432401b1d3444244425891ad901
d624da33e52507042401250d32100315061b1a141e1624162815302e3245
244a34570158195a279602111000103a55015a24603a703a803aa03a081a
301a3250000310071a241e28192f040602031e171e4f3388249a24d93307
203a403a503a6302630360056006600760307606731a731b701e74247327
7a288406861b861e8f33803aca2fda2feb24fa241959080f1f1b09212210
1f1b16212333240003042c00352b1f24032229382c33032e222835350916
2928171716022e280808090890260126b8ffc0b23a3526b8ffc0b2423526
b8ff80b33f413426b8ffc0b343463426b8ffc040144235264c5f1c010a1e
301c021c55042b1f382c31b8ffc040104535124004a004020004a004e004
0304b8ffc0400a0d113400040120040104b801d140252c06131302552c0c
0f0f02552c0c0d0d02552c22100f0e0f1002550f200d0d02550f9e393abc
01d100210061011800182b2b4ef42b2b3c4ded2b2b2bfd5d712b5d714358
b90031032de91bb90031032ded592b103c3c3c10f45d72ed2b2b2b2b2b72
003f3c10ed3f3c10ed1112392fed12173911121739113901111217392b2b
3130437940412f342328181e01071a1b191b020606262425022533262818
2633012f07313301231e2633033401313303271b29330130052e3300251d
2233001e32033533010100103c2b3c2b2b2b012b2b2b2b2b2b2b2b2a8181
8181015d7101727272007271002b2b2b2b012b2b2b005d005d0116171615
140606232135333237363511342726232335213217161615140625161633
3236363534262322071116333236353426262322060703b28d466180dfe5
fd80335525171d274d33024aa463969e7cfd7b255f3992934ec2ba645074
71b5be56c28f3e581b02b41e425c8565b95525362372036c7e212c251824
b77766a10f07073f824d77a816fb6f1ba3784f9254040500>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/A 36 def
/B 37 def
end
TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 65 /A put
dup 66 /B put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/VCULPP+TimesNewRomanPSMT*1 
[40{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash 2{/.notdef}rp /two 14{/.notdef}rp 
/A /B 30{/.notdef}rp /a /b /.notdef /d 4{/.notdef}rp 
/i 3{/.notdef}rp /m 5{/.notdef}rp /s /t 3{/.notdef}rp /x 
135{/.notdef}rp]
VCULPP+TimesNewRomanPSMT nf
VCULPP+TimesNewRomanPSMT*1 [0 -18 -18 0 0 0 ]msf
276.6 51.0918 mo
(A\(t\))
[-12.9924 -5.99023 -5.00043 0 ]ysh
256.98 443.072 mo
(B)sh
gsave
297.48 583.051 mo
229.98 583.051 li
229.98 -136.949 li
297.48 -136.949 li
cp
eclp
410.4 414.811 mo
251.76 58.4713 li
252.66 58.0513 li
411.36 414.451 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.2 .2 1 colr
f
grestore
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TimesNewRomanPSMT gcheck setglobal} if
2 8522 32 <0002002501db045c037300030007007cb10607b80327b6054f045f040204
be034c00020003032700010000ff80403b3a35000080000250008000a000
d000e0000500060605050202100101d0010130014001a001030001100120
0103015c090704040303005c08585e182b10f63c103c103c10f65d5d7172
3c103c103c003f5d712b3cfd3cf65d3cfd3c313013211521152115212504
37fbc90437fbc9037352f452>TimesNewRomanPSMT AddT42Char 
3 10958 70 <00010046ffe4034a03af002101f5b2080401b102024354584020021a060c
10100255060c0f0f0255060c0d0d02550616250f0907602170210221b8ff
c0b513130255211db8ffd4b4131402551db8ffcab6121202551d3103002f
ed2b2bc42b5d3fc4ed012f2b2b2bcdc431301bb11223b8ffc040732a2d34
0023430d5d36170d5705021c135404530553065407581b581c0767057605
80008021b41bc520d020e000e50509370147015618551c5f236018601c76
18721c8a128e1390119018a601a402af23b301c101c707c719e908e41cea
20f4011806024a1257128b1f8b208023f02307112001bcffe00020ffe000
1fffe0b2001d00b803464030102101602180210200211021202150216021
70219021a021b021c021d021e021f0210d21661ddf0f010fc7162509071d
b8ffd8b214391db8ffd8403812391d31030b21cc1f0c014f0c8f0c020c2f
100030004000600070009000b000c000e00009300040000200aa731a831a
02501a019f1a011ab8010c4012f006010006100620063006400605064322
43b9029100182b4e10f472714ded5d7271fd715de47172ed003fed2b2b3f
eded7110f45d7172e412b10602435458400a531d631d731d03931d01005d
7159393130383838013801715d005d017200722b2b435c58b4001018391b
b8fff0b613390510103901b8ffc0b2103920b8ffc0b11039002b2b2b2b01
2b5959017101060623220235340033321615140623222726262726232207
061514163332373637034a25d8839ce80101b487ae312c3b1e110b23233e
643d51a189624e3734015cb5c30106dfd8010e8f4d262f2615761f1e4a62
a1a4fb432e79>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/equal 32 def
/c 70 def
end
TimesNewRomanPSMT /Encoding get
dup 61 /equal put
dup 99 /c put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/VCULPP+TimesNewRomanPSMT*1 
[40{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash 2{/.notdef}rp /two 10{/.notdef}rp 
/equal 3{/.notdef}rp /A /B 30{/.notdef}rp /a /b /c 
/d 4{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s /t 
3{/.notdef}rp /x 135{/.notdef}rp]
VCULPP+TimesNewRomanPSMT nf
VCULPP+TimesNewRomanPSMT*1 [0 -18 -18 0 0 0 ]msf
288.18 269.612 mo
(b\(t\)=2ct)
[-8.9946 -5.98846 -4.9986 -5.98846 -10.1465 -8.9946 -7.9866 0 ]ysh
gsave
297.48 583.051 mo
229.98 583.051 li
229.98 -136.949 li
297.48 -136.949 li
cp
eclp
410.52 414.991 mo
251.82 237.091 li
252.6 236.431 li
411.24 414.331 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.2 .2 1 colr
f
grestore
240.66 409.651 mo
240.78 241.771 li
241.8 241.771 li
241.62 409.651 li
cp
244.14 408.631 mo
241.14 414.631 li
238.14 408.631 li
cp
238.32 242.731 mo
241.32 236.731 li
244.32 242.731 li
f
gsave
364.98 583.051 mo
297.48 583.051 li
297.48 -136.949 li
364.98 -136.949 li
cp
eclp
297.45 583.051 mo
365.01 583.051 li
365.01 -136.949 li
297.45 -136.949 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
410.88 415.111 mo
180.66 415.111 li
180.66 414.151 li
410.88 414.151 li
cp
181.68 417.631 mo
175.68 414.631 li
181.68 411.631 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
410.88 415.771 mo
252.72 415.771 li
252.12 415.771 251.58 415.231 251.58 414.631 cv
250.92 36.9313 li
253.14 36.9313 li
253.86 414.631 li
252.72 413.491 li
410.88 413.491 li
f
410.4 414.811 mo
251.76 58.4713 li
252.66 58.0513 li
411.36 414.451 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.2 .2 1 colr
f
410.52 414.991 mo
251.82 237.091 li
252.6 236.431 li
411.24 414.331 li
f
grestore
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TimesNewRomanPSMT gcheck setglobal} if
2 4194 19 <0002004affe803b705680010002400bab2610820b80106b2050515b80106
b20d0d1ab8010f4012091a002640260240266026a026e026042611b8010f
400e5f006f007f008f00a00005001925ba011e010100182b4e10f45d4ded
4e105d71f64ded003fed3fed31304379404c012423242224020602010301
020607251c1b1d1b1e1b030613260f250b2618191719020621041162001f
061a6201140e116200160c1a620124012062011b08206201121015620019
0a1562002b2b2b2b012b2b2b2b2a2b2b2b2a2b2a2a811334123736333217
16111402062322272637101716333236373611342726272623220706024a
8c745a609c7c9b88d362c2816dc445397136741e2e302439293a44354834
029ee8014f52419fc5feafecfeb695e5c1f7fee8b1956172ac0139e89b73
30213d53fe9c>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/zero 19 def
end
TimesNewRomanPSMT /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/VCULPP+TimesNewRomanPSMT*1 
[40{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero /.notdef /two 
10{/.notdef}rp /equal 3{/.notdef}rp /A /B 30{/.notdef}rp /a /b 
/c /d 4{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 
/t 3{/.notdef}rp /x 135{/.notdef}rp]
VCULPP+TimesNewRomanPSMT nf
VCULPP+TimesNewRomanPSMT*1 [0 -18 -18 0 0 0 ]msf
340.02 229.592 mo
(b)sh
VCULPP+TimesNewRomanPSMT*1 [0 -12 -12 0 0 0 ]msf
344.46 220.592 mo
(0)sh
VCULPP+TimesNewRomanPSMT*1 [0 -18 -18 0 0 0 ]msf
340.02 214.592 mo
(\(t\)=ct)
[-5.98666 -4.9968 -5.98666 -10.1447 -7.9848 0 ]ysh
gsave
432.48 583.051 mo
364.98 583.051 li
364.98 -136.949 li
432.48 -136.949 li
cp
eclp
364.95 583.051 mo
432.51 583.051 li
432.51 -136.949 li
364.95 -136.949 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
411.36 414.631 mo
410.4 414.631 li
410.4 46.7713 li
411.36 46.7713 li
cp
410.4 414.631 mo
cp
407.88 47.7913 mo
410.88 41.7913 li
413.88 47.7913 li
f
gsave
432.48 583.051 mo
364.98 583.051 li
364.98 -136.949 li
432.48 -136.949 li
cp
eclp
410.88 415.111 mo
180.66 415.111 li
180.66 414.151 li
410.88 414.151 li
cp
181.68 417.631 mo
175.68 414.631 li
181.68 411.631 li
f
grestore
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TimesNewRomanPSMT gcheck setglobal} if
4 722 72 <0002004cffe4035303b00014001d037db10202435458402808161415000c
0f100255000e0c0f1002550e0c0d0d02550e153040000120003000020000
10000200b8ffc0b41314025500b8ffc040111111025500000b1b25110700
0710070207b8ffc0b40f10025507b8ffc0b5131402550704b8ffd6b41314
025504b8ffcab71212025504310b0b003fed2b2bc42b2b5d3fed12392f2b
2b5d5d5ded012f2b2bdd2bc02fcdc031301bb10602435458401d158000a0
00b0000320003000400003000010000200000b1b2511070807b8ffc04024
1010065510072007b00703000760078007a00704079204a204b204030431
0b0b07081614b8fff440260d0d065514141f1e15000c0d0d0655000c0f0f
0655000e0c0f0f06550e160d0d06550e0e1f1e1112392f2b2bdd2b2bc011
12392f2bcdd0cd003fed5dc45d5d2b323fed12392f5d5d5dcd31301b4019
125f185d1960006014d6030519201c3917201c3916401c391fb8ffc0400a
434a34081f430d5d361fb8ffc0b32828341fb8ffc040532a2e341b061909
58135e165f175a185b1a07010309060709080c0515490689028c06870c8a
10851da302ab18b513d402d90fda10f402f3031312600760087007800789
09c107c80ff007080401070d84020309baffe00006ffe0404a3609460247
094f1f5402540962027202891389199913a409a40ab808b509b00ac702e7
02e00cf40a1408d007010007d007027107010007100720079007a007b007
06077d041400301615b8ffc040131239125f157f159f15df150415151bd3
040104b8ffd0b2143904b8ffe8b2133904b8ffd84048123904310b0b5c1b
011b25110707cc0816281b390f16016f167f168f160316f4141480080130
0890080230088f08df08031008400860087008b008e0080608aa0e150400
89000200b8032c4012300e400e500e03000e100e200e03f00e010eb8ffc0
4009434a340e431e434b182b4e10f42b7172724dfd713c10fd5d715d713c
10ed5d712b10ed003fed723fed2b2b2b7211392f5d4358b26f15015d592b
3cfd3c10f45d5d7172393130015d00383800715d014358b4060001020271
5971722b2b2b2b2b2b2b0072435c58b90007ffc0400b23390c402d390d40
2d3908b8ffc0b2283907b8ffc0b2283906b8ffc0b21b3907b8ffc0b21b39
08b8ffc0b21b3907b8ffc0b20a3908b8ffc0b20a3907b8ffc0b2093908b8
ffc0400e093915101939192011390d201139002b2b012b002b2b2b2b2b2b
2b2b2b2b2b2b595959130617163332363717060623220235341233321615
252126272626232206da016464875a852d1f15ca98a5ebf1b69ac6fd8701
a805101963365383023bcc747463781489e10101d9eb0107cbaa3a582438
4081>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/e 72 def
end
TimesNewRomanPSMT /Encoding get
dup 101 /e put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/VCULPP+TimesNewRomanPSMT*1 
[40{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero /.notdef /two 
10{/.notdef}rp /equal 3{/.notdef}rp /A /B 30{/.notdef}rp /a /b 
/c /d /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp 
/s /t 3{/.notdef}rp /x 135{/.notdef}rp]
VCULPP+TimesNewRomanPSMT nf
VCULPP+TimesNewRomanPSMT*1 [0 -16.02 -16.02 0 0 0 ]msf
401.88 80.9718 mo
(time)
[-4.45197 -4.45197 -12.4619 0 ]ysh
gsave
432.48 583.051 mo
364.98 583.051 li
364.98 -136.949 li
432.48 -136.949 li
cp
eclp
410.88 415.771 mo
252.72 415.771 li
252.12 415.771 251.58 415.231 251.58 414.631 cv
250.92 36.9313 li
253.14 36.9313 li
253.86 414.631 li
252.72 413.491 li
410.88 413.491 li
f
410.4 414.811 mo
251.76 58.4713 li
252.66 58.0513 li
411.36 414.451 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.2 .2 1 colr
f
410.52 414.991 mo
251.82 237.091 li
252.6 236.431 li
411.24 414.331 li
f
grestore
gsave
499.98 583.051 mo
432.48 583.051 li
432.48 -136.949 li
499.98 -136.949 li
cp
eclp
432.45 583.051 mo
500.01 583.051 li
500.01 -136.949 li
432.45 -136.949 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
gsave
567.48 583.051 mo
499.98 583.051 li
499.98 -136.949 li
567.48 -136.949 li
cp
eclp
499.95 583.051 mo
567.48 583.051 li
567.48 -136.949 li
499.95 -136.949 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
true set_gvm
%ADOBeginSubsetFont: NQPBAA+ComicSansMS Initial
ct_T42Dict begin
-0.09 -0.309 1.184 1.102
 256 array 0 1 255 {1 index exch /.notdef put} for  /NQPBAA+ComicSansMS
Type42DictBegin
[<00010000000c000c000c000c4f532f32477391c4000000cc000000566376
74205cf838e200000124000002346670676de909617c0000035800000825
676c79662bb5e80e000021a00000028a68656164d5f9789c00000b800000
003668686561119408d400000bb800000024686d74781468ecdf00000bdc
0000092c6c6f636168c06a0400001508000004986d617870057202780000
19a0000000206e616d651c3eff12000019c0000001e8707265703e31ae85
00001ba8000005f767646972000000000000000000000000000103bf0190
00050008059a053300000125059a0533000003a000af02760a08030f0702
030302020204000002870000000000000000000000004d53202000400020
fb020666fdab000008d102552000009f00000000000006660000060e0000
060e00000415001e00000000000000280000000000000000066600000000
000000000000066600000000000000000000000000000000000000000000
000000000000000000000000002200000022000000000000000000000000
00000000000000000000000000c800c80050006800440068005000b400be
00be0079003800c800c8003800dc00c800aa004400a40094001f00b70094
002c0079002c00b4001100a400e8008500fe00d20095010800d200f200d2
00aa00c800d5001300c800c800d20113001f00be000e0085001300c800dc
00dc009500e800a000b7011c014500dc00b400a0008900f200e80161013c
011d011d00aa00fe014500e800a000b400be001d0113010800f200950187
017d011d011300f200d200d2001d00b30184014c013c00d5012a01070134
010800890170013400c800be0089008900a50059016701450107013400fe
013401700187017d011d0113010800fe00a0000b006e0000000000000000
00000000000000000000003f015e00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000190000018701a4
023f02f8028a020dfe5200aa01450094405757565554535251504f4e4d4c
4b494847464544434241403f3e3d3c3b3a393837363534333231302f2e2d
2c2b2a292827262524232221201f1e1d1c1b1a191817161514131211100f
0e0d0c0b0a090807060504030201002c4523466020b02660b00426234848
2d2c452346236120b02661b004262348482d2c45234660b0206120b04660
b004262348482d2c4523462361b0206020b02661b02061b004262348482d
2c45234660b0406120b06660b004262348482d2c4523462361b0406020b0
2661b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320
b8015a51582320b08d44235920b0ed51582320b04d44235920b004265158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560
442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b1
01283e01b0282370b10228453ab10200080d2d2c45b02c234445b02b2344
2d2c2045b00325456164b050515845441b2121592d2cb00143632362b000
2342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b0
4061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c
45b0112bb0292344b0297ae4182d2cb801a65458b00943b801005458b900
2cff80b12b80444459592d2c8a03458a8a87b0112bb0292344b0297ae418
2d2c2d2c4b52582145441b23458c20b00325455258441b212159592d2c01
182f2d2c4565b02c234445b02b23442d2cb110114323430b2d2cb10e0f43
23430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343
650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b00325
2349b04060b0206320b000525823b002253823b002256538008a63381b21
2121212159012d2c4569b00943608a103a2d2c01b005251023208af500b0
016023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510
f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c
b02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b02d
23701020b02d4520b0005058b00161593a2f182d2c21210c6423648bb840
00622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c
21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c642364
8bb84000626023212d2cb4000100000015b00826b00826b00826b008260f
10161345683ab001162d2cb4000100000015b00826b00826b00826b00826
0f1016134568653ab001162d2c4523204520b10405258a505826618a8b1b
26608a8c59442d2c462346608a8a462320468a608a61b8ff806223201023
8ab12d2d8a70456020b0005058b00161b8ffc08b1bb0408c5968013a2d2c
b0332bb02a2a2d2c4523456023456023456023766818b08062202d2cb004
26b00426b00425b0042545234520b003266062636820b0032661658a2344
442d2c2045b0005458b040442045b04061441b2121592d2c45b1302f4523
456160b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b5158
20b0032545695358441b2121591b2121592d2c45b01443b0006063b00160
69442d2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158
b90033ffe0b134201bb3330034005944442d2cb0164358b00326458a5864
66b01f601b64b020606620581b21b04059b001615923586559b029234423
10b029e01b2121212121592d2cb0164358b004254564b020606620581b21
b04059b0016123586559b0292344b00425b00725082058021b0359b00525
10b004252046b0042523423cb0072510b006252046b00425b0016023423c
2058011b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0
0725082058021b0359b00425b003254348b00625b00325b0016043481b21
59212121212121212d2cb0164358b004254564b020606620581b21b04059
b0016123581b6559b0292344b00525b00825082058021b0359b0042510b0
05252046b0042523423cb00425b0072508b0072510b006252046b00425b0
016023423c2058011b0059b0042510b00525b029e0b02920456544b00725
10b00625b029e0b00525b00825082058021b0359b00525b003254348b004
25b0072508b00625b00325b0016043481b2159212121212121212d2c02b0
0425202046b004252342b0052508b003254548212121212d2c02b0032520
b0042508b0022543482121212d2c452320451820b0005020582365235923
6820b040505821b04059235865598a60442d2c4b53234b515a5820458a60
441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b
2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb013435802
1b03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b0
0425060c6423646164b0035158b00425b00425012046b01060482046b010
6048590a21211b2121592d2cb012435c580cb00425b00425060c64236461
64b807085158b00425b00425012046b8fff060482046b8fff06048590a21
211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58
b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a
034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c46234660
8a8a462320468a608a61b8ff8062232010238ab902a702a78a70456020b0
005058b00161b8ffba8b1bb0468c59b0106068013a2d2c00208a49b00051
58b04023208a3812341b2121592d2c462346608a8a462320468a608a61b8
ff8062232010238ab14b4b8a70456020b0005058b00161b8ffba8b1bb046
8c59b0106068013a2d2c01208a49b0005158b04023208a3812341b212159
2d00000000010000000500007790ecb55f0f3cf50018080000000000acc6
453b00000000c142e811ff42fd81097e08d1000000090002000000000000
0001000008d1fdab000009eeff42feef097e000100000000000000000000
00000000024b040000800000000003cf00000264000001e7007803650074
06be0020058c006406900093053c004b031b011c02ee007202ee0072043d
002f03d80030023700c60355006f01fe008f0418005404e2003d039a009e
04e200a404e2009204e2003004e2007e04e2006f04e2004604e2007604e2
0070026400b702640051030d001304150063030d003a043100340773006e
05da0083050b00bf04d2005a05c600b704ff008c04db00ad0570004f0625
0098045f004b0552005e04e300d604680065071000700660007b06630074
042a00640703004d05070075058c00850570007405e5009b053300910851
008b05ca00440515001d058c0044030300b0046600b1030300b004a600c6
0504ffdd047300950418003304bf0099041c006904b30067046200570411
004b043f003a049f0091023e00b3033affee045200a3023100ae06370079
0430007c0435004d044700770429003c03d8008b03e5002903c500410429
006d03e4003e0579004c04b9003d042afffc044e007a02ee0006035f0161
02ee000604c8006405da008305da008304d2005a04ff008c0660007b0663
007405e5009b041800420418004204180042041800420418004204180042
041c006904620057046200570462005704620057023e0060023e0019023e
ff72023eff860430007c0435005304350053043500530435005304350053
0429006d0429006d0429006d0429006d04c600330346004404fc007d0659
002505140075031900b7058d0047038c002e065d005b065d005a0710004d
047300d5047300dd0415006308b2002e0663005306b2009303d80030030d
0013030d00230516008504290016041200b905fa002d0744006905060025
05990050043700650398002807ae0041074b0043043500350431003401e7
007803d8003004dc0032036aff9904f5007b065b0062049f0013049f0013
056700b20264000005da008305da008306630074098d0082072d004d0388
002c0710004303260047032600680171004d0171003903d8003005c7003c
0373fffc0515001d067d001a04e2ffd3030d006a030d006a0545004b053f
004604c6003a01fe008f02640051034b005109ee009305da008304ff008c
05da008304ff008c04ff008c045f004b045f004b045f004b045f004b0663
0074066300740663007405e500a205e500a205e500a2023e00b3047300c2
047300aa04730116047300d50473013c047301070473016e047300d20473
012a0473011c0468ff7f01d1ffa9058c0068033a002b058c0044044e007a
033c014705c6ffd4041200b90515001d042a00640447007003d800300535
01920535017d0535019e053500a2053500a2053500a2042afffc03d80043
0355006f07ea00ad0570004f043f003a045f004b058c008503e5002904d2
005a041c006904d2005a04d2006904d200670429006d07ae0041065b0062
0355006f0504ffdd01fe008f05da00830418003305da00830418003305c6
00b706a2006705c6ffd404ff00c80462005704ff008c0462005704680065
023100ae0468006503b700ae04680065032900ae0660007b0430007c0660
007b0430007c066300740435004d0507007503d8008b0507007503d8008b
058c008503e500290570007403c5004105700074051d004105e5009b0429
006d05e5009b0429006d058c0044044e007a058c0044044e007a04ee00b6
06630074051b005b044300330435004d03ef009c0435004d03c5004104ec
00720504ffdd03990078043700c3098300640903004b043e00b304f80039
0171003902a600390690004e03e90014047301d105da00830418003304d2
005a041c006904d2005a041c006904ff008c0462005704ff008c04620057
04ff008c046200570570004f043f003a0570004f043f003a0570004f043f
003a06250098049f00910625ffdd049ffff4045f004b023eff42045f004b
023effae045f004b023eff81045f004b023e00300552005e033affc804e3
00d6045200a30452007d04680065023100ae0660007b0430007c0660007b
0430007c066300740435004d066300740435004d0507007503d8003b058c
008503e500290570002a03c5004105e5009b0429005a05e5009b0429006d
05e5009b0429006d05e5009b0429006d0851008b0579004c0515001d042a
fffc031b0117031b0157031b01570411013a05da00830418004208b2002e
066300530435003501fe008f0851008b0579004c0851008b0579004c0851
008b0579004c0515001d042afffc04e2ff66065900540465003d053500a2
053500a2053500a2053500a20473007905da00830650008e07dd00c3060d
002c0703005f06cd002d07c20041023eff9305da0083050b00bf04ff008c
058c004406250098045f004b04e300d605840010071000700660007b05c3
00560663007407440069042a006405fa007b057000740515001d05ca0044
05640046045f004b0515001d0443003303ef009c0430007c0429004a04b1
006f03e4003e041c00690430007c04e2003d023e00b30452007b03e4003e
03e4003e041c00690435004d0435001f041c00690429004a04b9002004af
004006150038023eff860429004a0435004d0429004a0615003804ff008c
06cd002a04ee00b604d2005a058c0085045f004b045f004b0552005e0800
001907d1003006c6002a051100a10515001d05d6007b05da008304d6009b
050b00bf04ee00b60625005a04ff008c06e0001e04cf004205fb008105fb
0081051100a105e9001907100070062500980663007407440069042a0064
04d2005a057000740515001d051b005b05ca00440630007b04f000690740
006307a8006306140026089a009b04d6009b053c0058090b00510507001a
041800330435004c0408008303c3008604be002104620057057600420384
006a051800630518006303f00081052d001e05e0002c047a004b04bb0045
052d00d404470077041c006903c50041042afffc067b005504b9003d04f3
00b10445004b062d006b0658006b04f800110653008003ef0080041b006c
07380054040b002204620057047bffbd03c30086041b004f03e50029023e
00b3023eff86033affee071e001e06310059049fffbd03f00081042afffc
04f3008904ee00b603c30086071000430942007b05e0016c052401820524
0171052401780524016604e50038074b0043023e00af0950002905abffe9
05ab027e05ab027e05abffe905ab027e05abffe904000025058c008503e5
00290570007403c50041023e00b300000036003600360036003600360036
003600360036003600360036003600360036003600360036003600a100a1
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014501450145014501450145
014501450145014501450145014501450145014500010000024b009c0007
006c00050002001000400058000002af012d000300010000000a007e0001
000000000000003200000001000000000003001200320001000000000004
001200440001000000000006001200560003000104090000006400680003
000104090001002400cc0003000104090002000e00f00003000104090003
002400fe000300010409000400240122000300010409000600240146a920
32303036204d6963726f736f667420436f72706f726174696f6e2e20416c
6c207269676874732072657365727665642e454e424747492b436f6d6963
53616e734d53454e424747492b436f6d696353616e734d53454e42474749
2b436f6d696353616e734d5300a9002000320030003000360020004d0069
00630072006f0073006f0066007400200043006f00720070006f00720061
00740069006f006e002e00200041006c006c002000720069006700680074
0073002000720065007300650072007600650064002e0045004e00420047
00470049002b0043006f006d0069006300530061006e0073004d00530052
006500670075006c006100720045004e0042004700470049002b0043006f
006d0069006300530061006e0073004d00530045004e0042004700470049
002b0043006f006d0069006300530061006e0073004d00530045004e0042
004700470049002b0043006f006d0069006300530061006e0073004d0053
bd000f0118007f0117008f0117400d037fa08fa09fa0afa0bfa00500ba01
100010011040097f828f829f82af82a0b80110b2bf82b0ba01100009ffc0
40ff4410144612110840b29393343e7a7a333e9494343e7b7b333e979733
3e7272333e9898333e6060333e6b6b333e4d4d333e5454333e4e4e333e56
56333e4141333e3a3a333e3d3d333e4949333e4242333e4f4f333e666633
3e6161333e957b343ea698343e9660343e5f6b343e714d343e4a54343e4b
4e343e6956343e5041343e3c3a343e393d343e3b49343e4542343e514f34
3e4c66343e6a61343ec61601ababdb3eacacdb3e9c9cdb3e8080db3e9d9d
db3eadaddb3eaeaedb3eafafdb3eb0b0db3e8e8edb3e8181db3e6d6ddb3e
9090da3e6262da3e8484da3e7575da3e5e5edb3eb1b1da3e6e6edb3ea1a1
da3e8aabdf3e8bacdf3eaa9cdf3e7380df40ff3ea79de03e999ddf3ea99d
dc3e7cade03e8caddf3e7daddc3e86aee03e8daedf3e65aedc3e87afe03e
9aafdf3e5aafdc3ea8b0e03e7fb0df3e57b0dc3e888ee03e788edf3e5c8e
dc3e6f81e03e7981df3e5581dc3e6c6de03e746ddf3e466ddc3e6490e03e
5b90df3e8f90de3e5890dc3e5d90db3e6362e03e3762df3e9e62de3e4762
dc3e3862db3e6784e03e3f84df3e9f84de3e4084dc3e4384db3e3e75df3e
8375de3e5275dc3e4475db3e485edf3e7e5edc3e70b1df3e76b1dc3e82b1
db3e596edf3e896edc3e9ba1df3ea0a1de3e77a1dc3ee0dd3ddfdd3ddedd
3ddcd93ddbd93ddad93dddd83dd9d83dd7d43dd6d43dd5d43dd3d03dd2d0
3dd1d03d4077d4cf3dd0cf3dcecb3dcdcb3dcccb3dcac73dc9c73dc8c73d
cbc63dc7c63dc5c23dc4c23dc3c23dc1be3dc0be3dbfbe3dc2bd3dbebd3d
d8bc3dcfbc3dc6bc3dbdbc3d230e45220c45210a452008451f06451e0445
1d02451c00451a08180816081408120810080e080c080a08080806080408
0208000800014bb0c063004b6220b0f65323b8010a515ab005234201b012
4b004b54424bb807ff524bb008505b58b101018e5918b9000101ff858d16
2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b182b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
b16262456920b0005458b040605944b2ab3c7db80187b46539ac3c7ab801
7db210399cb80380b44d3a9c3c76b80170b24e397ab8017db41039803c68
b80145b210399db80240b43b3a9d3c63b80134b23c3968b80145b41039ad
3c5bb8011db46539ae3c58b80113b42139af3c54b8010840336539b03c51
fe10398e3c4df26539813c4ae818396d3c46dc6539903c43d23339623c40
c80239b13c33a05c396e3c30951039a1b801804017533aa13c2c89543930
95103975c0213a753c3ab422395eb802404011643a5ec0213a5e3c36aa65
393ab4223984b80280400e643a843c3dbe653940c8023930c8702b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b1842011d4bb0105358b0611d594bb0655358b0001db1160042
59b50f3f3200933cb901360184b31d397a3cb9011a0161b30a39943cb901
0a014cb43f397b3cfdb8013cb41539973ceeb8012ab44839723ce3b8011c
b2043998b801a0b42f3a983cd2b80107b23039e3b8011c40700439603caa
d54e396b3ca0c822394d3c92b71039543c83a43f394e3c76940839563c6a
855439413c617914393a3c53682a393d3c405002394f3c232c1139663c19
1f29396160533a613c0f135439191f2939232c11394260293a423c2d382a
3949e0533a493c3644543940500239305019702b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b18702b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b0145695342014b5058b108
004259435c58b108004259b3020b0a124358601b2159422b7373730000>
[651 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 108 20 <0001009effff032106170030004b402d2a430a4301311f132f133f134f13
5f136f130613111c042e432a1e212443112a2716431106430a27430f3201
0d2f5dedc4e47dc418e410c410fdc4c410ed003fddc45d10d4eded313005
23272227263534331f013426353413362706232226353437363736333215
14061514161514021514161737321615140602c0c7c6461c339d30291117
16018625283b5636635850430c07301001692a3737010109123a65010230
bc2f7f0103ff84683c272f432654594d175b1721862172fe3c713aa63502
37292a36>NQPBAA+ComicSansMS AddT42Char 
1 322 22 <00010092ffd2043b05f6003c00964070061c261b331b4d15441c6b15641c
076a03015609592860096928041b151f372b15341c541b551c660f651b64
1c6a23700974170c37171b23090f2823432f0f43000b3d2f045913591f6f
1c79007602054b1d5b376c2b6c37042b6b060106191f4333331343403a01
3a1006600602063d10d45ddd5ded332ffdc4105dc45d5d003f10f4ed10fd
c410c4123939192f5d5d5d31305d05222726272635343633321f011e0133
32373635342726272635343f013e013736272623220f0106232226353437
363332171615140706071e01151400025d9778872f063d28281d2e247a55
6d52576f62a26f57ef4546010246498444407121142839998556d77e87be
11168584feea2e3f49841211283525453131444868975a4e110b4f3b1f3b
19553d5836382147153d274f49415f66bdeb4b070731c392c5feed00>NQPBAA+ComicSansMS AddT42Char 
1 0 0 <0002008000000380066600030007004440220607a00201000504a003000a
0929292c020605a1030302000704a101002b085669182b4e10f43c4dfd3c
10dd3c10fd3c4e10456544e6003f3c4dfd3c3f3cfd3c3130331121112521
1121800300fd800200fe000666f99a800566>NQPBAA+ComicSansMS AddT42Char 
NQPBAA+ComicSansMS /CharStrings get begin
/one 20 def
/three 22 def
end
NQPBAA+ComicSansMS /Encoding get
dup 49 /one put
dup 51 /three put
pop
end
%ADOEndSubsetFont
reset_gvm
/VCULPQ+ComicSansMS /NQPBAA+ComicSansMS findfont ct_VMDictPut
/VCULPQ+ComicSansMS*1 
[49{/.notdef}rp /one /.notdef /three 204{/.notdef}rp]
VCULPQ+ComicSansMS nf
VCULPQ+ComicSansMS*1 [0 -13.98 -13.98 0 0 0 ]msf
563.82 -105.508 mo
(13)
[-6.29657 0 ]ysh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
true set_gvm
/VCULPQ+ComicSansMS*1 uf
/VCULPQ+ComicSansMS uf
/NQPBAA+ComicSansMS uf
/VCULPO+TimesNewRomanPS-BoldMT*1 uf
/VCULPO+TimesNewRomanPS-BoldMT uf
/TimesNewRomanPS-BoldMT uf
/VCULPP+TimesNewRomanPSMT*1 uf
/VCULPP+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
