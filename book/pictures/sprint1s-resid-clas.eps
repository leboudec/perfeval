%!PS-Adobe-3.0 EPSF-3.0
%%Title: (ITSM.pdf)
%%Version: 1 2
%%CreationDate: (D:20030320105905)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 23 490 579 812
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

23 490 moveto
579 490 lineto
579 812 lineto
23 812 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial
[/N8/Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
23 490 556 322 re W n
/N9 [/CIEBasedABC <<
/MatrixLMN [0.412399 0.212601 0.0193024 0.357605 0.715195 
0.119202 0.180496 0.0722046 0.9505 ]
/DecodeLMN [{2.22221 exp}bind dup dup]
/WhitePoint [0.9505 1 1.089]
>>]/ColorSpace defineRes pop
/N26 <<
/SA false 
/TR {}
/SM 0.02 
>> /ExtGState defineRes pop
/N9 /ColorSpace findRes cs
1 1 1 sc
/N26 /ExtGState findRes gs
1 i
25.56 816.44 543.60001 -317.16 rf
61.2 806.60001 490.2 -290.88 rf
/N9 /ColorSpace findRes CS
0 0 0.502 SC
1 J
1 j
0.12 w
10 M
[]0 d
61.08 515.72 490.32001 291 re
61.08 526.52 m
54.96001 526.52 l
S 
28.44 529.16 26.52 -5.39999 rf
BT
/N8 1 Tf
6.25259 0 0 4.9406 28.44 524.8403 Tm
0 0 0 sc
0 Tc
0 Tw
( -8.0E+07)Tj 
ET
61.08 557.60001 m
54.96001 557.60001 l
S 
1 1 1 sc
28.44 560.24001 26.52 -5.39999 rf
BT
6.25259 0 0 4.9406 28.44 555.9203 Tm
0 0 0 sc
( -6.0E+07)Tj 
ET
61.08 588.67999 m
54.96001 588.67999 l
S 
1 1 1 sc
28.44 591.32001 26.52 -5.39999 rf
BT
6.25259 0 0 4.9406 28.44 587.00031 Tm
0 0 0 sc
( -4.0E+07)Tj 
ET
61.08 619.75999 m
54.96001 619.75999 l
S 
1 1 1 sc
28.44 622.39999 26.52 -5.39999 rf
BT
6.25259 0 0 4.9406 28.44 618.08031 Tm
0 0 0 sc
( -2.0E+07)Tj 
ET
61.08 650.84 m
54.96001 650.84 l
S 
1 1 1 sc
28.8 653.48 26.16 -5.39999 rf
BT
6.25259 0 0 4.9406 28.8 649.16029 Tm
0 0 0 sc
(  0.0E+00)Tj 
ET
61.08 681.8 m
54.96001 681.8 l
S 
1 1 1 sc
28.8 684.44 26.16 -5.39999 rf
BT
6.25259 0 0 4.9406 28.8 680.1203 Tm
0 0 0 sc
(  2.0E+07)Tj 
ET
61.08 712.88 m
54.96001 712.88 l
S 
1 1 1 sc
28.8 715.52 26.16 -5.39999 rf
BT
6.25259 0 0 4.9406 28.8 711.2003 Tm
0 0 0 sc
(  4.0E+07)Tj 
ET
61.08 743.96001 m
54.96001 743.96001 l
S 
1 1 1 sc
28.8 746.60001 26.16 -5.39999 rf
BT
6.25259 0 0 4.9406 28.8 742.2803 Tm
0 0 0 sc
(  6.0E+07)Tj 
ET
61.08 775.03999 m
54.96001 775.03999 l
S 
1 1 1 sc
28.8 777.67999 26.16 -5.39999 rf
BT
6.25259 0 0 4.9406 28.8 773.36031 Tm
0 0 0 sc
(  8.0E+07)Tj 
ET
61.08 806.12 m
54.96001 806.12 l
S 
1 1 1 sc
28.8 808.75999 26.16 -5.39999 rf
BT
6.25259 0 0 4.9406 28.8 804.44029 Tm
0 0 0 sc
(  1.0E+08)Tj 
ET
70.8 515.60001 m
70.8 512 l
S 
1 1 1 sc
69.12 512 3.36 -5.39999 rf
BT
6.25259 0 0 4.9406 69.12 507.6803 Tm
0 0 0 sc
(0)Tj 
ET
168.48 515.60001 m
168.48 512 l
S 
1 1 1 sc
165.12 512 6.72 -5.39999 rf
BT
6.25259 0 0 4.9406 165.12 507.6803 Tm
0 0 0 sc
(50)Tj 
ET
266.16 515.60001 m
266.16 512 l
S 
1 1 1 sc
261.12 512 10.08 -5.39999 rf
BT
6.25259 0 0 4.9406 261.12 507.6803 Tm
0 0 0 sc
(100)Tj 
ET
363.84 515.60001 m
363.84 512 l
S 
1 1 1 sc
358.8 512 10.08 -5.39999 rf
BT
6.25259 0 0 4.9406 358.8 507.6803 Tm
0 0 0 sc
(150)Tj 
ET
461.64 515.60001 m
461.64 512 l
S 
1 1 1 sc
456.60001 512 10.08 -5.39999 rf
BT
6.25259 0 0 4.9406 456.60001 507.6803 Tm
0 0 0 sc
(200)Tj 
ET
1 1 1 sc
297.60001 812.36 17.16 -5.39999 rf
BT
6.25259 0 0 4.9406 297.60001 808.0403 Tm
0 0 0 sc
(Series)Tj 
ET
0 0.62399 0.502 SC
72.72 680.24001 m
72.72 680.24001 l
74.64 646.52 l
76.56 634.03999 l
78.60001 643.64 l
80.52 640.52 l
82.44 641.60001 l
84.48 644.96001 l
86.39999 666.8 l
88.32001 668 l
90.24001 667.64 l
92.28 664.64 l
94.2 673.39999 l
96.12 684.2 l
98.16 694.64 l
100.08 698 l
102 689.60001 l
103.92 640.52 l
105.96001 602.96001 l
107.88 592.88 l
109.8 595.16 l
111.84 597.67999 l
113.75999 608.48 l
115.67999 633.32001 l
117.60001 644.84 l
119.64 643.52 l
121.56 654.67999 l
123.48 653.72 l
125.52 659.96001 l
127.44 667.52 l
129.36 665.84 l
131.28 667.03999 l
133.32001 647.24001 l
135.24001 647.60001 l
137.16 658.03999 l
139.2 647.36 l
141.12 653.84 l
143.03999 664.75999 l
144.96001 663.92 l
147 652.39999 l
148.92 658.39999 l
150.84 646.16 l
152.88 646.39999 l
154.8 641.24001 l
156.72 637.03999 l
158.64 646.39999 l
160.67999 648.2 l
162.60001 647.12 l
164.52 646.28 l
166.56 636.44 l
168.48 638 l
170.39999 633.56 l
172.32001 664.16 l
174.36 676.03999 l
176.28 683.24001 l
178.2 684.32001 l
180.24001 666.8 l
182.16 673.75999 l
184.08 665 l
186 652.64 l
188.03999 646.28 l
189.96001 653.12 l
191.88 648.44 l
193.92 652.16 l
195.84 652.28 l
197.75999 645.67999 l
199.67999 661.16 l
201.72 654.44 l
203.64 671.84 l
205.56 698.12 l
207.60001 698.24001 l
209.52 698 l
211.44 679.64 l
213.36 664.16 l
215.39999 666.67999 l
217.32001 641.24001 l
219.24001 636.67999 l
221.28 630.08 l
223.2 638.60001 l
225.12 643.88 l
227.03999 653.48 l
229.08 646.88 l
231 659.72 l
232.92 658.28 l
234.96001 666.67999 l
236.88 676.88 l
238.8 681.8 l
240.72 684.67999 l
242.75999 677.72 l
244.67999 665.72 l
246.60001 654.67999 l
248.64 653.72 l
250.56 643.16 l
252.48 637.75999 l
254.39999 634.75999 l
256.44 639.67999 l
258.36 649.64 l
260.28 640.64 l
262.32001 659.48 l
264.24001 653.96001 l
266.16 661.88 l
268.08 671.24001 l
270.12 656.60001 l
272.03999 641.84 l
273.96001 645.56 l
276 635.36 l
277.92 628.64 l
279.84 633.67999 l
281.75999 642.08 l
283.8 641.24001 l
285.72 638.60001 l
287.64 629.36 l
289.67999 626.12 l
291.60001 598.16 l
293.52 539.96001 l
295.44 562.16 l
297.48 577.64 l
299.39999 581.60001 l
301.32001 568.64 l
303.36 590.48 l
305.28 613.52 l
307.2 612.8 l
309.12 617.24001 l
311.16 622.28 l
313.08 635.48 l
315 639.2 l
317.03999 639.56 l
318.96001 635 l
S 
318.96001 635 m
320.88 633.44 l
322.8 601.88 l
324.84 569.24001 l
326.75999 556.75999 l
328.67999 571.75999 l
330.72 591.44 l
332.64 605.48 l
334.56 604.16 l
336.48 616.88 l
338.52 623 l
340.44 625.39999 l
342.36 631.75999 l
344.39999 640.03999 l
346.32001 639.08 l
348.24001 659.72 l
350.16 671.60001 l
352.2 641 l
354.12 649.88 l
356.03999 676.03999 l
358.08 674.36 l
360 686.96001 l
361.92 699.2 l
363.84 705.56 l
365.88 699.2 l
367.8 689.84 l
369.72 674.36 l
371.75999 676.28 l
373.67999 662.84 l
375.60001 679.28 l
377.52 664.16 l
379.56 652.88 l
381.48 647.72 l
383.39999 662.12 l
385.44 669.44 l
387.36 686.48 l
389.28 681.67999 l
391.2 674.72 l
393.24001 693.8 l
395.16 719.36 l
397.08 711.44 l
399.12 694.03999 l
401.03999 693.8 l
402.96001 691.39999 l
404.88 706.03999 l
406.92 683.36 l
408.84 670.64 l
410.75999 664.52 l
412.8 663.56 l
414.72 678.67999 l
416.64 674.24001 l
418.56 696.67999 l
420.60001 699.92 l
422.52 706.75999 l
424.44 719.96001 l
426.48 731.96001 l
428.39999 720.32001 l
430.32001 706.39999 l
432.24001 703.88 l
434.28 695 l
436.2 706.64 l
438.12 687.8 l
440.16 680.60001 l
442.08 674.36 l
444 673.39999 l
445.92 680.48 l
447.96001 683.96001 l
449.88 700.88 l
451.8 719.24001 l
453.84 731.60001 l
455.75999 665.48 l
457.67999 600.56 l
459.60001 599.84 l
461.64 601.52 l
S 
461.64 601.52 m
463.56 603.08 l
465.48 611.24001 l
467.52 620.36 l
469.44 617.84 l
471.36 618.08 l
473.28 608.12 l
475.32001 597.32001 l
477.24001 606.8 l
479.16 590.48 l
481.2 581.96001 l
483.12 590 l
485.03999 590.36 l
486.96001 610.88 l
489 613.39999 l
490.92 609.8 l
492.84 610.03999 l
494.88 601.75999 l
496.8 616.39999 l
498.72 634.28 l
500.64 647.36 l
502.67999 655.39999 l
504.60001 653.72 l
506.52 651.32001 l
508.56 645.44 l
510.48 782.48 l
512.39999 774.2 l
514.32001 777.92 l
516.36 648.44 l
518.28 554.24001 l
520.2 563.24001 l
522.24001 569.24001 l
524.16 591.8 l
526.08 606.92 l
528 618.2 l
530.03999 642.2 l
531.96001 664.39999 l
533.88 682.64 l
535.92 674.36 l
537.84 666.44 l
539.75999 659.72 l
S 
1 1 1 sc
72.60001 680.36 0.24001 -0.24001 rf
0 0.62399 0.565 SC
72.48 680.12 0.36 0.36 re
S 
74.52 646.64 0.24001 -0.24001 rf
74.39999 646.39999 0.36 0.36 re
S 
76.44 634.16 0.24001 -0.24001 rf
76.32001 633.92 0.36 0.36 re
S 
78.48 643.75999 0.24001 -0.24001 rf
78.36 643.52 0.36 0.36 re
S 
80.39999 640.64 0.24001 -0.24001 rf
80.28 640.39999 0.36 0.36 re
S 
82.32001 641.72 0.24001 -0.24001 rf
82.2 641.48 0.36 0.36 re
S 
84.36 645.08 0.24001 -0.24001 rf
84.24001 644.84 0.36 0.36 re
S 
86.28 666.92 0.24001 -0.24001 rf
86.16 666.67999 0.36 0.36 re
S 
88.2 668.12 0.24001 -0.24001 rf
88.08 667.88 0.36 0.36 re
S 
90.12 667.75999 0.24001 -0.24001 rf
90 667.52 0.36 0.36 re
S 
92.16 664.75999 0.24001 -0.24001 rf
92.03999 664.52 0.36 0.36 re
S 
94.08 673.52 0.24001 -0.24001 rf
93.96001 673.28 0.36 0.36 re
S 
96 684.32001 0.24001 -0.24001 rf
95.88 684.08 0.36 0.36 re
S 
98.03999 694.75999 0.24001 -0.24001 rf
97.92 694.52 0.36 0.36 re
S 
99.96001 698.12 0.24001 -0.24001 rf
99.84 697.88 0.36 0.36 re
S 
101.88 689.72 0.24001 -0.24001 rf
101.75999 689.48 0.36 0.36 re
S 
103.8 640.64 0.24001 -0.24001 rf
103.67999 640.39999 0.36 0.36 re
S 
105.84 603.08 0.24001 -0.24001 rf
105.72 602.84 0.36 0.36 re
S 
107.75999 593 0.24001 -0.24001 rf
107.64 592.75999 0.36 0.36 re
S 
109.67999 595.28 0.24001 -0.24001 rf
109.56 595.03999 0.36 0.36 re
S 
111.72 597.8 0.24001 -0.24001 rf
111.60001 597.56 0.36 0.36 re
S 
113.64 608.60001 0.24001 -0.24001 rf
113.52 608.36 0.36 0.36 re
S 
115.56 633.44 0.24001 -0.24001 rf
115.44 633.2 0.36 0.36 re
S 
117.48 644.96001 0.24001 -0.24001 rf
117.36 644.72 0.36 0.36 re
S 
119.52 643.64 0.24001 -0.24001 rf
119.39999 643.39999 0.36 0.36 re
S 
121.44 654.8 0.24001 -0.24001 rf
121.32001 654.56 0.36 0.36 re
S 
123.36 653.84 0.24001 -0.24001 rf
123.24001 653.60001 0.36 0.36 re
S 
125.39999 660.08 0.24001 -0.24001 rf
125.28 659.84 0.36 0.36 re
S 
127.32001 667.64 0.24001 -0.24001 rf
127.2 667.39999 0.36 0.36 re
S 
129.24001 665.96001 0.24001 -0.24001 rf
129.12 665.72 0.36 0.36 re
S 
131.16 667.16 0.24001 -0.24001 rf
131.03999 666.92 0.36 0.36 re
S 
133.2 647.36 0.24001 -0.24001 rf
133.08 647.12 0.36 0.36 re
S 
135.12 647.72 0.24001 -0.24001 rf
135 647.48 0.36 0.36 re
S 
137.03999 658.16 0.24001 -0.24001 rf
136.92 657.92 0.36 0.36 re
S 
139.08 647.48 0.24001 -0.24001 rf
138.96001 647.24001 0.36 0.36 re
S 
141 653.96001 0.24001 -0.24001 rf
140.88 653.72 0.36 0.36 re
S 
142.92 664.88 0.24001 -0.24001 rf
142.8 664.64 0.36 0.36 re
S 
144.84 664.03999 0.24001 -0.24001 rf
144.72 663.8 0.36 0.36 re
S 
146.88 652.52 0.24001 -0.24001 rf
146.75999 652.28 0.36 0.36 re
S 
148.8 658.52 0.24001 -0.24001 rf
148.67999 658.28 0.36 0.36 re
S 
150.72 646.28 0.24001 -0.24001 rf
150.60001 646.03999 0.36 0.36 re
S 
152.75999 646.52 0.24001 -0.24001 rf
152.64 646.28 0.36 0.36 re
S 
154.67999 641.36 0.24001 -0.24001 rf
154.56 641.12 0.36 0.36 re
S 
156.60001 637.16 0.24001 -0.24001 rf
156.48 636.92 0.36 0.36 re
S 
158.52 646.52 0.24001 -0.24001 rf
158.39999 646.28 0.36 0.36 re
S 
160.56 648.32001 0.24001 -0.24001 rf
160.44 648.08 0.36 0.36 re
S 
162.48 647.24001 0.24001 -0.24001 rf
162.36 647 0.36 0.36 re
S 
164.39999 646.39999 0.24001 -0.24001 rf
164.28 646.16 0.36 0.36 re
S 
166.44 636.56 0.24001 -0.24001 rf
166.32001 636.32001 0.36 0.36 re
S 
168.36 638.12 0.24001 -0.24001 rf
168.24001 637.88 0.36 0.36 re
S 
170.28 633.67999 0.24001 -0.24001 rf
170.16 633.44 0.36 0.36 re
S 
172.2 664.28 0.24001 -0.24001 rf
172.08 664.03999 0.36 0.36 re
S 
174.24001 676.16 0.24001 -0.24001 rf
174.12 675.92 0.36 0.36 re
S 
176.16 683.36 0.24001 -0.24001 rf
176.03999 683.12 0.36 0.36 re
S 
178.08 684.44 0.24001 -0.24001 rf
177.96001 684.2 0.36 0.36 re
S 
180.12 666.92 0.24001 -0.24001 rf
180 666.67999 0.36 0.36 re
S 
182.03999 673.88 0.24001 -0.24001 rf
181.92 673.64 0.36 0.36 re
S 
183.96001 665.12 0.24001 -0.24001 rf
183.84 664.88 0.36 0.36 re
S 
185.88 652.75999 0.24001 -0.24001 rf
185.75999 652.52 0.36 0.36 re
S 
187.92 646.39999 0.24001 -0.24001 rf
187.8 646.16 0.36 0.36 re
S 
189.84 653.24001 0.24001 -0.24001 rf
189.72 653 0.36 0.36 re
S 
191.75999 648.56 0.24001 -0.24001 rf
191.64 648.32001 0.36 0.36 re
S 
193.8 652.28 0.24001 -0.24001 rf
193.67999 652.03999 0.36 0.36 re
S 
195.72 652.39999 0.24001 -0.24001 rf
195.60001 652.16 0.36 0.36 re
S 
197.64 645.8 0.24001 -0.24001 rf
197.52 645.56 0.36 0.36 re
S 
199.56 661.28 0.24001 -0.24001 rf
199.44 661.03999 0.36 0.36 re
S 
201.60001 654.56 0.24001 -0.24001 rf
201.48 654.32001 0.36 0.36 re
S 
203.52 671.96001 0.24001 -0.24001 rf
203.39999 671.72 0.36 0.36 re
S 
205.44 698.24001 0.24001 -0.24001 rf
205.32001 698 0.36 0.36 re
S 
207.48 698.36 0.24001 -0.24001 rf
207.36 698.12 0.36 0.36 re
S 
209.39999 698.12 0.24001 -0.24001 rf
209.28 697.88 0.36 0.36 re
S 
211.32001 679.75999 0.24001 -0.24001 rf
211.2 679.52 0.36 0.36 re
S 
213.24001 664.28 0.24001 -0.24001 rf
213.12 664.03999 0.36 0.36 re
S 
215.28 666.8 0.24001 -0.24001 rf
215.16 666.56 0.36 0.36 re
S 
217.2 641.36 0.24001 -0.24001 rf
217.08 641.12 0.36 0.36 re
S 
219.12 636.8 0.24001 -0.24001 rf
219 636.56 0.36 0.36 re
S 
221.16 630.2 0.24001 -0.24001 rf
221.03999 629.96001 0.36 0.36 re
S 
223.08 638.72 0.24001 -0.24001 rf
222.96001 638.48 0.36 0.36 re
S 
225 644 0.24001 -0.24001 rf
224.88 643.75999 0.36 0.36 re
S 
226.92 653.60001 0.24001 -0.24001 rf
226.8 653.36 0.36 0.36 re
S 
228.96001 647 0.24001 -0.24001 rf
228.84 646.75999 0.36 0.36 re
S 
230.88 659.84 0.24001 -0.24001 rf
230.75999 659.60001 0.36 0.36 re
S 
232.8 658.39999 0.24001 -0.24001 rf
232.67999 658.16 0.36 0.36 re
S 
234.84 666.8 0.24001 -0.24001 rf
234.72 666.56 0.36 0.36 re
S 
236.75999 677 0.24001 -0.24001 rf
236.64 676.75999 0.36 0.36 re
S 
238.67999 681.92 0.24001 -0.24001 rf
238.56 681.67999 0.36 0.36 re
S 
240.60001 684.8 0.24001 -0.24001 rf
240.48 684.56 0.36 0.36 re
S 
242.64 677.84 0.24001 -0.24001 rf
242.52 677.60001 0.36 0.36 re
S 
244.56 665.84 0.24001 -0.24001 rf
244.44 665.60001 0.36 0.36 re
S 
246.48 654.8 0.24001 -0.24001 rf
246.36 654.56 0.36 0.36 re
S 
248.52 653.84 0.24001 -0.24001 rf
248.39999 653.60001 0.36 0.36 re
S 
250.44 643.28 0.24001 -0.24001 rf
250.32001 643.03999 0.36 0.36 re
S 
252.36 637.88 0.24001 -0.24001 rf
252.24001 637.64 0.36 0.36 re
S 
254.28 634.88 0.24001 -0.24001 rf
254.16 634.64 0.36 0.36 re
S 
256.32001 639.8 0.24001 -0.24001 rf
256.2 639.56 0.36 0.36 re
S 
258.24001 649.75999 0.24001 -0.24001 rf
258.12 649.52 0.36 0.36 re
S 
260.16 640.75999 0.24001 -0.24001 rf
260.03999 640.52 0.36 0.36 re
S 
262.2 659.60001 0.24001 -0.24001 rf
262.08 659.36 0.36 0.36 re
S 
264.12 654.08 0.24001 -0.24001 rf
264 653.84 0.36 0.36 re
S 
266.03999 662 0.24001 -0.24001 rf
265.92 661.75999 0.36 0.36 re
S 
267.96001 671.36 0.24001 -0.24001 rf
267.84 671.12 0.36 0.36 re
S 
270 656.72 0.24001 -0.24001 rf
269.88 656.48 0.36 0.36 re
S 
271.92 641.96001 0.24001 -0.24001 rf
271.8 641.72 0.36 0.36 re
S 
273.84 645.67999 0.24001 -0.24001 rf
273.72 645.44 0.36 0.36 re
S 
275.88 635.48 0.24001 -0.24001 rf
275.75999 635.24001 0.36 0.36 re
S 
277.8 628.75999 0.24001 -0.24001 rf
277.67999 628.52 0.36 0.36 re
S 
279.72 633.8 0.24001 -0.24001 rf
279.60001 633.56 0.36 0.36 re
S 
281.64 642.2 0.24001 -0.24001 rf
281.52 641.96001 0.36 0.36 re
S 
283.67999 641.36 0.24001 -0.24001 rf
283.56 641.12 0.36 0.36 re
S 
285.60001 638.72 0.24001 -0.24001 rf
285.48 638.48 0.36 0.36 re
S 
287.52 629.48 0.24001 -0.24001 rf
287.39999 629.24001 0.36 0.36 re
S 
289.56 626.24001 0.24001 -0.24001 rf
289.44 626 0.36 0.36 re
S 
291.48 598.28 0.24001 -0.24001 rf
291.36 598.03999 0.36 0.36 re
S 
293.39999 540.08 0.24001 -0.24001 rf
293.28 539.84 0.36 0.36 re
S 
295.32001 562.28 0.24001 -0.24001 rf
295.2 562.03999 0.36 0.36 re
S 
297.36 577.75999 0.24001 -0.24001 rf
297.24001 577.52 0.36 0.36 re
S 
299.28 581.72 0.24001 -0.24001 rf
299.16 581.48 0.36 0.36 re
S 
301.2 568.75999 0.24001 -0.24001 rf
301.08 568.52 0.36 0.36 re
S 
303.24001 590.60001 0.24001 -0.24001 rf
303.12 590.36 0.36 0.36 re
S 
305.16 613.64 0.24001 -0.24001 rf
305.03999 613.39999 0.36 0.36 re
S 
307.08 612.92 0.24001 -0.24001 rf
306.96001 612.67999 0.36 0.36 re
S 
309 617.36 0.24001 -0.24001 rf
308.88 617.12 0.36 0.36 re
S 
311.03999 622.39999 0.24001 -0.24001 rf
310.92 622.16 0.36 0.36 re
S 
312.96001 635.60001 0.24001 -0.24001 rf
312.84 635.36 0.36 0.36 re
S 
314.88 639.32001 0.24001 -0.24001 rf
314.75999 639.08 0.36 0.36 re
S 
316.92 639.67999 0.24001 -0.24001 rf
316.8 639.44 0.36 0.36 re
S 
318.84 635.12 0.24001 -0.24001 rf
318.72 634.88 0.36 0.36 re
S 
320.75999 633.56 0.24001 -0.24001 rf
320.64 633.32001 0.36 0.36 re
S 
322.67999 602 0.24001 -0.24001 rf
322.56 601.75999 0.36 0.36 re
S 
324.72 569.36 0.24001 -0.24001 rf
324.60001 569.12 0.36 0.36 re
S 
326.64 556.88 0.24001 -0.24001 rf
326.52 556.64 0.36 0.36 re
S 
328.56 571.88 0.24001 -0.24001 rf
328.44 571.64 0.36 0.36 re
S 
330.60001 591.56 0.24001 -0.24001 rf
330.48 591.32001 0.36 0.36 re
S 
332.52 605.60001 0.24001 -0.24001 rf
332.39999 605.36 0.36 0.36 re
S 
334.44 604.28 0.24001 -0.24001 rf
334.32001 604.03999 0.36 0.36 re
S 
336.36 617 0.24001 -0.24001 rf
336.24001 616.75999 0.36 0.36 re
S 
338.39999 623.12 0.24001 -0.24001 rf
338.28 622.88 0.36 0.36 re
S 
340.32001 625.52 0.24001 -0.24001 rf
340.2 625.28 0.36 0.36 re
S 
342.24001 631.88 0.24001 -0.24001 rf
342.12 631.64 0.36 0.36 re
S 
344.28 640.16 0.24001 -0.24001 rf
344.16 639.92 0.36 0.36 re
S 
346.2 639.2 0.24001 -0.24001 rf
346.08 638.96001 0.36 0.36 re
S 
348.12 659.84 0.24001 -0.24001 rf
348 659.60001 0.36 0.36 re
S 
350.03999 671.72 0.24001 -0.24001 rf
349.92 671.48 0.36 0.36 re
S 
352.08 641.12 0.24001 -0.24001 rf
351.96001 640.88 0.36 0.36 re
S 
354 650 0.24001 -0.24001 rf
353.88 649.75999 0.36 0.36 re
S 
355.92 676.16 0.24001 -0.24001 rf
355.8 675.92 0.36 0.36 re
S 
357.96001 674.48 0.24001 -0.24001 rf
357.84 674.24001 0.36 0.36 re
S 
359.88 687.08 0.24001 -0.24001 rf
359.75999 686.84 0.36 0.36 re
S 
361.8 699.32001 0.24001 -0.24001 rf
361.67999 699.08 0.36 0.36 re
S 
363.72 705.67999 0.24001 -0.24001 rf
363.60001 705.44 0.36 0.36 re
S 
365.75999 699.32001 0.24001 -0.24001 rf
365.64 699.08 0.36 0.36 re
S 
367.67999 689.96001 0.24001 -0.24001 rf
367.56 689.72 0.36 0.36 re
S 
369.60001 674.48 0.24001 -0.24001 rf
369.48 674.24001 0.36 0.36 re
S 
371.64 676.39999 0.24001 -0.24001 rf
371.52 676.16 0.36 0.36 re
S 
373.56 662.96001 0.24001 -0.24001 rf
373.44 662.72 0.36 0.36 re
S 
375.48 679.39999 0.24001 -0.24001 rf
375.36 679.16 0.36 0.36 re
S 
377.39999 664.28 0.24001 -0.24001 rf
377.28 664.03999 0.36 0.36 re
S 
379.44 653 0.24001 -0.24001 rf
379.32001 652.75999 0.36 0.36 re
S 
381.36 647.84 0.24001 -0.24001 rf
381.24001 647.60001 0.36 0.36 re
S 
383.28 662.24001 0.24001 -0.24001 rf
383.16 662 0.36 0.36 re
S 
385.32001 669.56 0.24001 -0.24001 rf
385.2 669.32001 0.36 0.36 re
S 
387.24001 686.60001 0.24001 -0.24001 rf
387.12 686.36 0.36 0.36 re
S 
389.16 681.8 0.24001 -0.24001 rf
389.03999 681.56 0.36 0.36 re
S 
391.08 674.84 0.24001 -0.24001 rf
390.96001 674.60001 0.36 0.36 re
S 
393.12 693.92 0.24001 -0.24001 rf
393 693.67999 0.36 0.36 re
S 
395.03999 719.48 0.24001 -0.24001 rf
394.92 719.24001 0.36 0.36 re
S 
396.96001 711.56 0.24001 -0.24001 rf
396.84 711.32001 0.36 0.36 re
S 
399 694.16 0.24001 -0.24001 rf
398.88 693.92 0.36 0.36 re
S 
400.92 693.92 0.24001 -0.24001 rf
400.8 693.67999 0.36 0.36 re
S 
402.84 691.52 0.24001 -0.24001 rf
402.72 691.28 0.36 0.36 re
S 
404.75999 706.16 0.24001 -0.24001 rf
404.64 705.92 0.36 0.36 re
S 
406.8 683.48 0.24001 -0.24001 rf
406.67999 683.24001 0.36 0.36 re
S 
408.72 670.75999 0.24001 -0.24001 rf
408.60001 670.52 0.36 0.36 re
S 
410.64 664.64 0.24001 -0.24001 rf
410.52 664.39999 0.36 0.36 re
S 
412.67999 663.67999 0.24001 -0.24001 rf
412.56 663.44 0.36 0.36 re
S 
414.60001 678.8 0.24001 -0.24001 rf
414.48 678.56 0.36 0.36 re
S 
416.52 674.36 0.24001 -0.24001 rf
416.39999 674.12 0.36 0.36 re
S 
418.44 696.8 0.24001 -0.24001 rf
418.32001 696.56 0.36 0.36 re
S 
420.48 700.03999 0.24001 -0.24001 rf
420.36 699.8 0.36 0.36 re
S 
422.39999 706.88 0.24001 -0.24001 rf
422.28 706.64 0.36 0.36 re
S 
424.32001 720.08 0.24001 -0.24001 rf
424.2 719.84 0.36 0.36 re
S 
426.36 732.08 0.24001 -0.24001 rf
426.24001 731.84 0.36 0.36 re
S 
428.28 720.44 0.24001 -0.24001 rf
428.16 720.2 0.36 0.36 re
S 
430.2 706.52 0.24001 -0.24001 rf
430.08 706.28 0.36 0.36 re
S 
432.12 704 0.24001 -0.24001 rf
432 703.75999 0.36 0.36 re
S 
434.16 695.12 0.24001 -0.24001 rf
434.03999 694.88 0.36 0.36 re
S 
436.08 706.75999 0.24001 -0.24001 rf
435.96001 706.52 0.36 0.36 re
S 
438 687.92 0.24001 -0.24001 rf
437.88 687.67999 0.36 0.36 re
S 
440.03999 680.72 0.24001 -0.24001 rf
439.92 680.48 0.36 0.36 re
S 
441.96001 674.48 0.24001 -0.24001 rf
441.84 674.24001 0.36 0.36 re
S 
443.88 673.52 0.24001 -0.24001 rf
443.75999 673.28 0.36 0.36 re
S 
445.8 680.60001 0.24001 -0.24001 rf
445.67999 680.36 0.36 0.36 re
S 
447.84 684.08 0.24001 -0.24001 rf
447.72 683.84 0.36 0.36 re
S 
449.75999 701 0.24001 -0.24001 rf
449.64 700.75999 0.36 0.36 re
S 
451.67999 719.36 0.24001 -0.24001 rf
451.56 719.12 0.36 0.36 re
S 
453.72 731.72 0.24001 -0.24001 rf
453.60001 731.48 0.36 0.36 re
S 
455.64 665.60001 0.24001 -0.24001 rf
455.52 665.36 0.36 0.36 re
S 
457.56 600.67999 0.24001 -0.24001 rf
457.44 600.44 0.36 0.36 re
S 
459.48 599.96001 0.24001 -0.24001 rf
459.36 599.72 0.36 0.36 re
S 
461.52 601.64 0.24001 -0.24001 rf
461.39999 601.39999 0.36 0.36 re
S 
463.44 603.2 0.24001 -0.24001 rf
463.32001 602.96001 0.36 0.36 re
S 
465.36 611.36 0.24001 -0.24001 rf
465.24001 611.12 0.36 0.36 re
S 
467.39999 620.48 0.24001 -0.24001 rf
467.28 620.24001 0.36 0.36 re
S 
469.32001 617.96001 0.24001 -0.24001 rf
469.2 617.72 0.36 0.36 re
S 
471.24001 618.2 0.24001 -0.24001 rf
471.12 617.96001 0.36 0.36 re
S 
473.16 608.24001 0.24001 -0.24001 rf
473.03999 608 0.36 0.36 re
S 
475.2 597.44 0.24001 -0.24001 rf
475.08 597.2 0.36 0.36 re
S 
477.12 606.92 0.24001 -0.24001 rf
477 606.67999 0.36 0.36 re
S 
479.03999 590.60001 0.24001 -0.24001 rf
478.92 590.36 0.36 0.36 re
S 
481.08 582.08 0.24001 -0.24001 rf
480.96001 581.84 0.36 0.36 re
S 
483 590.12 0.24001 -0.24001 rf
482.88 589.88 0.36 0.36 re
S 
484.92 590.48 0.24001 -0.24001 rf
484.8 590.24001 0.36 0.36 re
S 
486.84 611 0.24001 -0.24001 rf
486.72 610.75999 0.36 0.36 re
S 
488.88 613.52 0.24001 -0.24001 rf
488.75999 613.28 0.36 0.36 re
S 
490.8 609.92 0.24001 -0.24001 rf
490.67999 609.67999 0.36 0.36 re
S 
492.72 610.16 0.24001 -0.24001 rf
492.60001 609.92 0.36 0.36 re
S 
494.75999 601.88 0.24001 -0.24001 rf
494.64 601.64 0.36 0.36 re
S 
496.67999 616.52 0.24001 -0.24001 rf
496.56 616.28 0.36 0.36 re
S 
498.60001 634.39999 0.24001 -0.24001 rf
498.48 634.16 0.36 0.36 re
S 
500.52 647.48 0.24001 -0.24001 rf
500.39999 647.24001 0.36 0.36 re
S 
502.56 655.52 0.24001 -0.24001 rf
502.44 655.28 0.36 0.36 re
S 
504.48 653.84 0.24001 -0.24001 rf
504.36 653.60001 0.36 0.36 re
S 
506.39999 651.44 0.24001 -0.24001 rf
506.28 651.2 0.36 0.36 re
S 
508.44 645.56 0.24001 -0.24001 rf
508.32001 645.32001 0.36 0.36 re
S 
510.36 782.60001 0.24001 -0.24001 rf
510.24001 782.36 0.36 0.36 re
S 
512.28 774.32001 0.24001 -0.24001 rf
512.16 774.08 0.36 0.36 re
S 
514.2 778.03999 0.24001 -0.24001 rf
514.08 777.8 0.36 0.36 re
S 
516.24001 648.56 0.24001 -0.24001 rf
516.12 648.32001 0.36 0.36 re
S 
518.16 554.36 0.24001 -0.24001 rf
518.03999 554.12 0.36 0.36 re
S 
520.08 563.36 0.24001 -0.24001 rf
519.96001 563.12 0.36 0.36 re
S 
522.12 569.36 0.24001 -0.24001 rf
522 569.12 0.36 0.36 re
S 
524.03999 591.92 0.24001 -0.24001 rf
523.92 591.67999 0.36 0.36 re
S 
525.96001 607.03999 0.24001 -0.24001 rf
525.84 606.8 0.36 0.36 re
S 
527.88 618.32001 0.24001 -0.24001 rf
527.75999 618.08 0.36 0.36 re
S 
529.92 642.32001 0.24001 -0.24001 rf
529.8 642.08 0.36 0.36 re
S 
531.84 664.52 0.24001 -0.24001 rf
531.72 664.28 0.36 0.36 re
S 
533.75999 682.75999 0.24001 -0.24001 rf
533.64 682.52 0.36 0.36 re
S 
535.8 674.48 0.24001 -0.24001 rf
535.67999 674.24001 0.36 0.36 re
S 
537.72 666.56 0.24001 -0.24001 rf
537.60001 666.32001 0.36 0.36 re
S 
539.64 659.84 0.24001 -0.24001 rf
539.52 659.60001 0.36 0.36 re
S 
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Arial
%%EOF
