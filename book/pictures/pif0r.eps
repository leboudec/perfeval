%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: C:\Documents and Settings\leboudec\Desktop\evidbackup\leboudec\DocsDeCours\perf\perf 05\calculs\conf\compare cis and pis\pif0r.eps
%%CreationDate: 09/15/2004  09:34:36
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    78   212   552   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    78   212   552   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  728   274  5682  4515 rc
85 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 rf
6 w
0 4227 5362 0 0 -4227 899 4616 4 MP
PP
-5362 0 0 4227 5362 0 0 -4227 899 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
 899  389 mt 6261  389 L
 899 4616 mt 6261 4616 L
6261 4616 mt 6261  389 L
 899 4616 mt  899  389 L
 899 4616 mt 6261 4616 L
 899 4616 mt  899  389 L
 899 4616 mt  899 4562 L
 899  389 mt  899  442 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 866 4761 mt 
(0) s
1435 4616 mt 1435 4562 L
1435  389 mt 1435  442 L
1369 4761 mt 
(10) s
1971 4616 mt 1971 4562 L
1971  389 mt 1971  442 L
1905 4761 mt 
(20) s
2507 4616 mt 2507 4562 L
2507  389 mt 2507  442 L
2441 4761 mt 
(30) s
3043 4616 mt 3043 4562 L
3043  389 mt 3043  442 L
2977 4761 mt 
(40) s
3580 4616 mt 3580 4562 L
3580  389 mt 3580  442 L
3514 4761 mt 
(50) s
4116 4616 mt 4116 4562 L
4116  389 mt 4116  442 L
4050 4761 mt 
(60) s
4652 4616 mt 4652 4562 L
4652  389 mt 4652  442 L
4586 4761 mt 
(70) s
5188 4616 mt 5188 4562 L
5188  389 mt 5188  442 L
5122 4761 mt 
(80) s
5724 4616 mt 5724 4562 L
5724  389 mt 5724  442 L
5658 4761 mt 
(90) s
6261 4616 mt 6261 4562 L
6261  389 mt 6261  442 L
6161 4761 mt 
(100) s
 899 4616 mt  952 4616 L
6261 4616 mt 6207 4616 L
 728 4660 mt 
(-4) s
 899 4193 mt  952 4193 L
6261 4193 mt 6207 4193 L
 728 4237 mt 
(-3) s
 899 3770 mt  952 3770 L
6261 3770 mt 6207 3770 L
 728 3814 mt 
(-2) s
 899 3347 mt  952 3347 L
6261 3347 mt 6207 3347 L
 728 3391 mt 
(-1) s
 899 2925 mt  952 2925 L
6261 2925 mt 6207 2925 L
 798 2969 mt 
(0) s
 899 2502 mt  952 2502 L
6261 2502 mt 6207 2502 L
 798 2546 mt 
(1) s
 899 2079 mt  952 2079 L
6261 2079 mt 6207 2079 L
 798 2123 mt 
(2) s
 899 1657 mt  952 1657 L
6261 1657 mt 6207 1657 L
 798 1701 mt 
(3) s
 899 1234 mt  952 1234 L
6261 1234 mt 6207 1234 L
 798 1278 mt 
(4) s
 899  811 mt  952  811 L
6261  811 mt 6207  811 L
 798  855 mt 
(5) s
 899  389 mt  952  389 L
6261  389 mt 6207  389 L
 798  433 mt 
(6) s
 899  389 mt 6261  389 L
 899 4616 mt 6261 4616 L
6261 4616 mt 6261  389 L
 899 4616 mt  899  389 L
gs 899 389 5363 4228 rc
gr

24 W
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
952 1683 PD
24 W
1006 3455 PD
24 W
1059 1764 PD
24 W
1113 2028 PD
24 W
1167 4292 PD
24 W
1220 2260 PD
24 W
1274 3319 PD
24 W
1327 2084 PD
24 W
1381 3155 PD
24 W
1435 2270 PD
24 W
1488 1905 PD
24 W
1542 674 PD
24 W
1596 1023 PD
24 W
1649 2031 PD
24 W
1703 2931 PD
24 W
1756 1890 PD
24 W
1810 1646 PD
24 W
1864 1711 PD
24 W
1917 2501 PD
24 W
1971 2476 PD
24 W
2025 3141 PD
24 W
2078 1619 PD
24 W
2132 2448 PD
24 W
2185 2208 PD
24 W
2239 2661 PD
24 W
2293 1290 PD
24 W
2346 2744 PD
24 W
2400 1488 PD
24 W
2453 3525 PD
24 W
2507 465 PD
24 W
2561 2588 PD
24 W
2614 3894 PD
24 W
2668 1569 PD
24 W
2722 743 PD
24 W
2775 2971 PD
24 W
2829 1174 PD
24 W
2882 1676 PD
24 W
2936 3207 PD
24 W
2990 2061 PD
24 W
3043 1717 PD
24 W
3097 1483 PD
24 W
3151 3909 PD
24 W
3204 2504 PD
24 W
3258 1915 PD
24 W
3311 465 PD
24 W
3365 1495 PD
24 W
3419 4021 PD
24 W
3472 2857 PD
24 W
3526 1565 PD
24 W
3580 1916 PD
24 W
3633 3104 PD
24 W
3687 1263 PD
24 W
3740 2766 PD
24 W
3794 1889 PD
24 W
3848 1207 PD
24 W
3901 3029 PD
24 W
3955 2694 PD
24 W
4008 1947 PD
24 W
4062 2881 PD
24 W
4116 1656 PD
24 W
4169 1699 PD
24 W
4223 2038 PD
24 W
4277 2356 PD
24 W
4330 1694 PD
24 W
4384 2103 PD
24 W
4437 2717 PD
24 W
4491 2724 PD
24 W
4545 1784 PD
24 W
4598 2502 PD
24 W
4652 1829 PD
24 W
4706 2081 PD
24 W
4759 1270 PD
24 W
4813 3130 PD
24 W
4866 3516 PD
24 W
4920 3304 PD
24 W
4974 2806 PD
24 W
5027 1365 PD
24 W
5081 1542 PD
24 W
5134 3102 PD
24 W
5188 691 PD
24 W
5242 2413 PD
24 W
5295 3121 PD
24 W
5349 2906 PD
24 W
5403 2904 PD
24 W
5456 2537 PD
24 W
5510 3500 PD
24 W
5563 1890 PD
24 W
5617 1595 PD
24 W
5671 3053 PD
24 W
5724 1607 PD
24 W
5778 1532 PD
24 W
5832 1579 PD
24 W
5885 4098 PD
24 W
5939 1959 PD
24 W
5992 1857 PD
24 W
6046 2604 PD
24 W
6100 2851 PD
24 W
6153 2890 PD
24 W
6207 3364 PD
24 W
6261 3924 PD
gs 899 389 5363 4228 rc
gr


end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
