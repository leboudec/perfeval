%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: pif8.eps
%%CreationDate: 11/19/2004  22:46:33
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    55   199   546   602
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    55   199   546   602
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 22.2222 def
portraitMode 0400 13600 csm

  823   204 10922  8973 rc
85 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 12812 9605 rf
11.1111 w
0 7828 9929 0 0 -7828 1665 8548 4 MP
PP
-9929 0 0 7828 9929 0 0 -7828 1665 8548 5 MP stroke
7.40741 w
DO
SO
11.1111 w
0 sg
1665  720 mt 11594  720 L
1665 8548 mt 11594 8548 L
11594 8548 mt 11594  720 L
1665 8548 mt 1665  720 L
1665 8548 mt 11594 8548 L
1665 8548 mt 1665  720 L
1665 8548 mt 1665 8448 L
1665  720 mt 1665  819 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 222.222 FMSR

1475 8818 mt 
(-3) s
3319 8548 mt 3319 8448 L
3319  720 mt 3319  819 L
3129 8818 mt 
(-2) s
4974 8548 mt 4974 8448 L
4974  720 mt 4974  819 L
4784 8818 mt 
(-1) s
6629 8548 mt 6629 8448 L
6629  720 mt 6629  819 L
6568 8818 mt 
(0) s
8284 8548 mt 8284 8448 L
8284  720 mt 8284  819 L
8223 8818 mt 
(1) s
9939 8548 mt 9939 8448 L
9939  720 mt 9939  819 L
9878 8818 mt 
(2) s
11594 8548 mt 11594 8448 L
11594  720 mt 11594  819 L
11533 8818 mt 
(3) s
1665 8548 mt 1764 8548 L
11594 8548 mt 11494 8548 L
1225 8630 mt 
(-50) s
1665 7569 mt 1764 7569 L
11594 7569 mt 11494 7569 L
1478 7651 mt 
(0) s
1665 6591 mt 1764 6591 L
11594 6591 mt 11494 6591 L
1354 6673 mt 
(50) s
1665 5612 mt 1764 5612 L
11594 5612 mt 11494 5612 L
1231 5694 mt 
(100) s
1665 4634 mt 1764 4634 L
11594 4634 mt 11494 4634 L
1231 4716 mt 
(150) s
1665 3655 mt 1764 3655 L
11594 3655 mt 11494 3655 L
1231 3737 mt 
(200) s
1665 2677 mt 1764 2677 L
11594 2677 mt 11494 2677 L
1231 2759 mt 
(250) s
1665 1698 mt 1764 1698 L
11594 1698 mt 11494 1698 L
1231 1780 mt 
(300) s
1665  720 mt 1764  720 L
11594  720 mt 11494  720 L
1231  802 mt 
(350) s
1665  720 mt 11594  720 L
1665 8548 mt 11594 8548 L
11594 8548 mt 11594  720 L
1665 8548 mt 1665  720 L
gs 1665 720 9930 7829 rc
gr

/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
2300 7568 mt 2432 7568 L
2366 7502 mt 2366 7634 L
2972 7568 mt 3104 7568 L
3038 7502 mt 3038 7634 L
3320 7568 mt 3452 7568 L
3386 7502 mt 3386 7634 L
3565 7567 mt 3697 7567 L
3631 7501 mt 3631 7633 L
3757 7567 mt 3889 7567 L
3823 7501 mt 3823 7633 L
3918 7567 mt 4050 7567 L
3984 7501 mt 3984 7633 L
4057 7564 mt 4189 7564 L
4123 7498 mt 4123 7630 L
4181 7564 mt 4313 7564 L
4247 7498 mt 4247 7630 L
4292 7564 mt 4424 7564 L
4358 7498 mt 4358 7630 L
4394 7563 mt 4526 7563 L
4460 7497 mt 4460 7629 L
4489 7562 mt 4621 7562 L
4555 7496 mt 4555 7628 L
4577 7561 mt 4709 7561 L
4643 7495 mt 4643 7627 L
4659 7561 mt 4791 7561 L
4725 7495 mt 4725 7627 L
4738 7559 mt 4870 7559 L
4804 7493 mt 4804 7625 L
4812 7558 mt 4944 7558 L
4878 7492 mt 4878 7624 L
4883 7557 mt 5015 7557 L
4949 7491 mt 4949 7623 L
4951 7557 mt 5083 7557 L
5017 7491 mt 5017 7623 L
5016 7557 mt 5148 7557 L
5082 7491 mt 5082 7623 L
5079 7556 mt 5211 7556 L
5145 7490 mt 5145 7622 L
5140 7556 mt 5272 7556 L
5206 7490 mt 5206 7622 L
5200 7555 mt 5332 7555 L
5266 7489 mt 5266 7621 L
5257 7554 mt 5389 7554 L
5323 7488 mt 5323 7620 L
5313 7551 mt 5445 7551 L
5379 7485 mt 5379 7617 L
5367 7550 mt 5499 7550 L
5433 7484 mt 5433 7616 L
5421 7549 mt 5553 7549 L
5487 7483 mt 5487 7615 L
5473 7548 mt 5605 7548 L
5539 7482 mt 5539 7614 L
5524 7548 mt 5656 7548 L
5590 7482 mt 5590 7614 L
5574 7547 mt 5706 7547 L
5640 7481 mt 5640 7613 L
5623 7546 mt 5755 7546 L
5689 7480 mt 5689 7612 L
5671 7546 mt 5803 7546 L
5737 7480 mt 5737 7612 L
5719 7543 mt 5851 7543 L
5785 7477 mt 5785 7609 L
5766 7541 mt 5898 7541 L
5832 7475 mt 5832 7607 L
5812 7539 mt 5944 7539 L
5878 7473 mt 5878 7605 L
5858 7538 mt 5990 7538 L
5924 7472 mt 5924 7604 L
5903 7537 mt 6035 7537 L
5969 7471 mt 5969 7603 L
5948 7535 mt 6080 7535 L
6014 7469 mt 6014 7601 L
5992 7532 mt 6124 7532 L
6058 7466 mt 6058 7598 L
6036 7527 mt 6168 7527 L
6102 7461 mt 6102 7593 L
6079 7526 mt 6211 7526 L
6145 7460 mt 6145 7592 L
6122 7520 mt 6254 7520 L
6188 7454 mt 6188 7586 L
6165 7516 mt 6297 7516 L
6231 7450 mt 6231 7582 L
6208 7516 mt 6340 7516 L
6274 7450 mt 6274 7582 L
6250 7516 mt 6382 7516 L
6316 7450 mt 6316 7582 L
6292 7512 mt 6424 7512 L
6358 7446 mt 6358 7578 L
6334 7509 mt 6466 7509 L
6400 7443 mt 6400 7575 L
6376 7503 mt 6508 7503 L
6442 7437 mt 6442 7569 L
6418 7494 mt 6550 7494 L
6484 7428 mt 6484 7560 L
6459 7477 mt 6591 7477 L
6525 7411 mt 6525 7543 L
6501 7475 mt 6633 7475 L
6567 7409 mt 6567 7541 L
6542 7462 mt 6674 7462 L
6608 7396 mt 6608 7528 L
6584 7432 mt 6716 7432 L
6650 7366 mt 6650 7498 L
6625 7426 mt 6757 7426 L
6691 7360 mt 6691 7492 L
6667 7425 mt 6799 7425 L
6733 7359 mt 6733 7491 L
6708 7418 mt 6840 7418 L
6774 7352 mt 6774 7484 L
6750 7409 mt 6882 7409 L
6816 7343 mt 6816 7475 L
6792 7407 mt 6924 7407 L
6858 7341 mt 6858 7473 L
6834 7406 mt 6966 7406 L
6900 7340 mt 6900 7472 L
6876 7377 mt 7008 7377 L
6942 7311 mt 6942 7443 L
6918 7371 mt 7050 7371 L
6984 7305 mt 6984 7437 L
6961 7356 mt 7093 7356 L
7027 7290 mt 7027 7422 L
7004 7355 mt 7136 7355 L
7070 7289 mt 7070 7421 L
7047 7351 mt 7179 7351 L
7113 7285 mt 7113 7417 L
7090 7343 mt 7222 7343 L
7156 7277 mt 7156 7409 L
7134 7343 mt 7266 7343 L
7200 7277 mt 7200 7409 L
7178 7342 mt 7310 7342 L
7244 7276 mt 7244 7408 L
7223 7324 mt 7355 7324 L
7289 7258 mt 7289 7390 L
7268 7308 mt 7400 7308 L
7334 7242 mt 7334 7374 L
7314 7278 mt 7446 7278 L
7380 7212 mt 7380 7344 L
7360 7264 mt 7492 7264 L
7426 7198 mt 7426 7330 L
7407 7228 mt 7539 7228 L
7473 7162 mt 7473 7294 L
7455 7224 mt 7587 7224 L
7521 7158 mt 7521 7290 L
7503 7213 mt 7635 7213 L
7569 7147 mt 7569 7279 L
7552 7209 mt 7684 7209 L
7618 7143 mt 7618 7275 L
7602 7200 mt 7734 7200 L
7668 7134 mt 7668 7266 L
7653 7194 mt 7785 7194 L
7719 7128 mt 7719 7260 L
7705 7175 mt 7837 7175 L
7771 7109 mt 7771 7241 L
7759 7166 mt 7891 7166 L
7825 7100 mt 7825 7232 L
7813 7139 mt 7945 7139 L
7879 7073 mt 7879 7205 L
7869 7127 mt 8001 7127 L
7935 7061 mt 7935 7193 L
7926 7115 mt 8058 7115 L
7992 7049 mt 7992 7181 L
7986 7097 mt 8118 7097 L
8052 7031 mt 8052 7163 L
8047 7085 mt 8179 7085 L
8113 7019 mt 8113 7151 L
8110 7081 mt 8242 7081 L
8176 7015 mt 8176 7147 L
8175 7053 mt 8307 7053 L
8241 6987 mt 8241 7119 L
8243 7041 mt 8375 7041 L
8309 6975 mt 8309 7107 L
8314 6993 mt 8446 6993 L
8380 6927 mt 8380 7059 L
8388 6984 mt 8520 6984 L
8454 6918 mt 8454 7050 L
8467 6976 mt 8599 6976 L
8533 6910 mt 8533 7042 L
8549 6785 mt 8681 6785 L
8615 6719 mt 8615 6851 L
8637 6634 mt 8769 6634 L
8703 6568 mt 8703 6700 L
8732 6587 mt 8864 6587 L
8798 6521 mt 8798 6653 L
8834 6573 mt 8966 6573 L
8900 6507 mt 8900 6639 L
8945 6431 mt 9077 6431 L
9011 6365 mt 9011 6497 L
9069 6339 mt 9201 6339 L
9135 6273 mt 9135 6405 L
9208 5808 mt 9340 5808 L
9274 5742 mt 9274 5874 L
9369 4156 mt 9501 4156 L
9435 4090 mt 9435 4222 L
9561 3714 mt 9693 3714 L
9627 3648 mt 9627 3780 L
9806 3546 mt 9938 3546 L
9872 3480 mt 9872 3612 L
10154  976 mt 10286  976 L
10220  910 mt 10220 1042 L
10826  976 mt 10958  976 L
10892  910 mt 10892 1042 L
gs 1665 720 9930 7829 rc
/c9 { 0.000000 0.500000 0.000000 sr} bdef
c9
2232 -365 5513 7549 2 MP stroke
DD
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
8526 -1389 2366 8061 2 MP stroke
gr

c10
DD
0 sg
5294 9082 mt 
(Standard Normal Quantiles) s
1074 5907 mt  -90 rotate
(Quantiles of Input Sample) s
90 rotate
4219  543 mt 
(QQ Plot of Sample Data versus Standard Normal) s
SO

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
